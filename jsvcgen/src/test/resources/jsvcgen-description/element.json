{
  "type" : "application/json+jsvcgen-description",
  "version" : "8.0",
  "servicename" : "SolidFireElement",
  "host" : "${MVIP}",
  "endpoint" : "/json-rpc/${version}/",
  "schemes" : [ "https" ],
  "documentation" : [ "The API for controlling a SolidFire cluster." ],
  "types" : [ {
    "name" : "Account",
    "documentation" : [ "The object containing information about an account.", "This object only includes \"configured\" information about the account, not any runtime or usage information." ],
    "members" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "Unique AccountID for the account."
    }, {
      "name" : "username",
      "type" : "Name",
      "documentation" : "User name for the account."
    }, {
      "name" : "status",
      "type" : "AccountStatus",
      "documentation" : "Current status of the account."
    }, {
      "name" : "volumes",
      "type" : [ "VolumeID" ],
      "documentation" : "List of VolumeIDs for Volumes owned by this account."
    }, {
      "name" : "initiatorSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : "CHAP secret to use for the initiator."
    }, {
      "name" : "targetSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : "CHAP secret to use for the target (mutual CHAP authentication)."
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "AccountStatus",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "active",
        "documentation" : "The account can log into volumes."
      }, {
        "value" : "locked",
        "documentation" : "The account is locked and cannot log into volumes."
      }, {
        "value" : "removed",
        "documentation" : "The account has been deleted, but is not yet purged from the system.",
        "deprecated" : {
          "version" : "8.0",
          "message" : "Accounts are deleted immediately, to this value is no longer used."
        }
      } ]
    }
  }, {
    "name" : "AddAccountResult",
    "members" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "AccountID for the newly created Account."
    } ]
  }, {
    "name" : "GetAccountResult",
    "members" : [ {
      "name" : "account",
      "type" : "Account",
      "documentation" : "Account details."
    } ]
  }, {
    "name" : "ModifyAccountResult",
    "members" : [ ]
  }, {
    "name" : "RemoveAccountResult",
    "members" : [ ]
  }, {
    "name" : "ListAccountsResult",
    "members" : [ {
      "name" : "accounts",
      "type" : [ "Account" ],
      "documentation" : "List of accounts."
    } ]
  }, {
    "name" : "BackupTarget",
    "documentation" : [ "The object containing information about a backup target." ],
    "members" : [ {
      "name" : "name",
      "type" : "string",
      "documentation" : [ "Name for the backup target." ]
    }, {
      "name" : "backupTargetID",
      "type" : "BackupTargetID",
      "documentation" : [ "Unique identifier assigned to the backup target." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "CreateBackupTargetResult",
    "members" : [ {
      "name" : "backupTargetID",
      "type" : "BackupTargetID",
      "documentation" : [ "Unique identifier assigned to the backup target." ]
    } ]
  }, {
    "name" : "GetBackupTargetResult",
    "members" : [ {
      "name" : "backupTarget",
      "type" : "BackupTarget",
      "documentation" : "Object returned for backup target."
    } ]
  }, {
    "name" : "ListBackupTargetsResult",
    "members" : [ {
      "name" : "backupTargets",
      "type" : [ "BackupTarget" ],
      "documentation" : "Objects returned for each backup target."
    } ]
  }, {
    "name" : "ModifyBackupTargetResult",
    "members" : [ ]
  }, {
    "name" : "RemoveBackupTargetResult",
    "members" : [ ]
  }, {
    "name" : "ClusterCapacity",
    "documentation" : "High level capacity measurements for the entire cluster.",
    "members" : [ {
      "name" : "activeBlockSpace",
      "type" : "uint64",
      "documentation" : [ "The amount of space on the block drives.", "This includes additional information such as metadata entries and space which can be cleaned up." ]
    }, {
      "name" : "activeSessions",
      "type" : "uint32",
      "documentation" : "Number of active iSCSI sessions communicating with the cluster"
    }, {
      "name" : "averageIOPS",
      "type" : "uint32",
      "documentation" : "Average IPS for the cluster since midnight Coordinated Universal Time (UTC)."
    }, {
      "name" : "clusterRecentIOSize",
      "type" : "uint32",
      "documentation" : "The average size of IOPS to all volumes in the cluster."
    }, {
      "name" : "currentIOPS",
      "type" : "uint32",
      "documentation" : "Average IOPS for all volumes in the cluster over the last 5 seconds."
    }, {
      "name" : "maxIOPS",
      "type" : "uint32",
      "documentation" : "Estimated maximum IOPS capability of the current cluster."
    }, {
      "name" : "maxOverProvisionableSpace",
      "type" : "uint64",
      "documentation" : [ "The maximum amount of provisionable space.", "This is a computed value.", "You cannot create new volumes if the current provisioned space plus the new volume size would exceed this number:", "maxOverProvisionableSpace = maxProvisionedSpace * GetClusterFull" ]
    }, {
      "name" : "maxProvisionedSpace",
      "type" : "uint64",
      "documentation" : "The total amount of provisionable space if all volumes are 100% filled (no thin provisioned metadata)."
    }, {
      "name" : "maxUsedMetadataSpace",
      "type" : "uint64",
      "documentation" : "The amount of bytes on volume drives used to store metadata."
    }, {
      "name" : "maxUsedSpace",
      "type" : "uint64",
      "documentation" : "The total amount of space on all active block drives."
    }, {
      "name" : "nonZeroBlocks",
      "type" : "uint64",
      "documentation" : "Total number of 4KiB blocks with data after the last garbage collection operation has completed."
    }, {
      "name" : "peakActiveSessions",
      "type" : "uint32",
      "documentation" : "Peak number of iSCSI connections since midnight UTC."
    }, {
      "name" : "peakIOPS",
      "type" : "uint32",
      "documentation" : "The highest value for currentIOPS since midnight UTC."
    }, {
      "name" : "provisionedSpace",
      "type" : "uint64",
      "documentation" : "Total amount of space provisioned in all volumes on the cluster."
    }, {
      "name" : "snapshotNonZeroBlocks",
      "type" : "integer",
      "since" : "8.0",
      "documentation" : "Total number of 4KiB blocks in snapshots with data."
    }, {
      "name" : "timestamp",
      "type" : "TimePoint",
      "documentation" : "The date and time this cluster capacity sample was taken."
    }, {
      "name" : "totalOps",
      "type" : "uint64",
      "documentation" : "The total number of I/O operations performed throughout the lifetime of the cluster"
    }, {
      "name" : "uniqueBlocks",
      "type" : "uint64",
      "documentation" : [ "The total number of blocks stored on the block drives.", "The value includes replicated blocks." ]
    }, {
      "name" : "uniqueBlocksUsedSpace",
      "type" : "uint64",
      "documentation" : [ "The total amount of data the uniqueBlocks take up on the block drives.", "This number is always consistent with the uniqueBlocks value." ]
    }, {
      "name" : "usedMetadataSpace",
      "type" : "uint64",
      "documentation" : "The total amount of bytes on volume drives used to store metadata"
    }, {
      "name" : "usedMetadataSpaceInSnapshots",
      "type" : "uint64",
      "documentation" : [ "The amount of bytes on volume drives used for storing unique data in snapshots.", "This number provides an estimate of how much metadata space would be regained by deleting all snapshots on the system." ]
    }, {
      "name" : "usedSpace",
      "type" : "uint64",
      "documentation" : "Total amount of space used by all block drives in the system."
    }, {
      "name" : "zeroBlocks",
      "type" : "uint64",
      "documentation" : "Total number of 4KiB blocks without data after the last round of garabage collection operation has completed."
    } ]
  }, {
    "name" : "ClusterInfo",
    "documentation" : "Cluster Info object returns information the node uses to communicate with the cluster.",
    "members" : [ {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "List of Name/Value pairs in JSON object format."
    }, {
      "name" : "encryptionAtRestState",
      "type" : "EncryptionAtRestState",
      "documentation" : "Encryption at rest state."
    }, {
      "name" : "ensemble",
      "type" : [ "IpAddress" ],
      "documentation" : "Array of Node IP addresses that are participating in the cluster."
    }, {
      "name" : "mvip",
      "type" : "IpAddress",
      "documentation" : "Management network interface."
    }, {
      "name" : "mvipNodeID",
      "type" : "NodeID",
      "documentation" : "Node holding the master MVIP address"
    }, {
      "name" : "name",
      "type" : "Name",
      "documentation" : "Unique cluster name."
    }, {
      "name" : "repCount",
      "type" : "size_t",
      "documentation" : [ "Number of replicas of each piece of data to store in the cluster.", "Valid value is 2" ]
    }, {
      "name" : "state",
      "type" : "NodeState"
    }, {
      "name" : "svip",
      "type" : "IpAddress",
      "documentation" : "Storage virtual IP"
    }, {
      "name" : "svipNodeID",
      "type" : "NodeID",
      "documentation" : "Node holding the master SVIP address."
    }, {
      "name" : "uniqueID",
      "type" : "string",
      "documentation" : "Unique ID for the cluster."
    }, {
      "name" : "uuid",
      "type" : "UUID"
    } ]
  }, {
    "name" : "ClusterVersionInfo",
    "documentation" : "Version information for a node in the cluster.",
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "nodeVersion",
      "type" : "Version"
    }, {
      "name" : "nodeInternalRevision",
      "type" : "string"
    } ]
  }, {
    "name" : "GetClusterCapacityResult",
    "members" : [ {
      "name" : "clusterCapacity",
      "type" : "ClusterCapacity"
    } ]
  }, {
    "name" : "GetClusterInfoResult",
    "members" : [ {
      "name" : "clusterInfo",
      "type" : "ClusterInfo"
    } ]
  }, {
    "name" : "GetClusterVersionInfoResult",
    "members" : [ {
      "name" : "clusterAPIVersion",
      "type" : "ApiVersion"
    }, {
      "name" : "clusterVersion",
      "type" : "Version"
    }, {
      "name" : "clusterVersionInfo",
      "type" : [ "ClusterVersionInfo" ]
    }, {
      "name" : "softwareVersionInfo",
      "type" : "SoftwareVersionInfo"
    } ]
  }, {
    "name" : "SoftwareVersionInfo",
    "members" : [ {
      "name" : "currentVersion",
      "type" : "Version"
    }, {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "packageName",
      "type" : "string"
    }, {
      "name" : "pendingVersion",
      "type" : "Version"
    }, {
      "name" : "startTime",
      "type" : "TimePoint"
    } ]
  }, {
    "name" : "GetLimitsResult",
    "documentation" : "Limits for the cluster",
    "members" : [ {
      "name" : "accountCountMax",
      "type" : "size_t"
    }, {
      "name" : "accountNameLengthMax",
      "type" : "size_t"
    }, {
      "name" : "accountNameLengthMin",
      "type" : "size_t"
    }, {
      "name" : "bulkVolumeJobsPerNodeMax",
      "type" : "size_t"
    }, {
      "name" : "bulkVolumeJobsPerVolumeMax",
      "type" : "size_t"
    }, {
      "name" : "cloneJobsPerVolumeMax",
      "type" : "size_t"
    }, {
      "name" : "clusterPairsCountMax",
      "type" : "size_t"
    }, {
      "name" : "initiatorNameLengthMax",
      "type" : "size_t"
    }, {
      "name" : "initiatorsPerVolumeAccessGroupCountMax",
      "type" : "size_t"
    }, {
      "name" : "secretLengthMax",
      "type" : "size_t"
    }, {
      "name" : "secretLengthMin",
      "type" : "size_t"
    }, {
      "name" : "snapshotNameLengthMax",
      "type" : "size_t"
    }, {
      "name" : "snapshotsPerVolumeMax",
      "type" : "size_t"
    }, {
      "name" : "volumeAccessGroupCountMax",
      "type" : "size_t"
    }, {
      "name" : "volumeAccessGroupLunMax",
      "type" : "size_t"
    }, {
      "name" : "volumeAccessGroupNameLengthMax",
      "type" : "size_t"
    }, {
      "name" : "volumeAccessGroupNameLengthMin",
      "type" : "size_t"
    }, {
      "name" : "volumeAccessGroupsPerInitiatorCountMax",
      "type" : "size_t"
    }, {
      "name" : "volumeAccessGroupsPerVolumeCountMax",
      "type" : "size_t"
    }, {
      "name" : "volumeBurstIOPSMax",
      "type" : "uint32"
    }, {
      "name" : "volumeBurstIOPSMin",
      "type" : "uint32"
    }, {
      "name" : "volumeCountMax",
      "type" : "uint32"
    }, {
      "name" : "volumeMaxIOPSMax",
      "type" : "uint32"
    }, {
      "name" : "volumeMaxIOPSMin",
      "type" : "uint32"
    }, {
      "name" : "volumeMinIOPSMax",
      "type" : "uint32"
    }, {
      "name" : "volumeMinIOPSMin",
      "type" : "uint32"
    }, {
      "name" : "volumeNameLengthMax",
      "type" : "size_t"
    }, {
      "name" : "volumeNameLengthMin",
      "type" : "size_t"
    }, {
      "name" : "volumeSizeMax",
      "type" : "uint64"
    }, {
      "name" : "volumeSizeMin",
      "type" : "uint64"
    }, {
      "name" : "volumesPerAccountCountMax",
      "type" : "uint32"
    }, {
      "name" : "volumesPerGroupSnapshotMax",
      "type" : "uint32"
    }, {
      "name" : "volumesPerVolumeAccessGroupCountMax",
      "type" : "uint32"
    } ]
  }, {
    "name" : "EventID",
    "alias" : "integer"
  }, {
    "name" : "EventType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "apiEvent"
      }, {
        "value" : "binAssignmentEvent"
      }, {
        "value" : "binSyncEvent"
      }, {
        "value" : "bulkOpEvent"
      }, {
        "value" : "bsCheckEvent"
      }, {
        "value" : "bSKillEvent"
      }, {
        "value" : "cloneEvent"
      }, {
        "value" : "clusterMasterEvent"
      }, {
        "value" : "dataEvent"
      }, {
        "value" : "dbEvent"
      }, {
        "value" : "driveEvent"
      }, {
        "value" : "encryptionAtRestEvent"
      }, {
        "value" : "ensembleEvent"
      }, {
        "value" : "fibreChannelEvent"
      }, {
        "value" : "gcEvent"
      }, {
        "value" : "iEEvent"
      }, {
        "value" : "iSCSIEvent"
      }, {
        "value" : "networkEvent"
      }, {
        "value" : "platformHardwareEvent"
      }, {
        "value" : "remoteClusterEvent"
      }, {
        "value" : "schedulerEvent"
      }, {
        "value" : "serviceEvent"
      }, {
        "value" : "sliceEvent"
      }, {
        "value" : "statEvent"
      }, {
        "value" : "tSEvent"
      }, {
        "value" : "unexpectedException"
      }, {
        "value" : "vasaProviderEvent"
      } ]
    }
  }, {
    "name" : "EventQueueType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "standard"
      }, {
        "value" : "vvol"
      } ]
    }
  }, {
    "name" : "EventInfo",
    "members" : [ {
      "name" : "eventID",
      "type" : "EventID"
    }, {
      "name" : "severity",
      "type" : "integer"
    }, {
      "name" : "eventInfoType",
      "type" : "EventType"
    }, {
      "name" : "message",
      "type" : "string"
    }, {
      "name" : "serviceID",
      "type" : "ServiceID"
    }, {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "driveID",
      "type" : "DriveID"
    }, {
      "name" : "timeOfReport",
      "type" : "TimePoint"
    }, {
      "name" : "timeOfPublish",
      "type" : "TimePoint"
    }, {
      "name" : "details",
      "type" : "EventDetails"
    } ]
  }, {
    "name" : "ListEventsResult",
    "members" : [ {
      "name" : "eventQueueType",
      "type" : "EventQueueType"
    }, {
      "name" : "events",
      "type" : [ "EventInfo" ]
    } ]
  }, {
    "name" : "ClusterFaultID",
    "alias" : "uint64"
  }, {
    "name" : "ClusterFaultSeverity",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "unknown"
      }, {
        "value" : "ok"
      }, {
        "value" : "bestPractice"
      }, {
        "value" : "warning"
      }, {
        "value" : "error"
      }, {
        "value" : "critical"
      } ]
    }
  }, {
    "name" : "ListClusterFaultType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "current"
      }, {
        "value" : "resolved"
      }, {
        "value" : "all"
      } ]
    }
  }, {
    "name" : "ClusterFaultType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "unknown"
      }, {
        "value" : "node"
      }, {
        "value" : "drive"
      }, {
        "value" : "cluster"
      }, {
        "value" : "service"
      }, {
        "value" : "volume"
      } ]
    }
  }, {
    "name" : "ClusterFaultCode",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "unknown"
      }, {
        "value" : "sliceServiceUnhealthy"
      }, {
        "value" : "sliceServiceTooFull"
      }, {
        "value" : "failedSpaceTooFull"
      }, {
        "value" : "blockServiceTooFull"
      }, {
        "value" : "provisionedSpaceTooFull"
      }, {
        "value" : "blockServiceUnhealthy"
      }, {
        "value" : "clusterFull"
      }, {
        "value" : "blockClusterFull"
      }, {
        "value" : "metadataClusterFull"
      }, {
        "value" : "clusterCannotSync"
      }, {
        "value" : "volumesDegraded"
      }, {
        "value" : "exception"
      }, {
        "value" : "clusterIPSAreOverProvisioned"
      }, {
        "value" : "ensembleDegraded"
      }, {
        "value" : "nodeHardwareFault"
      }, {
        "value" : "driveWearFault"
      }, {
        "value" : "disconnectedClusterPair"
      }, {
        "value" : "upgrade"
      }, {
        "value" : "unbalancedMixedNodes"
      }, {
        "value" : "invalidConfiguredFibreChannelNodeCount"
      }, {
        "value" : "fibreChannelAccessDegraded"
      }, {
        "value" : "fibreChannelAccessUnavailable"
      }, {
        "value" : "scheduleActionError"
      }, {
        "value" : "nodeOffline"
      }, {
        "value" : "driveAvailable"
      }, {
        "value" : "driveFailed"
      }, {
        "value" : "remoteRepClusterFull"
      }, {
        "value" : "remoteRepSnapshotClusterFull"
      }, {
        "value" : "remoteRepSnapshotsExceededLimit"
      }, {
        "value" : "availableVirtualNetworkIPAddressesLow"
      }, {
        "value" : "noAvailableVirtualNetworkIPAddresses"
      }, {
        "value" : "inconsistentBondModes"
      }, {
        "value" : "inconsistentSubnetMasks"
      } ]
    }
  }, {
    "name" : "ClusterFaultInfo",
    "members" : [ {
      "name" : "severity",
      "type" : "ClusterFaultSeverity"
    }, {
      "name" : "type",
      "type" : "ClusterFaultType"
    }, {
      "name" : "code",
      "type" : "ClusterFaultCode"
    }, {
      "name" : "details",
      "type" : "string"
    }, {
      "name" : "nodeHardwareFaultID",
      "type" : "NodeHardwareFaultID"
    }, {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "serviceID",
      "type" : "ServiceID"
    }, {
      "name" : "driveID",
      "type" : "DriveID"
    }, {
      "name" : "resolved",
      "type" : "boolean"
    }, {
      "name" : "clusterFaultID",
      "type" : "ClusterFaultID"
    }, {
      "name" : "date",
      "type" : "TimePoint"
    }, {
      "name" : "resolvedDate",
      "type" : "TimePoint"
    }, {
      "name" : "data",
      "type" : "Object"
    } ]
  }, {
    "name" : "ListClusterFaultsResult",
    "members" : [ {
      "name" : "faults",
      "type" : [ "ClusterFaultInfo" ],
      "documentation" : "The list of Cluster Fault objects."
    } ]
  }, {
    "name" : "GetClusterConfigResult",
    "members" : [ {
      "name" : "cluster",
      "type" : "ClusterConfig",
      "documentation" : "Cluster configuration information the node uses to communicate with the cluster."
    } ]
  }, {
    "name" : "ClusterConfig",
    "documentation" : "Cluster Config object returns information the node uses to communicate with the cluster.",
    "members" : [ {
      "name" : "cipi",
      "type" : {
        "name" : "NetworkInterfaceName",
        "optional" : true
      },
      "documentation" : "Network interface used for cluster communication."
    }, {
      "name" : "cluster",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : "Unique cluster name."
    }, {
      "name" : "ensemble",
      "type" : {
        "name" : [ "IpAddress" ],
        "optional" : true
      },
      "documentation" : "Nodes that are participating in the cluster."
    }, {
      "name" : "mipi",
      "type" : {
        "name" : "NetworkInterfaceName",
        "optional" : true
      },
      "documentation" : "Network interface used for node management."
    }, {
      "name" : "name",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : "Unique cluster name."
    }, {
      "name" : "nodeID",
      "type" : {
        "name" : "NodeID",
        "optional" : true
      }
    }, {
      "name" : "pendingNodeID",
      "type" : {
        "name" : "PendingNodeID",
        "optional" : true
      }
    }, {
      "name" : "role",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "Identifies the role of the node"
    }, {
      "name" : "sipi",
      "type" : {
        "name" : "NetworkInterfaceName",
        "optional" : true
      },
      "documentation" : "Network interface used for storage."
    }, {
      "name" : "state",
      "type" : {
        "name" : "NodeState",
        "optional" : true
      }
    } ]
  }, {
    "name" : "Fullness",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "stage1Happy",
        "documentation" : "No alerts or error conditions."
      }, {
        "value" : "stage2Aware",
        "documentation" : "3 nodes of capacity available."
      }, {
        "value" : "stage3Low",
        "documentation" : "2 nodes of capacity available."
      }, {
        "value" : "stage4Critical",
        "documentation" : "1 node of capacity available. No new volumes or clones can be created."
      }, {
        "value" : "stage5CompletelyConsumed",
        "documentation" : "Completely consumed. Cluster is read-only, iSCSI connection is maintained but all writes are suspended."
      } ]
    }
  }, {
    "name" : "GetClusterFullThresholdResult",
    "members" : [ {
      "name" : "blockFullness",
      "type" : "Fullness",
      "documentation" : [ "Current computed level of block fullness of the cluster.", "Possible values: <br/><b>stage1Happy</b>: No alerts or error conditions. <br/><b>stage2Aware</b>: 3 nodes of capacity available. <br/><b>stage3Low</b>: 2 nodes of capacity available. <br/><b>stage4Critical</b>: 1 node of capacity available. No new volumes or clones can be created. <br/><b>stage5CompletelyConsumed</b>: Completely consumed. Cluster is read-only, iSCSI connection is maintained but all writes are suspended." ]
    }, {
      "name" : "fullness",
      "type" : "string",
      "documentation" : "Reflects the highest level of fullness between \"blockFullness\" and \"metadataFullness\"."
    }, {
      "name" : "maxMetadataOverProvisionFactor",
      "type" : "integer",
      "documentation" : "A value representative of the number of times metadata space can be over provisioned relative to the amount of space available. For example, if there was enough metadata space to store 100 TiB of volumes and this number was set to 5, then 500 TiB worth of volumes could be created."
    }, {
      "name" : "metadataFullness",
      "type" : "Fullness",
      "documentation" : "Current computed level of metadata fullness of the cluster."
    }, {
      "name" : "sliceReserveUsedThresholdPct",
      "type" : "integer",
      "documentation" : "Error condition; message sent to \"Alerts\" if the reserved slice utilization is greater than the sliceReserveUsedThresholdPct value returned."
    }, {
      "name" : "stage2AwareThreshold",
      "type" : "integer",
      "documentation" : "Awareness condition: Value that is set for \"Stage 2\" cluster threshold level."
    }, {
      "name" : "stage2BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage2 condition will exist."
    }, {
      "name" : "stage3BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage3 condition will exist."
    }, {
      "name" : "stage3BlockThresholdPercent",
      "type" : "integer",
      "documentation" : "The percent value set for stage3. At this percent full, a warning will be posted in the Alerts log."
    }, {
      "name" : "stage3LowThreshold",
      "type" : "integer",
      "documentation" : "Error condition; message sent to \"Alerts\" that capacity on a cluster is getting low."
    }, {
      "name" : "stage4CriticalThreshold",
      "type" : "integer",
      "documentation" : "Error condition; message sent to \"Alerts\" that capacity on a cluster is critically low."
    }, {
      "name" : "stage4BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage4 condition will exist."
    }, {
      "name" : "stage5BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage5 condition will exist."
    }, {
      "name" : "sumTotalClusterBytes",
      "type" : "integer",
      "documentation" : "Physical capacity of the cluster measured in bytes."
    }, {
      "name" : "sumTotalMetadataClusterBytes",
      "type" : "integer",
      "documentation" : "Total amount of space that can be used to store metadata."
    }, {
      "name" : "sumUsedClusterBytes",
      "type" : "integer",
      "documentation" : "Number of bytes used on the cluster."
    }, {
      "name" : "sumUsedMetadataClusterBytes",
      "type" : "integer",
      "documentation" : "Amount of space used on volume drives to store metadata."
    } ]
  }, {
    "name" : "ModifyClusterFullThresholdResult",
    "members" : [ {
      "name" : "blockFullness",
      "type" : "Fullness",
      "documentation" : [ "Current computed level of block fullness of the cluster.", "Possible values: <br/><b>stage1Happy</b>: No alerts or error conditions. <br/><b>stage2Aware</b>: 3 nodes of capacity available. <br/><b>stage3Low</b>: 2 nodes of capacity available. <br/><b>stage4Critical</b>: 1 node of capacity available. No new volumes or clones can be created. <br/><b>stage5CompletelyConsumed</b>: Completely consumed. Cluster is read-only, iSCSI connection is maintained but all writes are suspended." ]
    }, {
      "name" : "fullness",
      "type" : "string",
      "documentation" : "Reflects the highest level of fullness between \"blockFullness\" and \"metadataFullness\"."
    }, {
      "name" : "maxMetadataOverProvisionFactor",
      "type" : "integer",
      "documentation" : "A value representative of the number of times metadata space can be over provisioned relative to the amount of space available. For example, if there was enough metadata space to store 100 TiB of volumes and this number was set to 5, then 500 TiB worth of volumes could be created."
    }, {
      "name" : "metadataFullness",
      "type" : "Fullness",
      "documentation" : "Current computed level of metadata fullness of the cluster."
    }, {
      "name" : "sliceReserveUsedThresholdPct",
      "type" : "integer",
      "documentation" : "Error condition; message sent to \"Alerts\" if the reserved slice utilization is greater than the sliceReserveUsedThresholdPct value returned."
    }, {
      "name" : "stage2AwareThreshold",
      "type" : "integer",
      "documentation" : "Awareness condition: Value that is set for \"Stage 2\" cluster threshold level."
    }, {
      "name" : "stage2BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage2 condition will exist."
    }, {
      "name" : "stage3BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage3 condition will exist."
    }, {
      "name" : "stage3BlockThresholdPercent",
      "type" : "integer",
      "documentation" : "The percent value set for stage3. At this percent full, a warning will be posted in the Alerts log."
    }, {
      "name" : "stage3LowThreshold",
      "type" : "integer",
      "documentation" : "Error condition; message sent to \"Alerts\" that capacity on a cluster is getting low."
    }, {
      "name" : "stage4CriticalThreshold",
      "type" : "integer",
      "documentation" : "Error condition; message sent to \"Alerts\" that capacity on a cluster is critically low."
    }, {
      "name" : "stage4BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage4 condition will exist."
    }, {
      "name" : "stage5BlockThresholdBytes",
      "type" : "integer",
      "documentation" : "Number of bytes being used by the cluster at which a stage5 condition will exist."
    }, {
      "name" : "sumTotalClusterBytes",
      "type" : "integer",
      "documentation" : "Physical capacity of the cluster measured in bytes."
    }, {
      "name" : "sumTotalMetadataClusterBytes",
      "type" : "integer",
      "documentation" : "Total amount of space that can be used to store metadata."
    }, {
      "name" : "sumUsedClusterBytes",
      "type" : "integer",
      "documentation" : "Number of bytes used on the cluster."
    }, {
      "name" : "sumUsedMetadataClusterBytes",
      "type" : "integer",
      "documentation" : "Amount of space used on volume drives to store metadata."
    } ]
  }, {
    "name" : "GetClusterMasterNodeIDResult",
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : "ID of the master node."
    } ]
  }, {
    "name" : "GetClusterStatsResult",
    "members" : [ {
      "name" : "clusterStats",
      "type" : "ClusterStats"
    } ]
  }, {
    "name" : "ClusterStats",
    "members" : [ {
      "name" : "clusterUtilization",
      "type" : "float",
      "documentation" : "The amount of cluster capacity being utilized."
    }, {
      "name" : "clientQueueDepth",
      "type" : "integer"
    }, {
      "name" : "readBytes",
      "type" : "integer",
      "documentation" : "Total bytes read by clients."
    }, {
      "name" : "readOps",
      "type" : "integer",
      "documentation" : "Total read operations."
    }, {
      "name" : "timestamp",
      "type" : "TimePoint",
      "documentation" : "Current time in UTC format. ISO 8601 date string."
    }, {
      "name" : "writeBytes",
      "type" : "integer",
      "documentation" : "Total bytes written by clients."
    }, {
      "name" : "writeOps",
      "type" : "integer",
      "documentation" : "Total write operations."
    } ]
  }, {
    "name" : "CreateClusterResult",
    "members" : [ ]
  }, {
    "name" : "ListClusterAdminsResult",
    "members" : [ {
      "name" : "clusterAdmins",
      "type" : [ "ClusterAdmin" ],
      "documentation" : "Information about the cluster admin."
    } ]
  }, {
    "name" : "GetCurrentClusterAdminResult",
    "members" : [ {
      "name" : "clusterAdmin",
      "type" : "ClusterAdmin",
      "documentation" : "Information about all cluster and LDAP administrators that exist for a cluster."
    } ]
  }, {
    "name" : "ClusterAdmin",
    "members" : [ {
      "name" : "access",
      "type" : [ "string" ]
    }, {
      "name" : "clusterAdminID",
      "type" : "integer"
    }, {
      "name" : "username",
      "type" : "Name"
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "AddClusterAdminResult",
    "members" : [ {
      "name" : "clusterAdminID",
      "type" : "ClusterAdminID",
      "documentation" : "ClusterAdminID for the newly created Cluster Admin."
    } ]
  }, {
    "name" : "ModifyClusterAdminResult",
    "members" : [ ]
  }, {
    "name" : "RemoveClusterAdminResult",
    "members" : [ ]
  }, {
    "name" : "SetClusterConfigResult",
    "members" : [ {
      "name" : "cluster",
      "type" : "ClusterConfig",
      "documentation" : "Settings for the cluster. All new and current settings are returned."
    } ]
  }, {
    "name" : "GetSnmpACLResult",
    "members" : [ {
      "name" : "networks",
      "type" : [ "SnmpNetwork" ],
      "documentation" : "List of networks and what type of access they have to the SNMP servers running on the cluster nodes. Present if SNMP v3 is disabled."
    }, {
      "name" : "usmUsers",
      "type" : [ "SnmpV3UsmUser" ],
      "documentation" : "List of users and the type of access they have to the SNMP servers running on the cluster nodes. Present if SNMP v3 is enabled."
    } ]
  }, {
    "name" : "SetSnmpACLResult",
    "members" : [ ]
  }, {
    "name" : "SnmpNetwork",
    "members" : [ {
      "name" : "access",
      "type" : "string",
      "documentation" : [ "<br/><b>ro</b>: read-only access.*", "<br/><b>rw</b>: for read-write access.", "<br/><b>rosys</b>: for read-only access to a restricted set of system information", "*SolidFire recommends that all networks other than the default \"localhost\" be set to \"ro\" access, because all SolidFire MIB objects are read-only." ]
    }, {
      "name" : "cidr",
      "type" : "integer",
      "documentation" : [ "A CIDR network mask. This network mask must be an integer greater than or equal to 0, and less than or equal to 32. It must also not be equal to 31." ]
    }, {
      "name" : "community",
      "type" : "string",
      "documentation" : [ "SNMP community string." ]
    }, {
      "name" : "network",
      "type" : "string",
      "documentation" : [ "This parameter along with the cidr variable is used to control which network the access and community string apply to. The special value of \"default\" is used to specify an entry that applies to all networks. The cidr mask is ignored when network value is either a host name or default." ]
    } ],
    "documentation" : "The SNMP network object contains information about SNMP configuration for the cluster nodes. SNMP v3 is supported on SolidFire clusters."
  }, {
    "name" : "SnmpV3UsmUser",
    "members" : [ {
      "name" : "access",
      "type" : "string",
      "documentation" : [ "<br/><b>rouser</b>: read-only access.*", "<br/><b>rwuser</b>: for read-write access.", "<br/><b>rosys</b>: for read-only access to a restricted set of system information", "*SolidFire recommends that all USM users be set to \"rouser\" access, because all SolidFire MIB objects are read-only." ]
    }, {
      "name" : "name",
      "type" : "Name",
      "documentation" : [ "The name of the user. Must contain at least one character, but no more than 32 characters. Blank spaces are not allowed." ]
    }, {
      "name" : "password",
      "type" : "string",
      "documentation" : [ "The password of the user. Must be between 8 and 255 characters long (inclusive). Blank spaces are not allowed. Required if \"secLevel\" is \"auth\" or \"priv.\"" ]
    }, {
      "name" : "passphrase",
      "type" : "string",
      "documentation" : [ "The passphrase of the user. Must be between 8 and 255 characters long (inclusive). Blank spaces are not allowed. Required if \"secLevel\" is \"priv.\"" ]
    }, {
      "name" : "secLevel",
      "type" : "string",
      "documentation" : [ "<br/><b>noauth</b>: No password or passphrase is required.", "<br/><b>auth</b>: A password is required for user access.", "<br/><b>priv</b>: A password and passphrase is required for user access." ]
    } ],
    "documentation" : "The SNMP v3 usmUser object is used with the API method SetSnmpInfo to configure SNMP on the cluster."
  }, {
    "name" : "GetSnmpTrapInfoResult",
    "members" : [ {
      "name" : "trapRecipients",
      "type" : [ "SnmpTrapRecipient" ],
      "documentation" : "List of hosts that are to receive the traps generated by the cluster."
    }, {
      "name" : "clusterFaultTrapsEnabled",
      "type" : "boolean",
      "documentation" : "If \"true\", when a cluster fault is logged a corresponding solidFireClusterFaultNotification is sent to the configured list of trap recipients."
    }, {
      "name" : "clusterFaultResolvedTrapsEnabled",
      "type" : "boolean",
      "documentation" : "If \"true\", when a cluster fault is logged a corresponding solidFireClusterFaultResolvedNotification is sent to the configured list of trap recipients."
    }, {
      "name" : "clusterEventTrapsEnabled",
      "type" : "boolean",
      "documentation" : "If \"true\", when a cluster fault is logged a corresponding solidFireClusterEventNotification is sent to the configured list of trap recipients."
    } ]
  }, {
    "name" : "SnmpTrapRecipient",
    "members" : [ {
      "name" : "host",
      "type" : "string",
      "documentation" : "The IP address or host name of the target network management station."
    }, {
      "name" : "community",
      "type" : "string",
      "documentation" : "SNMP community string."
    }, {
      "name" : "port",
      "type" : "integer",
      "documentation" : "The UDP port number on the host where the trap is to be sent. Valid range is 1 - 65535. 0 (zero) is not a valid port number. Default is 162."
    } ],
    "documentation" : "Host that is to receive the traps generated by the cluster."
  }, {
    "name" : "SetSnmpTrapInfoResult",
    "members" : [ ]
  }, {
    "name" : "EnableSnmpResult",
    "members" : [ ]
  }, {
    "name" : "DisableSnmpResult",
    "members" : [ ]
  }, {
    "name" : "GetSnmpInfoResult",
    "members" : [ {
      "name" : "networks",
      "type" : [ "SnmpNetwork" ],
      "documentation" : [ "List of networks and access types enabled for SNMP.", "<br/><br/>", "<b>Note</b>: \"networks\" will only be present if SNMP V3 is disabled." ]
    }, {
      "name" : "enabled",
      "type" : "boolean",
      "documentation" : "If the nodes in the cluster are configured for SNMP."
    }, {
      "name" : "snmpV3Enabled",
      "type" : "boolean",
      "documentation" : "If the nodes in the cluster are configured for SNMP v3."
    }, {
      "name" : "usmUsers",
      "type" : [ "SnmpV3UsmUser" ],
      "documentation" : "If SNMP v3 is enabled, the values returned is a list of user access parameters for SNMP information from the cluster. This will be returned instead of the \"networks\" parameter."
    } ]
  }, {
    "name" : "SetSnmpInfoResult",
    "members" : [ ]
  }, {
    "name" : "GetSnmpStateResult",
    "members" : [ {
      "name" : "enabled",
      "type" : "boolean",
      "documentation" : "If the nodes in the cluster are configured for SNMP."
    }, {
      "name" : "snmpV3Enabled",
      "type" : "boolean",
      "documentation" : "If the node in the cluster is configured for SNMP v3."
    } ]
  }, {
    "name" : "ListSyncJobsResult",
    "members" : [ {
      "name" : "syncJobs",
      "type" : [ "SyncJob" ]
    } ]
  }, {
    "name" : "SyncJob",
    "members" : [ {
      "name" : "bytesPerSecond",
      "type" : "float"
    }, {
      "name" : "currentBytes",
      "type" : "integer"
    }, {
      "name" : "dstServiceID",
      "type" : "integer"
    }, {
      "name" : "elapsedTime",
      "type" : "float"
    }, {
      "name" : "percentComplete",
      "type" : "float"
    }, {
      "name" : "remainingTime",
      "type" : "float"
    }, {
      "name" : "sliceID",
      "type" : "SliceID"
    }, {
      "name" : "srcServiceID",
      "type" : "ServiceID"
    }, {
      "name" : "totalBytes",
      "type" : "integer"
    }, {
      "name" : "type",
      "type" : "string"
    }, {
      "name" : "cloneID",
      "type" : "CloneID"
    }, {
      "name" : "dstVolumeID",
      "type" : "VolumeID"
    }, {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "snapshotID",
      "type" : "SnapshotID"
    }, {
      "name" : "srcVolumeID",
      "type" : "VolumeID"
    }, {
      "name" : "blocksPerSecond",
      "type" : "float"
    }, {
      "name" : "stage",
      "type" : "integer"
    } ]
  }, {
    "name" : "GetAPIResult",
    "members" : [ {
      "name" : "currentVersion",
      "type" : "float"
    }, {
      "name" : "supportedVersions",
      "type" : [ "float" ]
    } ]
  }, {
    "name" : "GetNtpInfoResult",
    "members" : [ {
      "name" : "broadcastclient",
      "type" : "boolean",
      "documentation" : [ "Indicates whether or not the nodes in the cluster are listening for broadcast NTP messages. Possible values:", "true", "false" ]
    }, {
      "name" : "servers",
      "type" : [ "string" ],
      "documentation" : "List of NTP servers."
    } ]
  }, {
    "name" : "SetNtpInfoResult",
    "members" : [ ]
  }, {
    "name" : "GetClusterStateResult",
    "members" : [ {
      "name" : "cluster",
      "type" : "string",
      "documentation" : "Name of the cluster."
    }, {
      "name" : "state",
      "type" : "string",
      "documentation" : "<strong>Available:</strong> Node has not been configured with a cluster name.<br><strong>Pending:</strong> Node is pending for a specific named cluster and can be added.<br><strong>Active:</strong> Node is active and a member of a cluster and may not be added to another cluster."
    } ]
  }, {
    "name" : "CreateClusterSupportBundleResult",
    "members" : [ {
      "name" : "details",
      "type" : "Attributes",
      "documentation" : [ "The details of the support bundle. Values returned in 'details':", "<br/><b>bundleName</b>- The name specified in the 'CreateSupportBundle API method. If no name was specified, 'supportbundle' will be used.", "<br/><b>extraArgs</b>- The arguments passed with this method.", "<br/><b>files</b>- A list of the support bundle files that were created.", "<br/><b>output</b>- The command line output from the script that creates the support bundle.", "<br/><b>timeoutSec</b>- The timeout specified for the support bundle creation process.", "<br/><b>url</b>- URL to the support bundle created." ]
    }, {
      "name" : "duration",
      "type" : "string",
      "documentation" : [ "The amount of time required to create the support bundle in the format HH:MM:SS.ssssss" ]
    }, {
      "name" : "result",
      "type" : "string",
      "documentation" : [ "Whether the support bundle creation passed of failed." ]
    } ]
  }, {
    "name" : "DeleteAllSupportBundlesResult",
    "members" : [ ]
  }, {
    "name" : "ClearClusterFaultsResult",
    "members" : [ ]
  }, {
    "name" : "CreateSupportBundleResult",
    "members" : [ {
      "name" : "details",
      "type" : "SupportBundleDetails",
      "documentation" : [ "The details of the support bundle. " ]
    }, {
      "name" : "duration",
      "type" : "string",
      "documentation" : [ "The amount of time required to create the support bundle in the format HH:MM:SS.ssssss" ]
    }, {
      "name" : "result",
      "type" : "string",
      "documentation" : [ "Whether the support bundle creation passed of failed." ]
    } ]
  }, {
    "name" : "SupportBundleDetails",
    "members" : [ {
      "name" : "bundleName",
      "type" : "string",
      "documentation" : [ "The name specified in the 'CreateSupportBundle API method. If no name was specified, 'supportbundle' will be used." ]
    }, {
      "name" : "extraArgs",
      "type" : "string",
      "documentation" : [ "The arguments passed with this method." ]
    }, {
      "name" : "files",
      "type" : [ "string" ],
      "documentation" : [ "A list of the support bundle files that were created." ]
    }, {
      "name" : "url",
      "type" : [ "string" ],
      "documentation" : [ "The URL that you can use to download the bundle file(s). Should correspond 1:1 with files list." ]
    }, {
      "name" : "output",
      "type" : "string",
      "documentation" : [ "The commands that were run and their output, with newlines replaced by HTML <br> elements." ]
    }, {
      "name" : "timeoutSec",
      "type" : "integer",
      "documentation" : [ "The timeout specified for the support bundle creation process." ]
    } ]
  }, {
    "name" : "EnableEncryptionAtRestResult",
    "members" : [ ]
  }, {
    "name" : "DisableEncryptionAtRestResult",
    "members" : [ ]
  }, {
    "name" : "GetSystemStatusResult",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "NodeSystemStatus" ]
    } ]
  }, {
    "name" : "NodeSystemStatus",
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "result",
      "type" : "NodeSystemStatusInfo"
    } ]
  }, {
    "name" : "NodeSystemStatusInfo",
    "members" : [ {
      "name" : "rebootRequired",
      "type" : "boolean"
    } ]
  }, {
    "name" : "SnmpSendTestTrapsResult",
    "members" : [ {
      "name" : "status",
      "type" : "string"
    } ]
  }, {
    "name" : "uint64",
    "alias" : "integer"
  }, {
    "name" : "uint32",
    "alias" : "integer"
  }, {
    "name" : "size_t",
    "alias" : "integer"
  }, {
    "name" : "ApiVersion",
    "alias" : "string",
    "documentation" : "API version string.",
    "restriction" : {
      "format" : "[0-9]+\\.[0-9]+"
    }
  }, {
    "name" : "AsyncResult",
    "documentation" : [ "The wrapped object returned by the \"GetAsyncResult\" API Service call.", "<br/>", "<b>Note</b>: The return value of GetAsyncResult is essentially a nested version of the standard JSON response with an additional status field." ],
    "members" : [ {
      "name" : "message",
      "type" : "string",
      "documentation" : [ "The return value for the original method call if the call was completed successfully." ]
    } ]
  }, {
    "name" : "AsyncTaskStatus",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "running",
        "documentation" : "The method is still running."
      }, {
        "value" : "complete",
        "documentation" : "The method is complete and the result or error is available."
      } ]
    }
  }, {
    "name" : "GetAsyncResultResult",
    "documentation" : [ "The object returned by the \"GetAsyncResult\" API Service call.", "<br/>", "<b>Note</b>: The return value of GetAsyncResult is essentially a nested version of the standard JSON response with an additional status field." ],
    "members" : [ {
      "name" : "result",
      "type" : "AsyncResult",
      "documentation" : [ "The resulting message for the original method call if the call was completed successfully." ]
    }, {
      "name" : "status",
      "type" : "AsyncTaskStatus",
      "documentation" : [ "Status of the asynchronous method call", "<br/><b>running</b>: The method is still running.", "<br/><b>complete</b>: The method is complete and the result or error is available." ]
    } ]
  }, {
    "name" : "Attributes",
    "alias" : "hashtable",
    "documentation" : [ "A JSON object whose maximum serialized size is 1KiB.", "Attributes are useful for defining custom properties on many of the system components." ],
    "converter" : "AttributesConverter"
  }, {
    "name" : "Hashtable",
    "alias" : "Object",
    "documentation" : [ "A Hashtable with nested Hashtables representing the json result." ],
    "converter" : "AttributesConverter"
  }, {
    "name" : "EventDetails",
    "alias" : "Object",
    "converter" : "EventDetailsConverter"
  }, {
    "name" : "Checksum",
    "alias" : "string",
    "restriction" : {
      "pattern" : "0x[0-9a-f]{32}"
    },
    "documentation" : [ "A hash value from some operation." ]
  }, {
    "name" : "EncryptionAtRestState",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "enabling",
        "documentation" : "Encryption at rest is being enabled."
      }, {
        "value" : "enabled",
        "documentation" : "Encryption at rest is enabled."
      }, {
        "value" : "disabling",
        "documentation" : "Encryption at rest is being disabled."
      }, {
        "value" : "disabled",
        "documentation" : "Encryption at rest is disabled."
      } ]
    }
  }, {
    "name" : "IpAddress",
    "alias" : "string",
    "restriction" : {
      "pattern" : "[0-2]?[0-9]{1,2}\\.[0-2]?[0-9]{1,2}\\.[0-2]?[0-9]{1,2}\\.[0-2]?[0-9]{1,2}"
    },
    "documentation" : "An IPv4 IP address."
  }, {
    "name" : "CHAPSecret",
    "converter" : "CHAPSecretConverter",
    "userDefined" : true
  }, {
    "name" : "Iqn",
    "alias" : "string"
  }, {
    "name" : "Name",
    "alias" : "string",
    "restriction" : {
      "minLength" : 1,
      "maxLength" : 64
    }
  }, {
    "name" : "NetworkInterfaceName",
    "alias" : "string",
    "documentation" : "The name of a network interface (for example: \"Bond10G\")."
  }, {
    "name" : "MacAddress",
    "alias" : "string",
    "documentation" : "A MAC address."
  }, {
    "name" : "Port",
    "alias" : "integer",
    "restriction" : {
      "minimum" : 1,
      "maximum" : 65535
    }
  }, {
    "name" : "QoS",
    "documentation" : [ "Quality of Service (QoS) values are used on SolidFire volumes to provision performance expectations.", "Minimum, maximum and burst QoS values can be set within the ranges specified in the QoS table below.", "<br/><br/>", "Volumes created without specified QoS values are created with the Default values listed below.", "Default values can be found by running the GetDefaultQoS method.", "<br/><br/>", "<b>minIOPS</b> Min: 100/50 (v7.0/v8.0), Default: 100, Max: 15,000<br/>", "<b>maxIOPS</b> Min: 100/50 (v7.0/v8.0), Default: 15,000, Max: 100,000<br/>", "<b>burstIOPS</b> Min: 100/50 (v7.0/v8.0), Default: 15,000, Max: 100,000<br/>" ],
    "members" : [ {
      "name" : "minIOPS",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : [ "Desired minimum 4KB IOPS to guarantee.", "The allowed IOPS will only drop below this level if all volumes have been capped", "at their minimum IOPS value and there is still insufficient performance capacity." ]
    }, {
      "name" : "maxIOPS",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : [ "Desired maximum 4KB IOPS allowed over an extended period of time." ]
    }, {
      "name" : "burstIOPS",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : [ "Maximum \"peak\" 4KB IOPS allowed for short periods of time.", "Allows for bursts of I/O activity over the normal max IOPS value." ]
    }, {
      "name" : "burstTime",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : [ "The length of time burst IOPS is allowed.", "The value returned is represented in time units of seconds.", "<br/><b>Note</b>: this value is calculated by the system based on IOPS set for QoS." ]
    } ]
  }, {
    "name" : "VolumeQOS",
    "documentation" : [ "Quality of Service (QoS) Result values are used on SolidFire volumes to provision performance expectations." ],
    "members" : [ {
      "name" : "minIOPS",
      "type" : "integer",
      "documentation" : [ "Desired minimum 4KB IOPS to guarantee.", "The allowed IOPS will only drop below this level if all volumes have been capped", "at their min IOPS value and there is still insufficient performance capacity." ]
    }, {
      "name" : "maxIOPS",
      "type" : "integer",
      "documentation" : [ "Desired maximum 4KB IOPS allowed over an extended period of time." ]
    }, {
      "name" : "burstIOPS",
      "type" : "integer",
      "documentation" : [ "Maximum \"peak\" 4KB IOPS allowed for short periods of time.", "Allows for bursts of I/O activity over the normal max IOPS value." ]
    }, {
      "name" : "burstTime",
      "type" : "integer",
      "documentation" : [ "The length of time burst IOPS is allowed.", "The value returned is represented in time units of seconds.", "<br/><b>Note</b>: this value is calculated by the system based on IOPS set for QoS." ]
    }, {
      "name" : "curve",
      "type" : {
        "name" : "Dictionary",
        "dictionaryType" : "integer"
      },
      "documentation" : [ "The curve is a set of key-value pairs.", "The keys are I/O sizes in bytes.", "The values represent the cost performing an IOP at a specific I/O size.", "The curve is calculated relative to a 4096 byte operation set at 100 IOPS." ]
    } ]
  }, {
    "name" : "UUID",
    "alias" : "string",
    "restriction" : {
      "pattern" : "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
    }
  }, {
    "name" : "Version",
    "alias" : "string",
    "restriction" : {
      "pattern" : "[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+"
    }
  }, {
    "name" : "AsyncHandleResult",
    "members" : [ {
      "name" : "asyncHandle",
      "type" : "AsyncResultID"
    } ]
  }, {
    "name" : "Drive",
    "members" : [ {
      "name" : "driveID",
      "type" : "DriveID",
      "documentation" : [ "A unique identifier for this drive." ]
    }, {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : [ "The node this drive is located.", "If the drive has been physically removed from the node, this is where it was last seen." ]
    }, {
      "name" : "assignedService",
      "type" : {
        "name" : "ServiceID",
        "optional" : true
      },
      "documentation" : [ "If this drive is hosting a service, the identifier for that service." ]
    }, {
      "name" : "asyncResultIDs",
      "type" : [ "AsyncResultID" ],
      "documentation" : [ "The list of asynchronous jobs currently running on the drive (for example: a secure erase job)." ]
    }, {
      "name" : "capacity",
      "type" : "integer",
      "documentation" : [ "The raw capacity of this drive in bytes." ]
    }, {
      "name" : "serial",
      "type" : "DriveSerial",
      "documentation" : "The manufacturer's serial number for this drive."
    }, {
      "name" : "slot",
      "type" : {
        "name" : "Slot",
        "optional" : true
      },
      "documentation" : [ "Slot number in the server chassis where this drive is located.", "If the drive has been physically removed from the node, this will not have a value." ]
    }, {
      "name" : "driveStatus",
      "type" : "DriveStatus",
      "documentation" : "The current status of this drive."
    }, {
      "name" : "driveType",
      "type" : "DriveType",
      "documentation" : "The type of this drive."
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "DriveSerial",
    "alias" : "string",
    "documentation" : [ "A manufacturer-provided serial number.", "It is unique to all drives in the world." ]
  }, {
    "name" : "DriveStatus",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "available",
        "documentation" : [ "The drive is present, but not hosting a service.", "It can be added to the cluster with AddDrives." ]
      }, {
        "value" : "active",
        "documentation" : [ "The drive is hosting data for a service." ]
      }, {
        "value" : "erasing",
        "documentation" : [ "The drive is in the process of being secure erased.", "Any data on that drive is permanently removed." ]
      }, {
        "value" : "removing",
        "documentation" : [ "The drive is in the process of being removed.", "Any data on the drive is being migrated to other active drives in the cluster." ]
      }, {
        "value" : "failed",
        "documentation" : [ "The drive has failed.", "Any data that was previously on the drive has been migrated to other drives in the cluster." ]
      } ]
    }
  }, {
    "name" : "DriveType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "volume",
        "documentation" : "A drive storing volume metadata."
      }, {
        "value" : "block",
        "documentation" : "A drive storing block data."
      }, {
        "value" : "unknown",
        "documentation" : "The drive is not active, so its type has yet to be determined."
      } ]
    }
  }, {
    "name" : "NewDrive",
    "members" : [ {
      "name" : "driveID",
      "type" : "DriveID",
      "documentation" : [ "A unique identifier for this drive." ]
    } ]
  }, {
    "name" : "AddDrivesResult",
    "members" : [ ]
  }, {
    "name" : "DriveInfo",
    "members" : [ {
      "name" : "capacity",
      "type" : "integer",
      "documentation" : [ "Total capacity of the drive, in bytes." ]
    }, {
      "name" : "driveID",
      "type" : "DriveID",
      "documentation" : "DriveID for this drive."
    }, {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : "NodeID where this drive is located."
    }, {
      "name" : "serial",
      "type" : "string",
      "documentation" : "Drive serial number."
    }, {
      "name" : "slot",
      "type" : "integer",
      "documentation" : "Slot number in the server chassis where this drive is located, or -1 if SATADimm used for internal metadata drive."
    }, {
      "name" : "status",
      "type" : "string",
      "restriction" : {
        "enum" : [ {
          "value" : "available",
          "documentation" : "An available drive."
        }, {
          "value" : "active",
          "documentation" : "An active drive."
        }, {
          "value" : "erasing",
          "documentation" : "A drive is in the process of being secure erased. Any data on that drive is permanently removed."
        }, {
          "value" : "failed",
          "documentation" : "A drive that has failed. Any data that was previously on the drive has been migrated to other drives in the cluster."
        }, {
          "value" : "removing",
          "documentation" : "A drive is in the process of being removed. Any data previously on the drive is being migrated to other drives in the cluster."
        } ]
      }
    }, {
      "name" : "type",
      "type" : "string",
      "restriction" : {
        "enum" : [ {
          "value" : "volume",
          "documentation" : "Stores volume metadata."
        }, {
          "value" : "block",
          "documentation" : "Stores block data."
        }, {
          "value" : "unknown",
          "documentation" : "Drive type not yet active and is yet to be determined."
        } ]
      }
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : [ "List of Name/Value pairs in JSON object format." ]
    } ]
  }, {
    "name" : "GetDriveConfigResult",
    "members" : [ {
      "name" : "driveConfig",
      "type" : "DrivesConfigInfo",
      "documentation" : [ "Configuration information for the drives that are connected to the cluster" ]
    } ]
  }, {
    "name" : "DrivesConfigInfo",
    "members" : [ {
      "name" : "drives",
      "type" : [ "DriveConfigInfo" ]
    } ]
  }, {
    "name" : "ListDrivesResult",
    "members" : [ {
      "name" : "drives",
      "type" : [ "DriveInfo" ],
      "documentation" : "Information for the drives that are connected to the cluster."
    } ]
  }, {
    "name" : "DriveConfigInfo",
    "members" : [ {
      "name" : "canonicalName",
      "type" : "string"
    }, {
      "name" : "connected",
      "type" : "boolean"
    }, {
      "name" : "dev",
      "type" : "integer"
    }, {
      "name" : "devPath",
      "type" : "string"
    }, {
      "name" : "driveType",
      "type" : "DriveType"
    }, {
      "name" : "fsType",
      "type" : "string"
    }, {
      "name" : "isMounted",
      "type" : "boolean"
    }, {
      "name" : "product",
      "type" : "string"
    }, {
      "name" : "mountPoint",
      "type" : "string"
    }, {
      "name" : "name",
      "type" : "string"
    }, {
      "name" : "path",
      "type" : "string"
    }, {
      "name" : "pathLink",
      "type" : "string"
    }, {
      "name" : "scsiCompatId",
      "type" : "string"
    }, {
      "name" : "smartSsdWriteCapable",
      "type" : "boolean"
    }, {
      "name" : "securityEnabled",
      "type" : "boolean"
    }, {
      "name" : "securityFrozen",
      "type" : "boolean"
    }, {
      "name" : "securityLocked",
      "type" : "boolean"
    }, {
      "name" : "securitySupported",
      "type" : "boolean"
    }, {
      "name" : "size",
      "type" : "size_t"
    }, {
      "name" : "slot",
      "type" : "Slot"
    }, {
      "name" : "uuid",
      "type" : "UUID"
    }, {
      "name" : "vendor",
      "type" : "string"
    }, {
      "name" : "version",
      "type" : "string"
    }, {
      "name" : "numBlockActual",
      "type" : "integer"
    }, {
      "name" : "numBlockExpected",
      "type" : "integer"
    }, {
      "name" : "numSliceActual",
      "type" : "integer"
    }, {
      "name" : "numSliceExpected",
      "type" : "integer"
    }, {
      "name" : "numTotalActual",
      "type" : "integer"
    }, {
      "name" : "numTotalExpected",
      "type" : "integer"
    } ]
  }, {
    "name" : "GetDriveHardwareInfoResult",
    "members" : [ {
      "name" : "driveHardwareInfo",
      "type" : "DriveHardwareInfo"
    } ]
  }, {
    "name" : "DriveHardwareInfo",
    "members" : [ {
      "name" : "description",
      "type" : "string"
    }, {
      "name" : "dev",
      "type" : "string"
    }, {
      "name" : "devpath",
      "type" : "string"
    }, {
      "name" : "driveSecurityAtMaximum",
      "type" : "boolean"
    }, {
      "name" : "driveSecurityFrozen",
      "type" : "boolean"
    }, {
      "name" : "driveSecurityLocked",
      "type" : "boolean"
    }, {
      "name" : "logicalname",
      "type" : "string"
    }, {
      "name" : "product",
      "type" : "string"
    }, {
      "name" : "scsiCompatID",
      "type" : "string"
    }, {
      "name" : "securityFeatureEnabled",
      "type" : "boolean"
    }, {
      "name" : "securityFeatureSupported",
      "type" : "boolean"
    }, {
      "name" : "serial",
      "type" : "string"
    }, {
      "name" : "size",
      "type" : "size_t"
    }, {
      "name" : "uuid",
      "type" : "UUID"
    }, {
      "name" : "version",
      "type" : "string"
    } ]
  }, {
    "name" : "ListDriveHardwareResult",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "NodeDriveHardware" ]
    } ]
  }, {
    "name" : "NodeDriveHardware",
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "result",
      "type" : "DrivesHardware"
    } ]
  }, {
    "name" : "DrivesHardware",
    "members" : [ {
      "name" : "driveHardware",
      "type" : [ "DriveHardware" ]
    } ]
  }, {
    "name" : "DriveHardware",
    "members" : [ {
      "name" : "canonicalName",
      "type" : "string"
    }, {
      "name" : "connected",
      "type" : "boolean"
    }, {
      "name" : "dev",
      "type" : "integer"
    }, {
      "name" : "devPath",
      "type" : "string"
    }, {
      "name" : "driveType",
      "type" : "string"
    }, {
      "name" : "lifeRemainingPercent",
      "type" : "integer"
    }, {
      "name" : "lifetimeReadBytes",
      "type" : "integer"
    }, {
      "name" : "lifetimeWriteBytes",
      "type" : "integer"
    }, {
      "name" : "name",
      "type" : "string"
    }, {
      "name" : "path",
      "type" : "string"
    }, {
      "name" : "pathLink",
      "type" : "string"
    }, {
      "name" : "powerOnHours",
      "type" : "integer"
    }, {
      "name" : "product",
      "type" : "string"
    }, {
      "name" : "reallocatedSectors",
      "type" : "integer"
    }, {
      "name" : "reserveCapacityPercent",
      "type" : "integer"
    }, {
      "name" : "scsiCompatId",
      "type" : "string"
    }, {
      "name" : "scsiState",
      "type" : "string"
    }, {
      "name" : "securityAtMaximum",
      "type" : "boolean"
    }, {
      "name" : "securityEnabled",
      "type" : "boolean"
    }, {
      "name" : "securityFrozen",
      "type" : "boolean"
    }, {
      "name" : "securityLocked",
      "type" : "boolean"
    }, {
      "name" : "securitySupported",
      "type" : "boolean"
    }, {
      "name" : "serial",
      "type" : "string"
    }, {
      "name" : "size",
      "type" : "integer"
    }, {
      "name" : "slot",
      "type" : "integer"
    }, {
      "name" : "smartSsdWriteCapable",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    }, {
      "name" : "uuid",
      "type" : "UUID"
    }, {
      "name" : "vendor",
      "type" : "string"
    }, {
      "name" : "version",
      "type" : "string"
    } ]
  }, {
    "name" : "GetDriveStatsResult",
    "members" : [ {
      "name" : "driveStats",
      "type" : "DriveStats"
    } ]
  }, {
    "name" : "TestDrivesResult",
    "members" : [ {
      "name" : "details",
      "type" : "string"
    } ]
  }, {
    "name" : "ResetDrivesResult",
    "members" : [ {
      "name" : "details",
      "type" : "ResetDrivesDetails",
      "documentation" : "Details of drives that are being reset."
    } ]
  }, {
    "name" : "ResetDrivesDetails",
    "members" : [ {
      "name" : "drives",
      "type" : [ "ResetDriveDetails" ],
      "documentation" : "Details of a single drive that is being reset."
    } ]
  }, {
    "name" : "ResetDriveDetails",
    "members" : [ {
      "name" : "drive",
      "type" : "string",
      "documentation" : "Drive name"
    }, {
      "name" : "returnCode",
      "type" : "integer"
    }, {
      "name" : "stderr",
      "type" : "string"
    }, {
      "name" : "stdout",
      "type" : "string"
    } ]
  }, {
    "name" : "DriveStats",
    "members" : [ {
      "name" : "activeSessions",
      "type" : "integer"
    }, {
      "name" : "failedDieCount",
      "type" : "integer"
    }, {
      "name" : "lifeRemainingPercent",
      "type" : "integer"
    }, {
      "name" : "lifetimeReadBytes",
      "type" : "integer"
    }, {
      "name" : "lifetimeWriteBytes",
      "type" : "integer"
    }, {
      "name" : "powerOnHours",
      "type" : "integer"
    }, {
      "name" : "readBytes",
      "type" : "integer"
    }, {
      "name" : "readOps",
      "type" : "integer"
    }, {
      "name" : "reallocatedSectors",
      "type" : "integer"
    }, {
      "name" : "reserveCapacityPercent",
      "type" : "integer"
    }, {
      "name" : "timestamp",
      "type" : "TimePoint"
    }, {
      "name" : "totalCapacity",
      "type" : "integer"
    }, {
      "name" : "usedCapacity",
      "type" : {
        "name" : "integer",
        "optional" : true
      }
    }, {
      "name" : "usedMemory",
      "type" : "integer"
    }, {
      "name" : "writeBytes",
      "type" : "integer"
    }, {
      "name" : "writeOps",
      "type" : "integer"
    } ]
  }, {
    "name" : "GetFeatureStatusResult",
    "members" : [ {
      "name" : "features",
      "type" : [ "FeatureObject" ],
      "documentation" : "An array of feature objects indicating the feature name and its status."
    } ]
  }, {
    "name" : "FeatureObject",
    "members" : [ {
      "name" : "enabled",
      "type" : "boolean",
      "documentation" : "True if the feature is enabled, otherwise false."
    }, {
      "name" : "feature",
      "type" : "string",
      "documentation" : "The name of the feature."
    } ]
  }, {
    "name" : "EnableFeatureResult",
    "members" : [ ]
  }, {
    "name" : "ListFibreChannelPortInfoResult",
    "members" : [ {
      "name" : "fibreChannelPortInfo",
      "type" : {
        "name" : "Dictionary",
        "dictionaryType" : "FibreChannelPortInfoResult"
      },
      "documentation" : "Used to return information about the Fibre Channel ports."
    } ],
    "documentation" : "ListFibreChannelPortInfoResult is used to return information about the Fibre Channel ports."
  }, {
    "name" : "FibreChannelPortInfoResult",
    "members" : [ {
      "name" : "result",
      "type" : "FibreChannelPortList",
      "documentation" : "Used to return information about the Fibre Channel ports."
    } ],
    "documentation" : "Used to return information about the Fibre Channel ports."
  }, {
    "name" : "FibreChannelPortList",
    "members" : [ {
      "name" : "fibreChannelPorts",
      "type" : [ "FibreChannelPortInfo" ],
      "documentation" : "List of all physical Fibre Channel ports."
    } ],
    "documentation" : "List of all Fibre Channel ports."
  }, {
    "name" : "FibreChannelPortInfo",
    "documentation" : [ "Fibre Channel Node Port Info object returns information about all Fibre Channel ports on a node, or for one node in the cluster. The same information is returned for all ports or port information for one node. This information is returned with the API method ListNodeFibreChannelPortInfo (in the SolidFire API Guide)." ],
    "members" : [ {
      "name" : "firmware",
      "type" : "string",
      "documentation" : "The version of the firmware installed on the Fibre Channel port."
    }, {
      "name" : "hbaPort",
      "type" : "integer",
      "documentation" : "The ID of the individual HBA port."
    }, {
      "name" : "model",
      "type" : "string",
      "documentation" : "Model of the HBA on the port."
    }, {
      "name" : "nPortID",
      "type" : "string",
      "documentation" : "Unique SolidFire port node ID."
    }, {
      "name" : "pciSlot",
      "type" : "integer",
      "documentation" : "Slot in which the pci card resides on the Fibre Channel node hardware."
    }, {
      "name" : "serial",
      "type" : "string",
      "documentation" : "Serial number on the Fibre Channel port."
    }, {
      "name" : "speed",
      "type" : "string",
      "documentation" : "Speed of the HBA on the port."
    }, {
      "name" : "state",
      "type" : "string",
      "documentation" : [ "Possible values:", "<br/><br/>", "<strong>Unknown<br/>NotPresent<br/>Online<br/>Offline<br/>Blocked<br/>Bypassed<br/>Diagnostics<br/>Linkdown<br/>Error<br/>Loopback<br/>Deleted</strong>" ]
    }, {
      "name" : "switchWwn",
      "type" : "string",
      "documentation" : "The World Wide Name of the Fibre Channel switch port."
    }, {
      "name" : "wwnn",
      "type" : "string",
      "documentation" : "World Wide Node Name of the HBA node."
    }, {
      "name" : "wwpn",
      "type" : "string",
      "documentation" : "World Wide Port Name assigned to the physical port of the HBA."
    } ]
  }, {
    "name" : "ListFibreChannelSessionsResult",
    "members" : [ {
      "name" : "sessions",
      "type" : [ "FibreChannelSession" ],
      "documentation" : "A list of FibreChannelSession objects with information about the Fibre Channel session."
    } ],
    "documentation" : "Used to return information about the Fibre Channel sessions."
  }, {
    "name" : "FibreChannelSession",
    "members" : [ {
      "name" : "initiatorWWPN",
      "type" : "string",
      "documentation" : "The WWPN of the initiator which is logged into the target port."
    }, {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : "The node owning the Fibre Channel session."
    }, {
      "name" : "serviceID",
      "type" : "ServiceID",
      "documentation" : "The service ID of the FService owning this Fibre Channel session"
    }, {
      "name" : "targetWWPN",
      "type" : "string",
      "documentation" : "The WWPN of the target port involved in this session."
    }, {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "The ID of the volume access group to which the initiatorWWPN belongs. If not in a volume access group, the value will be null."
    } ],
    "documentation" : "FibreChannelSession contains information about each Fibre Channel session that is visible to the cluster and what target ports it is visible on."
  }, {
    "name" : "ListNodeFibreChannelPortInfoResult",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "NodeFibreChannelPortInfoResult" ],
      "documentation" : "List of fibre channel port info results grouped by node."
    } ],
    "documentation" : "List of fibre channel port info results grouped by node."
  }, {
    "name" : "NodeFibreChannelPortInfoResult",
    "members" : [ {
      "name" : "nodeID",
      "type" : "integer",
      "documentation" : "The ID of the Fibre Channel node."
    }, {
      "name" : "result",
      "type" : "FibreChannelPortList",
      "documentation" : "Contains a list of information about the Fibre Channel ports."
    } ],
    "documentation" : "Fibre channel port info results for a node."
  }, {
    "name" : "GetClusterHardwareInfoResult",
    "members" : [ {
      "type" : "ClusterHardwareInfo",
      "documentation" : "Hardware information for all nodes and drives in the cluster. Each object in this output is labeled with the nodeID of the given node.",
      "name" : "clusterHardwareInfo"
    } ]
  }, {
    "name" : "ClusterHardwareInfo",
    "members" : [ {
      "type" : {
        "name" : "Dictionary",
        "dictionaryType" : "DriveHardwareInfo"
      },
      "name" : "drives"
    }, {
      "name" : "nodes",
      "type" : {
        "name" : "Dictionary",
        "dictionaryType" : "Attributes"
      }
    } ]
  }, {
    "name" : "GetHardwareConfigResult",
    "members" : [ {
      "type" : "HardwareConfig",
      "documentation" : "List of hardware information and current settings.",
      "name" : "hardwareConfig"
    } ]
  }, {
    "name" : "GetNodeHardwareInfoResult",
    "members" : [ {
      "type" : "Attributes",
      "documentation" : "Hardware information for the specified nodeID.",
      "name" : "nodeHardwareInfo"
    } ]
  }, {
    "name" : "GetNvramInfoResult",
    "members" : [ {
      "type" : "Attributes",
      "documentation" : "Arrays of events and errors detected on the NVRAM card.",
      "name" : "nvramInfo"
    } ]
  }, {
    "name" : "KernelCrashDump",
    "members" : [ {
      "type" : "integer",
      "name" : "kernelCrashDumpMinFreeGb"
    }, {
      "type" : "string",
      "name" : "kernelCrashDumpDirectory"
    }, {
      "type" : "string",
      "name" : "kernelCrashDumpKernelOptions"
    }, {
      "type" : "integer",
      "name" : "kernelCrashDumpMakedumpfileLevel"
    }, {
      "type" : "string",
      "name" : "kernelCrashDumpDefaultState"
    } ]
  }, {
    "name" : "SolidfireDefaults",
    "members" : [ {
      "type" : "uint64",
      "name" : "sliceFileLogFileCapacity"
    }, {
      "type" : "integer",
      "name" : "postCallbackThreadCount"
    }, {
      "type" : "integer",
      "name" : "cpuDmaLatency"
    }, {
      "type" : "integer",
      "name" : "bufferCacheGB"
    }, {
      "type" : "integer",
      "name" : "maxIncomingSliceSyncs"
    }, {
      "type" : "integer",
      "name" : "configuredIops"
    }, {
      "type" : "integer",
      "name" : "sCacheFileCapacity"
    } ]
  }, {
    "name" : "HardwareConfig",
    "members" : [ {
      "type" : "string",
      "name" : "scsiBusInternalDriver"
    }, {
      "type" : [ "string" ],
      "name" : "networkDriver"
    }, {
      "type" : "string",
      "name" : "biosRevision"
    }, {
      "type" : "integer",
      "name" : "slotOffset"
    }, {
      "type" : "integer",
      "name" : "numCpu"
    }, {
      "type" : [ "string" ],
      "name" : "sliceDrives"
    }, {
      "type" : "integer",
      "name" : "numDrives"
    }, {
      "type" : "KernelCrashDump",
      "name" : "kernelCrashDump"
    }, {
      "type" : "uint64",
      "name" : "blockDriveSizeBytes"
    }, {
      "type" : "string",
      "name" : "cpuModel"
    }, {
      "type" : "string",
      "name" : "bmcFirmwareRevision"
    }, {
      "type" : "integer",
      "name" : "cpuCoresEnabled"
    }, {
      "type" : "string",
      "name" : "fibreChannelModel"
    }, {
      "type" : "string",
      "name" : "chassisType"
    }, {
      "type" : "string",
      "name" : "bmcIpmiVersion"
    }, {
      "type" : "string",
      "name" : "nodeType"
    }, {
      "type" : "SolidfireDefaults",
      "name" : "solidfireDefaults"
    }, {
      "type" : "string",
      "name" : "idracVersion"
    }, {
      "type" : [ "string" ],
      "name" : "blockDrives"
    }, {
      "type" : "string",
      "name" : "biosVendor"
    }, {
      "type" : "string",
      "name" : "fibreChannelFirmwareRevision"
    }, {
      "type" : "string",
      "name" : "scsiBusExternalDriver"
    }, {
      "type" : "integer",
      "name" : "numDrivesInternal"
    }, {
      "type" : "uint64",
      "name" : "sliceDriveSizeBytes"
    }, {
      "type" : "string",
      "name" : "biosVersion"
    }, {
      "type" : "integer",
      "name" : "memoryMhz"
    }, {
      "type" : "integer",
      "name" : "cpuCores"
    }, {
      "type" : "string",
      "name" : "rootDrive"
    }, {
      "type" : "uint64",
      "name" : "driveSizeBytesInternal"
    }, {
      "type" : "string",
      "name" : "lifecycleVersion"
    }, {
      "type" : "integer",
      "name" : "memoryGB"
    }, {
      "type" : "integer",
      "name" : "cpuThreads"
    } ]
  }, {
    "name" : "MasterID",
    "alias" : "uint32"
  }, {
    "name" : "DriveID",
    "alias" : "uint32"
  }, {
    "name" : "VolumeID",
    "alias" : "uint32"
  }, {
    "name" : "ServiceID",
    "alias" : "uint32"
  }, {
    "name" : "SessionID",
    "alias" : "uint32"
  }, {
    "name" : "NodeID",
    "alias" : "uint32"
  }, {
    "name" : "PendingNodeID",
    "alias" : "uint32"
  }, {
    "name" : "SliceID",
    "alias" : "uint32"
  }, {
    "name" : "AccountID",
    "alias" : "uint32"
  }, {
    "name" : "AsyncResultID",
    "alias" : "uint32"
  }, {
    "name" : "CloneID",
    "alias" : "uint32"
  }, {
    "name" : "GroupCloneID",
    "alias" : "uint32"
  }, {
    "name" : "SnapshotID",
    "alias" : "uint32"
  }, {
    "name" : "ScheduleID",
    "alias" : "uint32"
  }, {
    "name" : "GroupSnapshotID",
    "alias" : "uint32"
  }, {
    "name" : "BulkVolumeID",
    "alias" : "uint32"
  }, {
    "name" : "ClusterAdminID",
    "alias" : "uint32"
  }, {
    "name" : "ClusterPairID",
    "alias" : "uint32"
  }, {
    "name" : "ClusterAdminID",
    "alias" : "uint32"
  }, {
    "name" : "VolumeAccessGroupID",
    "alias" : "uint32"
  }, {
    "name" : "VirtualNetworkID",
    "alias" : "uint32"
  }, {
    "name" : "VirtualNetworkTags",
    "alias" : "uint32"
  }, {
    "name" : "InitiatorID",
    "alias" : "uint32"
  }, {
    "name" : "ClusterFaultID",
    "alias" : "uint32"
  }, {
    "name" : "NodeHardwareFaultID",
    "alias" : "uint32"
  }, {
    "name" : "RPCConnectionID",
    "alias" : "uint32"
  }, {
    "name" : "EventID",
    "alias" : "uint32"
  }, {
    "name" : "BackupTargetID",
    "alias" : "uint32"
  }, {
    "name" : "FCPortID",
    "alias" : "uint32"
  }, {
    "name" : "FCTargetPortGroup",
    "alias" : "uint32"
  }, {
    "name" : "Lun",
    "alias" : "uint32"
  }, {
    "name" : "Slot",
    "alias" : "size_t",
    "documentation" : [ "The slot number in the server chassis where a drive is located.", "The special value -1 is used if the drive is a SATADimm used for internal metadata drive." ]
  }, {
    "name" : "NAADeviceID",
    "alias" : "string"
  }, {
    "name" : "EUIDeviceID",
    "alias" : "string"
  }, {
    "name" : "InvokeSFApiResult",
    "alias" : "Object",
    "documentation" : [ "A nested hashtable of key/value pairs that contain the result of the invoked method." ],
    "converter" : "AttributesConverter"
  }, {
    "name" : "AddLdapClusterAdminResult",
    "members" : [ ]
  }, {
    "name" : "EnableLdapAuthenticationResult",
    "members" : [ ]
  }, {
    "name" : "DisableLdapAuthenticationResult",
    "members" : [ ]
  }, {
    "name" : "GetLdapConfigurationResult",
    "members" : [ {
      "name" : "ldapConfiguration",
      "type" : "LdapConfiguration",
      "documentation" : [ "List of the current LDAP configuration settings. This API call will not return the plain text of the search account password.", "<br/><br/>", "<b>Note</b>: If LDAP authentication is currently disabled, all the returned settings will be empty with the exception of \"authType\", and \"groupSearchType\" which are set to \"SearchAndBind\" and \"ActiveDirectory\" respectively." ]
    } ]
  }, {
    "name" : "TestLdapAuthenticationResult",
    "members" : [ {
      "name" : "groups",
      "type" : [ "string" ],
      "documentation" : [ "List of LDAP groups that the tested user is a member of." ]
    }, {
      "name" : "userDN",
      "type" : "string",
      "documentation" : [ "The tested user's full LDAP distinguished name." ]
    } ]
  }, {
    "name" : "LdapConfiguration",
    "members" : [ {
      "name" : "authType",
      "type" : "string",
      "documentation" : [ "Identifies which user authentcation method will be used. <br/>", "Valid values:<br/>", "<b>DirectBind</b><br/>", "<b>SearchAndBind</b>" ]
    }, {
      "name" : "enabled",
      "type" : "boolean",
      "documentation" : [ "Identifies whether or not the system is enabled for LDAP. <br/>", "Valid values:<br/>", "<b>true</b><br/>", "<b>false</b>" ]
    }, {
      "name" : "groupSearchBaseDN",
      "type" : "string",
      "documentation" : [ "The base DN of the tree to start the group search (will do a subtree search from here)." ]
    }, {
      "name" : "groupSearchCustomFilter",
      "type" : "string",
      "documentation" : [ "The custom search filter used." ]
    }, {
      "name" : "groupSearchType",
      "type" : "string",
      "documentation" : [ "Controls the default group search filter used, can be one of the following:<br/>", "<b>NoGroups</b>: No group support.<br/>", "<b>ActiveDirectory</b>: Nested membership of all of a user's AD groups.<br/>", "<b>MemberDN</b>: MemberDN style groups (single-level)." ]
    }, {
      "name" : "searchBindDN",
      "type" : "string",
      "documentation" : [ "A fully qualified DN to log in with to perform an LDAP search for the user (needs read access to the LDAP directory)." ]
    }, {
      "name" : "serverURIs",
      "type" : [ "string" ],
      "documentation" : [ "A comma-separated list of LDAP server URIs (examples: \"ldap://1.2.3.4\" and ldaps://1.2.3.4:123\")" ]
    }, {
      "name" : "userDNTemplate",
      "type" : "string",
      "documentation" : [ "A string that is used to form a fully qualified user DN." ]
    }, {
      "name" : "userSearchBaseDN",
      "type" : "string",
      "documentation" : [ "The base DN of the tree used to start the search (will do a subtree search from here)." ]
    }, {
      "name" : "userSearchFilter",
      "type" : "string",
      "documentation" : [ "The LDAP filter used." ]
    } ],
    "documentation" : [ "LDAP Configuration object returns information about the LDAP configuration on SolidFire storage. LDAP information is returned with the API method GetLdapConfiguration." ]
  }, {
    "name" : "GetLoginSessionInfoResult",
    "members" : [ {
      "name" : "loginSessionInfo",
      "type" : "LoginSessionInfo",
      "documentation" : [ "The authentication expiration period. Formatted in H:mm:ss. For example: 1:30:00, 20:00, 5:00. All leading zeros and colons are removed regardless of the format the timeout was entered.<br/>", "Objects returned are:<br/>", "<b>timeout</b> - The time, in minutes, when this session will timeout and expire." ]
    } ]
  }, {
    "name" : "LoginSessionInfo",
    "members" : [ {
      "name" : "timeout",
      "type" : "string"
    } ]
  }, {
    "name" : "GetRemoteLoggingHostsResult",
    "members" : [ {
      "name" : "remoteHosts",
      "type" : [ "LoggingServer" ],
      "documentation" : [ "List of hosts to forward logging information to." ]
    } ]
  }, {
    "name" : "SetRemoteLoggingHostsResult",
    "members" : [ ]
  }, {
    "name" : "SetLoginSessionInfoResult",
    "members" : [ ]
  }, {
    "name" : "LoggingServer",
    "members" : [ {
      "name" : "host",
      "type" : "string",
      "documentation" : "Hostname or IP address of the log server."
    }, {
      "name" : "port",
      "type" : "integer",
      "documentation" : "Port number that the log server is listening on."
    } ]
  }, {
    "name" : "ListNetworkInterfacesResult",
    "members" : [ {
      "name" : "interfaces",
      "type" : [ "NetworkInterface" ]
    } ]
  }, {
    "name" : "NetworkInterfaces",
    "members" : [ {
      "name" : "interfaces",
      "type" : [ "NetworkInterface" ]
    } ]
  }, {
    "name" : "ListClusterNetworkInterfacesResult",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "NodeNetworkInterface" ]
    } ]
  }, {
    "name" : "NodeNetworkInterface",
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : "The ID of the node."
    }, {
      "name" : "result",
      "type" : "NetworkInterfaces"
    } ]
  }, {
    "name" : "NetworkInterface",
    "members" : [ {
      "name" : "address",
      "type" : "string",
      "documentation" : "IP address of the network."
    }, {
      "name" : "broadcast",
      "type" : "string",
      "documentation" : "Address of NTP broadcast."
    }, {
      "name" : "macAddress",
      "type" : "string",
      "documentation" : "Address used to configure the interface."
    }, {
      "name" : "mtu",
      "type" : "integer",
      "documentation" : "Packet size on the network interface."
    }, {
      "name" : "name",
      "type" : "string",
      "documentation" : "Name of the network interface."
    }, {
      "name" : "netmask",
      "type" : "string",
      "documentation" : "Netmask for the network interface."
    }, {
      "name" : "status",
      "type" : "string",
      "documentation" : "Status of the network."
    }, {
      "name" : "type",
      "type" : "string",
      "documentation" : "The type of network, ie, BondMaster."
    }, {
      "name" : "virtualNetworkTag",
      "type" : "VirtualNetworkTag",
      "documentation" : "Virtual Network Tag if on virtual network."
    } ]
  }, {
    "name" : "Node",
    "documentation" : [ "A node refers to an individual machine in a cluster.", "Each active node hosts a master service, which is responsible for managing the drives and other services on its node.", "After a node is made active, its drives will become available for addition to the cluster." ],
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : [ "The unique identifier for this node." ]
    }, {
      "name" : "associatedMasterServiceID",
      "type" : "ServiceID",
      "documentation" : [ "The master service responsible for controlling other services on this node." ]
    }, {
      "name" : "associatedFServiceID",
      "type" : "ServiceID"
    }, {
      "name" : "fibreChannelTargetPortGroup",
      "type" : "string"
    }, {
      "name" : "name",
      "type" : "Name",
      "documentattion" : "The name of the Node."
    }, {
      "name" : "platformInfo",
      "type" : "Platform",
      "documentation" : "Information about the platform this node is."
    }, {
      "name" : "softwareVersion",
      "type" : "Version",
      "documentation" : "The version of SolidFire software this node is currently running."
    }, {
      "name" : "cip",
      "type" : "IpAddress",
      "documentation" : "IP address used for both intra- and inter-cluster communication."
    }, {
      "name" : "cipi",
      "type" : "NetworkInterfaceName",
      "documentation" : "The machine's name for the \"cip\" interface."
    }, {
      "name" : "mip",
      "type" : "IpAddress",
      "documentation" : [ "IP address used for cluster management (hosting the API and web site)." ]
    }, {
      "name" : "mipi",
      "type" : "NetworkInterfaceName",
      "documentation" : "The machine's name for the \"mip\" interface."
    }, {
      "name" : "sip",
      "type" : "IpAddress",
      "documentation" : [ "IP address used for iSCSI traffic." ]
    }, {
      "name" : "sipi",
      "type" : "NetworkInterfaceName",
      "documentation" : "The machine's name for the \"sip\" interface."
    }, {
      "name" : "uuid",
      "type" : "UUID",
      "documentation" : "UUID of node."
    }, {
      "name" : "attributes",
      "type" : "Attributes"
    } ]
  }, {
    "name" : "NodeState",
    "alias" : "string",
    "documentation" : "Node state enumeration.",
    "restriction" : {
      "enum" : [ {
        "value" : "available",
        "documentation" : "Node has not been configured with a cluster name."
      }, {
        "value" : "pending",
        "documentation" : "Node is pending for specific named cluster and can be added."
      }, {
        "value" : "active",
        "documentation" : "Node is active and a member of a cluster and may not be added to another cluster."
      } ]
    }
  }, {
    "name" : "PendingNode",
    "documentation" : [ "A \"pending node\" is one that has not yet joined the cluster.", "It can be added to a cluster using the AddNode method." ],
    "members" : [ {
      "name" : "pendingNodeID",
      "type" : "PendingNodeID"
    }, {
      "name" : "AssignedNodeID",
      "type" : "NodeID"
    }, {
      "name" : "name",
      "type" : "string",
      "documentation" : "The host name for this node."
    }, {
      "name" : "compatible",
      "type" : "boolean"
    }, {
      "name" : "platformInfo",
      "type" : "Platform",
      "documentation" : "Information about the platform this node is."
    }, {
      "name" : "cip",
      "type" : "IpAddress",
      "documentation" : [ "IP address used for both intra- and inter-cluster communication." ]
    }, {
      "name" : "cipi",
      "type" : "NetworkInterfaceName",
      "documentation" : "The machine's name for the \"cip\" interface."
    }, {
      "name" : "mip",
      "type" : "IpAddress",
      "documentation" : [ "IP address used for cluster management (hosting the API and web site)." ]
    }, {
      "name" : "mipi",
      "type" : "NetworkInterfaceName",
      "documentation" : "The machine's name for the \"mip\" interface."
    }, {
      "name" : "sip",
      "type" : "IpAddress",
      "documentation" : [ "IP address used for iSCSI traffic." ]
    }, {
      "name" : "sipi",
      "type" : "NetworkInterfaceName",
      "documentation" : "The machine's name for the \"sip\" interface."
    }, {
      "name" : "softwareVersion",
      "type" : "Version",
      "documentation" : "The version of SolidFire software this node is currently running."
    }, {
      "name" : "uuid",
      "type" : "UUID",
      "documentation" : "UUID of node."
    } ]
  }, {
    "name" : "ListActiveNodesResult",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "Node" ]
    } ]
  }, {
    "name" : "ListAllNodesResult",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "Node" ]
    }, {
      "name" : "pendingNodes",
      "type" : [ "PendingNode" ]
    } ]
  }, {
    "name" : "ListPendingNodesResult",
    "members" : [ {
      "name" : "pendingNodes",
      "type" : [ "PendingNode" ]
    } ]
  }, {
    "name" : "PendingNodeToNode",
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "pendingNodeID",
      "type" : "PendingNodeID"
    } ]
  }, {
    "name" : "AddNodesResult",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "AddedNode" ],
      "documentation" : "An array of objects mapping the previous \"pendingNodeID\" to the \"nodeID\"."
    } ]
  }, {
    "name" : "AddedNode",
    "members" : [ {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "pendingNodeID",
      "type" : "NodeID"
    } ]
  }, {
    "name" : "RemoveNodesResult",
    "members" : [ ]
  }, {
    "name" : "GetNetworkConfigResult",
    "members" : [ {
      "name" : "network",
      "type" : "Network",
      "documentataion" : "Network connection types and current settings."
    } ]
  }, {
    "name" : "SetNetworkConfigResult",
    "members" : [ {
      "name" : "network",
      "type" : "Network",
      "documentataion" : "The new and current network configuration for the node."
    } ]
  }, {
    "name" : "Network",
    "members" : [ {
      "name" : "Bond10G",
      "type" : {
        "name" : "NetworkConfig",
        "optional" : true
      },
      "documentataion" : "Network config for Bond10G network."
    }, {
      "name" : "Bond1G",
      "type" : {
        "name" : "NetworkConfig",
        "optional" : true
      },
      "documentataion" : "Network config for Bond1G network."
    } ]
  }, {
    "name" : "NetworkConfig",
    "members" : [ {
      "name" : "#default",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    }, {
      "name" : "address",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "auto",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    }, {
      "name" : "bond-downdelay",
      "type" : {
        "name" : "integer",
        "optional" : true
      }
    }, {
      "name" : "bond-fail_over_mac",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "bond-primary_reselect",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "bond-lacp_rate",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "bond-miimon",
      "type" : {
        "name" : "integer",
        "optional" : true
      }
    }, {
      "name" : "bond-mode",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "bond-slaves",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "bond-updelay",
      "type" : {
        "name" : "integer",
        "optional" : true
      }
    }, {
      "name" : "broadcast",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "dns-nameservers",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "dns-search",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "family",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "gateway",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "macAddress",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "macAddressPermanent",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "method",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "mtu",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "netmask",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "network",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "physical",
      "type" : {
        "name" : "PhysicalAdapter",
        "optional" : true
      }
    }, {
      "name" : "routes",
      "type" : {
        "optional" : true,
        "name" : [ "string" ]
      }
    }, {
      "name" : "status",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "symmetricRouteRules",
      "type" : {
        "optional" : true,
        "name" : [ "string" ]
      }
    }, {
      "name" : "upAndRunning",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    } ]
  }, {
    "name" : "PhysicalAdapter",
    "members" : [ {
      "name" : "address",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "macAddress",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "macAddressPermanent",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "mtu",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "netmask",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "network",
      "type" : {
        "name" : "string",
        "optional" : true
      }
    }, {
      "name" : "upAndRunning",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    } ]
  }, {
    "name" : "GetConfigResult",
    "members" : [ {
      "name" : "config",
      "type" : "Config",
      "documentation" : "The details of the cluster. Values returned in \"config\": cluster- Cluster information that identifies how the node communicates with the cluster it is associated with. (Object) network - Network information for bonding and Ethernet connections. (Object)"
    } ]
  }, {
    "name" : "SetConfigResult",
    "members" : [ {
      "name" : "config",
      "type" : "Config",
      "documentation" : "The new and current configuration for the node."
    } ]
  }, {
    "name" : "Config",
    "members" : [ {
      "name" : "cluster",
      "type" : "ClusterConfig"
    }, {
      "name" : "network",
      "type" : "Network"
    } ]
  }, {
    "name" : "GetBootstrapConfigResult",
    "members" : [ {
      "name" : "clusterName",
      "type" : "string",
      "documentation" : "Name of the cluster."
    }, {
      "name" : "nodeName",
      "type" : "string",
      "documentation" : "Name of the node."
    }, {
      "name" : "nodes",
      "type" : [ "NodeWaitingToJoin" ],
      "documentation" : "List of descriptions for each node that is actively waiting to join this cluster: compatible - Indicates if the listed node is compatible with the node the API call was executed against. name - IP address of each node. version - version of SolidFire Element software currently installed on the node."
    }, {
      "name" : "version",
      "type" : "string",
      "documentation" : "Version of the SolidFire Element software currently installed."
    } ]
  }, {
    "name" : "NodeWaitingToJoin",
    "members" : [ {
      "name" : "name",
      "type" : "Name"
    }, {
      "name" : "version",
      "type" : "string"
    }, {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "pendingNodeID",
      "type" : "PendingNodeID"
    }, {
      "name" : "mip",
      "type" : "IpAddress"
    }, {
      "name" : "cip",
      "type" : "IpAddress"
    }, {
      "name" : "sip",
      "type" : "IpAddress"
    } ]
  }, {
    "name" : "GetNodeStatsResult",
    "members" : [ {
      "name" : "nodeStats",
      "type" : "NodeStatsInfo",
      "documentation" : "Node activity information."
    } ]
  }, {
    "name" : "ListNodeStatsResult",
    "members" : [ {
      "name" : "nodeStats",
      "type" : "NodeStatsNodes",
      "documentation" : "Node activity information for all nodes."
    } ]
  }, {
    "name" : "NodeStatsNodes",
    "members" : [ {
      "name" : "nodes",
      "type" : [ "NodeStatsInfo" ],
      "documentation" : "Node activity information for a single node."
    } ]
  }, {
    "name" : "NodeStatsInfo",
    "members" : [ {
      "name" : "cBytesIn",
      "type" : "integer",
      "documentation" : "Bytes in on the cluster interface."
    }, {
      "name" : "cBytesOut",
      "type" : "integer",
      "documentation" : "Bytes out on the cluster interface."
    }, {
      "name" : "cpu",
      "type" : "integer",
      "documentation" : "CPU Usage %"
    }, {
      "name" : "mBytesIn",
      "type" : "integer",
      "documentation" : "Bytes in on the management interface."
    }, {
      "name" : "mBytesOut",
      "type" : "integer",
      "documentation" : "Bytes out on the management interface."
    }, {
      "name" : "networkUtilizationCluster",
      "type" : "integer",
      "documentation" : "Network interface utilization (in %) for the cluster network interface."
    }, {
      "name" : "networkUtilizationStorage",
      "type" : "integer",
      "documentation" : "Network interface utilization (in %) for the storage network interface."
    }, {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "sBytesIn",
      "type" : "integer",
      "documentation" : "Bytes in on the storage interface."
    }, {
      "name" : "sBytesOut",
      "type" : "integer",
      "documentation" : "Bytes out on the storage interface."
    }, {
      "name" : "timestamp",
      "type" : "TimePoint",
      "documentation" : "Current time in UTC format ISO 8691 date string."
    }, {
      "name" : "usedMemory",
      "type" : "integer",
      "documentation" : "Total memory usage in bytes."
    } ]
  }, {
    "name" : "GetPendingOperationResult",
    "members" : [ {
      "name" : "pendingOperation",
      "type" : "PendingOperation"
    } ]
  }, {
    "name" : "PendingOperation",
    "members" : [ {
      "name" : "pending",
      "type" : "boolean",
      "documentation" : [ "<br/><b>true</b>: operation is still in progress.", "<br/><b>false</b>: operation is no longer in progress." ]
    }, {
      "name" : "operation",
      "type" : "string",
      "documentation" : "Name of operation that is in progress or has completed."
    } ]
  }, {
    "name" : "ListClusterPairsResult",
    "members" : [ {
      "name" : "clusterPairs",
      "type" : [ "PairedCluster" ],
      "documentation" : "Information about each paired cluster."
    } ]
  }, {
    "name" : "ListActivePairedVolumesResult",
    "members" : [ {
      "name" : "volumes",
      "type" : [ "Volume" ],
      "documentation" : "Volume information for the paired volumes."
    } ]
  }, {
    "name" : "PairedCluster",
    "members" : [ {
      "name" : "clusterName",
      "type" : "string",
      "documentation" : "Name of the other cluster in the pair"
    }, {
      "name" : "clusterPairID",
      "type" : "integer",
      "documentation" : "Unique ID given to each cluster in the pair."
    }, {
      "name" : "clusterPairUUID",
      "type" : "UUID",
      "documentation" : "Universally unique identifier."
    }, {
      "name" : "latency",
      "type" : "integer",
      "documentation" : "Number, in milliseconds, of latency between clusters."
    }, {
      "name" : "mvip",
      "type" : "IpAddress",
      "documentation" : "IP of the management connection for paired clusters."
    }, {
      "name" : "status",
      "type" : "string",
      "documentation" : [ "Can be one of the following:", "<br/><b>Connected</b>", "<br/><b>Misconfigured</b>", "<br/><b>Disconnected</b>" ]
    }, {
      "name" : "version",
      "type" : "string",
      "documentation" : "The Element OS version of the other cluster in the pair."
    } ]
  }, {
    "name" : "StartClusterPairingResult",
    "members" : [ {
      "name" : "clusterPairingKey",
      "type" : "string",
      "documentation" : "A string of characters that is used by the \"CompleteClusterPairing\" API method."
    }, {
      "name" : "clusterPairID",
      "type" : "integer",
      "documentation" : "Unique identifier for the cluster pair."
    } ]
  }, {
    "name" : "StartVolumePairingResult",
    "members" : [ {
      "name" : "volumePairingKey",
      "type" : "string",
      "documentation" : "A string of characters that is used by the \"CompleteVolumePairing\" API method."
    } ]
  }, {
    "name" : "CompleteClusterPairingResult",
    "members" : [ {
      "name" : "clusterPairID",
      "type" : "integer",
      "documentation" : "Unique identifier for the cluster pair."
    } ]
  }, {
    "name" : "CompleteVolumePairingResult",
    "members" : [ ]
  }, {
    "name" : "RemoveClusterPairResult",
    "members" : [ ]
  }, {
    "name" : "RemoveVolumePairResult",
    "members" : [ ]
  }, {
    "name" : "ModifyVolumePairResult",
    "members" : [ ]
  }, {
    "name" : "Platform",
    "members" : [ {
      "name" : "nodeType",
      "type" : "string",
      "documentation" : "SolidFire's name for this platform."
    }, {
      "name" : "chassisType",
      "type" : "string",
      "documentation" : "Name of the chassis (example: \"R620\")."
    }, {
      "name" : "cpuModel",
      "type" : "string",
      "documentation" : "The model of CPU used on this platform."
    }, {
      "name" : "nodeMemoryGB",
      "type" : "integer",
      "documentation" : "The amount of memory on this platform in GiB."
    } ]
  }, {
    "name" : "ProtocolEndpointID",
    "alias" : "UUID"
  }, {
    "name" : "ProtocolEndpointProviderID",
    "alias" : "uint64"
  }, {
    "name" : "ProtocolEndpointProviderType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "primary"
      }, {
        "value" : "secondary"
      } ]
    }
  }, {
    "name" : "ProtocolEndpointStateType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "start"
      }, {
        "value" : "active"
      }, {
        "value" : "failover"
      }, {
        "value" : "reserved"
      } ]
    }
  }, {
    "name" : "ProtocolEndpointDeviceID",
    "alias" : "uint64"
  }, {
    "name" : "ProtocolEndpointType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "scsi",
        "documentation" : "SCSI PE type"
      }, {
        "value" : "NFS",
        "documentation" : "NFS version 2 or 3 PE type"
      }, {
        "value" : "NFS4x",
        "documentation" : "NFS version 4 PE type"
      } ]
    }
  }, {
    "name" : "ProtocolEndpoint",
    "members" : [ {
      "name" : "protocolEndpointID",
      "type" : "ProtocolEndpointID"
    }, {
      "name" : "protocolEndpointState",
      "type" : "ProtocolEndpointStateType"
    }, {
      "name" : "providerType",
      "type" : "ProtocolEndpointProviderType"
    }, {
      "name" : "primaryProviderID",
      "type" : "ProtocolEndpointProviderID"
    }, {
      "name" : "secondaryProviderID",
      "type" : "ProtocolEndpointProviderID"
    }, {
      "name" : "scsiNAADeviceID",
      "type" : "NAADeviceID"
    } ]
  }, {
    "name" : "ProtocolEndpointResult",
    "members" : [ {
      "name" : "protocolEndpoint",
      "type" : "ProtocolEndpoint"
    } ]
  }, {
    "name" : "ListProtocolEndpointsResult",
    "members" : [ {
      "name" : "protocolEndpoints",
      "type" : [ "ProtocolEndpoint" ]
    } ]
  }, {
    "name" : "Service",
    "members" : [ {
      "name" : "serviceID",
      "type" : "ServiceID",
      "documentation" : "Unique identifier for this service."
    }, {
      "name" : "serviceType",
      "type" : "ServiceType"
    }, {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : [ "The node this service resides on." ]
    }, {
      "name" : "associatedBV",
      "type" : {
        "name" : "ServiceID",
        "optional" : true
      },
      "documentation" : [ "This service's associated bulk volume service.", "This will only be set if the service type is a slice service." ]
    }, {
      "name" : "associatedTS",
      "type" : {
        "name" : "ServiceID",
        "optional" : true
      },
      "documentation" : [ "This service's associated transport service.", "This will only be set if the service type is a slice service." ]
    }, {
      "name" : "associatedVS",
      "type" : {
        "name" : "ServiceID",
        "optional" : true
      },
      "documentation" : [ "This service's associated volume service.", "This will only be set if the service type is a slice service." ]
    }, {
      "name" : "asyncResultIDs",
      "type" : [ "AsyncResultID" ],
      "documentation" : [ "The list of asynchronous jobs currently running for this service." ]
    }, {
      "name" : "driveID",
      "type" : {
        "name" : "DriveID",
        "optional" : true
      },
      "documentation" : [ "If this service resides on a drive, the ID of that drive." ]
    }, {
      "name" : "firstTimeStartup",
      "type" : "boolean",
      "documentation" : [ "Has this service started successfully?", "When a new drive is added to the system, the created service will initially have a value of false here.", "After the service has started, this value will be set to true.", "This can be used to check if the service has ever started." ]
    }, {
      "name" : "ipcPort",
      "type" : "Port",
      "documentation" : [ "The port used for intra-cluster communication.", "This will be in the 4000-4100 range." ]
    }, {
      "name" : "iscsiPort",
      "type" : "Port",
      "documentation" : [ "The port used for iSCSI traffic.", "This will only be set if the service type is a transport service." ]
    } ]
  }, {
    "name" : "ServiceHealth",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "healthy",
        "documentation" : "A healthy service is the normal operating mode."
      }, {
        "value" : "unhealthy",
        "documentation" : [ "The service is not communicating properly with other services in the cluster.", "If it does not resume communication soon, it will be removed." ]
      }, {
        "value" : "forcedMigratingSlices",
        "documentation" : [ "The service has been removed via the API and is currently being migrated away from.", "When its responsibility for hosting volumes have been completely migrated to other services, it will be decommissioned.", "<br/><br/>", "This value is only applicable to services with \"serviceType\"=\"slice\"." ]
      }, {
        "value" : "migratingSlices",
        "documentation" : [ "Similar to \"forcedMigratingSlices\", but the service has been \"unhealthy\" for too long and is being removed from the cluster." ]
      }, {
        "value" : "decommissioned",
        "documentation" : [ "The service no longer has any responsibility for hosting and will be removed from the system soon." ]
      } ]
    }
  }, {
    "name" : "ServiceType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ "block", "volume", "slice", "transport", "master", "bulkVolume", "fibre" ]
    }
  }, {
    "name" : "DetailedService",
    "members" : [ {
      "name" : "service",
      "type" : "Service"
    }, {
      "name" : "node",
      "type" : "Node"
    }, {
      "name" : "drive",
      "type" : {
        "name" : "Drive",
        "optional" : true
      }
    } ]
  }, {
    "name" : "ListServicesResult",
    "members" : [ {
      "name" : "services",
      "type" : [ "DetailedService" ]
    } ]
  }, {
    "name" : "Snapshot",
    "documentation" : [ "Snapshots is an object containing information about each snapshot made for a volume.", "The return object includes information for the active snapshot as well as each snapshot created for the volume." ],
    "members" : [ {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : "Unique ID for this snapshot."
    }, {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The volume this snapshot was taken of."
    }, {
      "name" : "name",
      "type" : "string",
      "documentation" : [ "A name for this snapshot.", "It is not necessarily unique." ]
    }, {
      "name" : "checksum",
      "type" : "string",
      "documentation" : [ "A string that represents the correct digits in the stored snapshot.", "This checksum can be used later to compare other snapshots to detect errors in the data." ]
    }, {
      "name" : "enableRemoteReplication",
      "type" : "boolean",
      "since" : "8.0",
      "documentation" : "Identifies if snapshot is enabled for remote replication."
    }, {
      "name" : "expirationReason",
      "type" : "SnapshotExpirationReason",
      "since" : "8.0",
      "documentation" : [ "Indicates how the snapshot expiration was set. Possible values:", "<br/><b>api</b>: expiration time was set by using the API.", "<br/><b>none</b>: there is no expiration time set.", "<br/><b>test</b>: expiration time was set for testing." ]
    }, {
      "name" : "expirationTime",
      "type" : "TimePoint",
      "since" : "8.0",
      "documentation" : "The time at which this snapshot will expire and be purged from the cluster."
    }, {
      "name" : "remoteStatuses",
      "type" : "SnapshotRemoteStatuses",
      "since" : "8.0",
      "documentation" : [ "Current remote status of the snapshot remoteStatus: Possible values:", "<br/><b>Present</b>: Snapshot exists on a remote cluster", "<br/><b>Not Present</b>: Snapshot does not exist on remote cluster", "<br/><b>Syncing</b>: This is a target cluster and it is currently replicating the snapshot", "<br/><b>Deleted</b>: This is a target cluster, the snapshot has been deleted, and it still exists on the source.", "<br/><b>volumePairUUID</b>: universal identifier of the volume pair" ]
    }, {
      "name" : "status",
      "type" : "SnapshotStatus",
      "documentation" : [ "Current status of the snapshot", "<br/><b>Preparing</b>: A snapshot that is being prepared for use and is not yet writable.", "<br/><b>Done</b>: A snapshot that has finished being prepared and is now usable.", "<br/><b>Active</b>: This snapshot is the active branch." ]
    }, {
      "name" : "snapshotUUID",
      "type" : "UUID",
      "since" : "8.0",
      "documentation" : "Universal Unique ID of an existing snapshot."
    }, {
      "name" : "totalSize",
      "type" : "integer",
      "documentation" : [ "Total size of this snapshot in bytes.", "It is equivalent to totalSize of the volume when this snapshot was taken." ]
    }, {
      "name" : "groupID",
      "type" : {
        "name" : "GroupSnapshotID",
        "optional" : true
      },
      "documentation" : [ "If present, the ID of the group this snapshot is a part of.", "If not present, this snapshot is not part of a group." ]
    }, {
      "name" : "groupSnapshotUUID",
      "type" : "UUID",
      "since" : "8.0",
      "documentation" : [ "The current \"members\" results contains information about each snapshot in the group.", "Each of these members will have a \"uuid\" parameter for the snapshot's UUID." ]
    }, {
      "name" : "createTime",
      "type" : "TimePoint",
      "documentation" : "The time this snapshot was taken."
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "GroupSnapshot",
    "documentation" : [ "Group Snapshot object represents a point-in-time copy of a group of volumes." ],
    "members" : [ {
      "name" : "groupSnapshotID",
      "type" : "GroupSnapshotID",
      "documentation" : "Unique ID of the new group snapshot."
    }, {
      "name" : "groupSnapshotUUID",
      "type" : "UUID",
      "documentation" : "UUID of the group snapshot."
    }, {
      "name" : "members",
      "type" : [ "GroupSnapshotMembers" ],
      "documentation" : "List of volumeIDs and snapshotIDs for each member of the group."
    }, {
      "name" : "name",
      "type" : "string",
      "documentation" : "Name of the group snapshot, or, if none was given, the UTC formatted day and time on which the snapshot was created."
    }, {
      "name" : "createTime",
      "type" : "TimePoint",
      "documentation" : "The UTC formatted day and time on which the snapshot was created."
    }, {
      "name" : "status",
      "type" : "string",
      "documentation" : [ "Status of the snapshot.", "Possible values:", "<br/><b>Preparing</b>: A snapshot that is being prepared for use and is not yet writable.", "<br/><b>Done</b>: A snapshot that has finished being prepared and is now usable" ]
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "SnapshotExpirationReason",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "api",
        "documentation" : "Expiration time was set by using the API."
      }, {
        "value" : "none",
        "documentation" : "there is no expiration time set."
      }, {
        "value" : "test",
        "documentation" : "expiration time was set for testing."
      } ]
    }
  }, {
    "name" : "SnapshotRemoteStatuses",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "Present",
        "documentation" : "Snapshot exists on a remote cluster"
      }, {
        "value" : "Not Present",
        "documentation" : "Snapshot does not exist on remote cluster"
      }, {
        "value" : "Syncing",
        "documentation" : "This is a target cluster and it is currently replicating the snapshot"
      }, {
        "value" : "Deleted",
        "documentation" : "This is a target cluster, the snapshot has been deleted, and it still exists on the source."
      }, {
        "value" : "volumePairUUID",
        "documentation" : "The snapshot is done and is writable (the active branch of the slice)."
      }, {
        "value" : "Syncing",
        "documentation" : "The snapshot is done and is writable (the active branch of the slice)."
      } ]
    }
  }, {
    "name" : "SnapshotStatus",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "unknown",
        "documentation" : "The status is unknown."
      }, {
        "value" : "preparing",
        "documentation" : "The snapshot is being created."
      }, {
        "value" : "done",
        "documentation" : "The snapshot has completed and is saved."
      }, {
        "value" : "active",
        "documentation" : "The snapshot is done and is writable (the active branch of the slice)."
      } ]
    }
  }, {
    "name" : "CreateSnapshotResult",
    "members" : [ {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : "ID of the newly-created snapshot."
    }, {
      "name" : "checksum",
      "type" : "Checksum",
      "documentation" : [ "A string that represents the correct digits in the stored snapshot.", "This checksum can be used later to compare other snapshots to detect errors in the data." ]
    } ]
  }, {
    "name" : "GroupSnapshotMembers",
    "documentation" : "List of checksum, volumeIDs and snapshotIDs for each member of the group.",
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The source volume ID for the snapshot."
    }, {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : [ "Unique ID of a snapshot from which the new snapshot is made.", "The snapshotID passed must be a snapshot on the given volume." ]
    }, {
      "name" : "snapshotUUID",
      "type" : "string",
      "since" : "8.0",
      "documentation" : "Universal Unique ID of an existing snapshot."
    }, {
      "name" : "checksum",
      "type" : "Checksum",
      "documentation" : [ "A string that represents the correct digits in the stored snapshot.", "This checksum can be used later to compare other snapshots to detect errors in the data." ]
    } ]
  }, {
    "name" : "DeleteSnapshotResult",
    "members" : [ ]
  }, {
    "name" : "ListSnapshotsResult",
    "members" : [ {
      "name" : "snapshots",
      "type" : [ "Snapshot" ],
      "documentation" : [ "Information about each snapshot for each volume.", "If volumeID is not provided, all snapshots for all volumes is returned.", "Snapshots that are in a group will be returned with a \"groupID\".", "Snapshots that are enabled for replication." ]
    } ]
  }, {
    "name" : "ModifySnapshotResult",
    "since" : "8.0",
    "members" : [ ]
  }, {
    "name" : "CreateGroupSnapshotResult",
    "members" : [ {
      "name" : "groupSnapshotID",
      "type" : "GroupSnapshotID",
      "documentation" : "Unique ID of the new group snapshot."
    }, {
      "name" : "members",
      "type" : [ "GroupSnapshotMembers" ],
      "documentation" : [ "List of checksum, volumeIDs and snapshotIDs for each member of the group." ]
    } ]
  }, {
    "name" : "DeleteGroupSnapshotResult",
    "members" : [ ]
  }, {
    "name" : "ListGroupSnapshotsResult",
    "members" : [ {
      "name" : "groupSnapshots",
      "type" : [ "GroupSnapshot" ],
      "documentation" : "List of Group Snapshots."
    } ]
  }, {
    "name" : "ModifyGroupSnapshotResult",
    "since" : "8.0",
    "members" : [ ]
  }, {
    "name" : "GetScheduleResult",
    "members" : [ {
      "name" : "schedule",
      "type" : "Schedule",
      "documentation" : "The schedule attributes."
    } ]
  }, {
    "name" : "ListSchedulesResult",
    "members" : [ {
      "name" : "schedules",
      "type" : [ "Schedule" ],
      "documentation" : "The list of schedules currently on the cluster."
    } ]
  }, {
    "name" : "ModifyScheduleResult",
    "members" : [ ]
  }, {
    "name" : "Schedule",
    "members" : [ {
      "name" : "frequency",
      "type" : "Frequency",
      "documentation" : [ "Indicates the frequency of the schedule occurrence. Set this to a type that inherits from Frequency.<br/>", "Valid types are:<br/>", "DayOfWeekFrequency<br/>", "DayOfMonthFrequency<br/>", "TimeIntervalFrequency" ]
    }, {
      "name" : "hasError",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Indicates whether or not the schedule has errors." ]
    }, {
      "name" : "lastRunStatus",
      "type" : "string",
      "documentation" : [ "Indicates the status of the last scheduled snapshot.<br/>", "Valid values are:<br/>", "Success<br/>", "Failed" ]
    }, {
      "name" : "lastRunTimeStart",
      "type" : "TimePoint",
      "documentation" : [ "Indicates the last time the schedule started n ISO 8601 date string.", "Valid values are:<br/>", "Success<br/>", "Failed" ]
    }, {
      "name" : "paused",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Indicates whether or not the schedule is paused." ]
    }, {
      "name" : "recurring",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Indicates whether or not the schedule is recurring." ]
    }, {
      "name" : "runNextInterval",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Indicates whether or not the schedule will run the next time the scheduler is active. When set to \"true\", the schedule will run the next time the scheduler is active and then reset back to \"false\"." ]
    }, {
      "name" : "scheduleID",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : [ "Unique ID of the schedule" ]
    }, {
      "name" : "scheduleInfo",
      "type" : "ScheduleInfo",
      "documentation" : [ "Includes the unique name given to the schedule, the retention period for the snapshot that was created, and the volume ID of the volume from which the snapshot was created." ]
    }, {
      "name" : "name",
      "type" : "string",
      "documentation" : [ "Unique name assigned to the schedule." ]
    }, {
      "name" : "startingDate",
      "type" : "TimePoint",
      "documentation" : [ "Indicates the date the first time the schedule began of will begin. Formatted in UTC time." ]
    }, {
      "name" : "toBeDeleted",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Indicates if the schedule is marked for deletion." ]
    } ],
    "documentation" : "Schedule is an object containing information about each schedule created to autonomously make a snapshot of a volume. The return object includes information for all schedules. If scheduleID is used to identify a specific schedule then only information for that scheduleID is returned. Schedules information is returned with the API method, see ListSchedules on the SolidFire API guide page 245."
  }, {
    "name" : "ScheduleInfo",
    "members" : [ {
      "name" : "volumeIDs",
      "type" : {
        "name" : [ "integer" ],
        "optional" : true
      },
      "documentation" : "A list of volume IDs to be included in the group snapshot."
    }, {
      "name" : "snapshotName",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "The snapshot name to be used. "
    }, {
      "name" : "enableRemoteReplication",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Indicates if the snapshot should be included in remote replication."
    }, {
      "name" : "retention",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "The amount of time the snapshot will be retained in HH:mm:ss."
    } ]
  }, {
    "name" : "Frequency",
    "members" : [ ],
    "userDefined" : true
  }, {
    "name" : "CreateScheduleResult",
    "members" : [ {
      "name" : "scheduleID",
      "type" : "integer"
    } ]
  }, {
    "name" : "StorageContainerID",
    "alias" : "UUID"
  }, {
    "name" : "StorageContainer",
    "members" : [ {
      "name" : "name",
      "type" : "string"
    }, {
      "name" : "storageContainerID",
      "type" : "StorageContainerID"
    }, {
      "name" : "accountID",
      "type" : "integer"
    }, {
      "name" : "protocolEndpointType",
      "type" : "string"
    }, {
      "name" : "initiatorSecret",
      "type" : "CHAPSecret"
    }, {
      "name" : "targetSecret",
      "type" : "CHAPSecret"
    }, {
      "name" : "status",
      "type" : "string"
    } ]
  }, {
    "name" : "CreateStorageContainerResult",
    "members" : [ {
      "name" : "storageContainer",
      "type" : "StorageContainer"
    } ]
  }, {
    "name" : "ListStorageContainersResult",
    "members" : [ {
      "name" : "storageContainers",
      "type" : [ "StorageContainer" ]
    } ]
  }, {
    "name" : "DeleteStorageContainerResult",
    "members" : [ ]
  }, {
    "name" : "GetStorageContainerEfficiencyResult",
    "members" : [ {
      "type" : {
        "name" : "float"
      },
      "name" : "compression"
    }, {
      "type" : {
        "name" : "float"
      },
      "name" : "deduplication"
    }, {
      "type" : [ "integer" ],
      "documentation" : "The volumes that could not be queried for efficiency data. Missing volumes can be caused by the Garbage Collection (GC) cycle being less than an hour old, temporary loss of network connectivity, or restarted services since the GC cycle.",
      "name" : "missingVolumes"
    }, {
      "type" : {
        "name" : "float"
      },
      "name" : "thinProvisioning"
    }, {
      "type" : {
        "name" : "string"
      },
      "documentation" : "The last time efficiency data was collected after Garbage Collection (GC).",
      "name" : "timestamp"
    } ]
  }, {
    "name" : "ListTestsResult",
    "members" : [ {
      "name" : "tests",
      "type" : [ "string" ],
      "documentation" : "List of tests that can be performed on the node."
    } ]
  }, {
    "name" : "ListUtilitiesResult",
    "members" : [ {
      "name" : "utilities",
      "type" : [ "string" ],
      "documentation" : "List of utilities currently available to run on the node."
    } ]
  }, {
    "name" : "TestConnectEnsembleResult",
    "members" : [ {
      "name" : "details",
      "type" : "TestConnectEnsembleDetails"
    }, {
      "name" : "duration",
      "type" : "string",
      "documentation" : "The length of time required to run the test."
    }, {
      "name" : "result",
      "type" : "string",
      "documentation" : "The results of the entire test"
    } ]
  }, {
    "name" : "TestConnectMvipResult",
    "members" : [ {
      "name" : "details",
      "type" : "TestConnectMvipDetails",
      "documentation" : "Information about the test operation"
    }, {
      "name" : "duration",
      "type" : "string",
      "documentation" : "The length of time required to run the test."
    }, {
      "name" : "result",
      "type" : "string",
      "documentation" : "The results of the entire test"
    } ]
  }, {
    "name" : "TestConnectSvipResult",
    "members" : [ {
      "name" : "details",
      "type" : "TestConnectSvipDetails",
      "documentation" : "Information about the test operation"
    }, {
      "name" : "duration",
      "type" : "string",
      "documentation" : "The length of time required to run the test."
    }, {
      "name" : "result",
      "type" : "string",
      "documentation" : "The results of the entire test"
    } ]
  }, {
    "name" : "TestConnectEnsembleDetails",
    "members" : [ {
      "name" : "nodes",
      "type" : "Object",
      "documentation" : "A list of each ensemble node in the test and the results of the tests."
    } ]
  }, {
    "name" : "TestConnectMvipDetails",
    "members" : [ {
      "name" : "pingBytes",
      "type" : "Hashtable",
      "documentation" : "Details of the ping tests with 56 Bytes and 1500 Bytes."
    }, {
      "name" : "mvip",
      "type" : "IpAddress",
      "documentation" : "The MVIP tested against."
    }, {
      "name" : "connected",
      "type" : "boolean",
      "documentation" : "Whether the test could connect to the MVIP."
    } ]
  }, {
    "name" : "TestConnectSvipDetails",
    "members" : [ {
      "name" : "pingBytes",
      "type" : "Hashtable",
      "documentation" : "Details of the ping tests with 56 Bytes and 1500 Bytes."
    }, {
      "name" : "svip",
      "type" : "IpAddress",
      "documentation" : "The SVIP tested against."
    }, {
      "name" : "connected",
      "type" : "boolean",
      "documentation" : "Whether the test could connect to the MVIP."
    } ]
  }, {
    "name" : "TestPingResult",
    "members" : [ {
      "name" : "result",
      "type" : "string",
      "documentation" : "Result of the ping test."
    }, {
      "name" : "duration",
      "type" : "string",
      "documentation" : "The total duration of the ping test."
    }, {
      "name" : "details",
      "type" : "Hashtable",
      "documentation" : "List of each IP the node was able to communicate with."
    } ]
  }, {
    "name" : "TimePoint",
    "alias" : "string",
    "restriction" : {
      "format" : "-?[1-9][0-9]*-[01][0-9]-[0-3][0-9]T[012][0-9]:[0-5][0-9]:[0-6][0-9]\\.[0-9]{6}Z"
    },
    "documentation" : [ "An absolute point in time on Earth, expressed in UTC.", "The format is ISO 8601:2004 combined date time in Zulu time format with microsecond precision.", "The seconds portion will only exceed 60 if the time point is during a leap second.", "<br/><br/>", "\"YYYY-MM-DDTHH:mm:ss.ssssssZ\"" ]
  }, {
    "name" : "Duration",
    "alias" : "string",
    "restriction" : {
      "format" : "-?[0-9]+:[0-5][0-9]:[0-5][0-9].[0-9]{6}"
    },
    "documentation" : [ "Time durations are in a custom format with microsecond precision.", "Fields are never omitted (even if they are 0).", "The seconds and minutes fields will never exceed 60, but the hours do not have a limit.", "For negative durations, a single '-' is used as a prefix to the output.", "<br/><br/>", "H:mm:ss.ssssss" ]
  }, {
    "name" : "VirtualNetworkID",
    "alias" : "integer"
  }, {
    "name" : "VirtualNetworkTag",
    "alias" : "integer"
  }, {
    "name" : "AddressBlock",
    "documentation" : "Unique Range of IP addresses to include in the virtual network.",
    "members" : [ {
      "name" : "start",
      "type" : "string",
      "documentation" : "Start of the IP address range."
    }, {
      "name" : "size",
      "type" : "integer",
      "documentation" : "Number of IP addresses to include in the block."
    } ]
  }, {
    "name" : "ListVirtualNetworksResult",
    "members" : [ {
      "name" : "virtualNetworks",
      "type" : [ "VirtualNetwork" ],
      "documentation" : "Object containing virtual network IP addresses."
    } ]
  }, {
    "name" : "VirtualNetwork",
    "members" : [ {
      "name" : "virtualNetworkID",
      "type" : "VirtualNetworkID",
      "documentation" : "SolidFire unique identifier for a virtual network."
    }, {
      "name" : "virtualNetworkTag",
      "type" : "VirtualNetworkTag",
      "documentation" : "VLAN Tag identifier."
    }, {
      "name" : "addressBlocks",
      "type" : [ "AddressBlock" ],
      "documentation" : [ "Range of address blocks currently assigned to the virtual network.", "<br/><b>available:</b> Binary string in \"1\"s and \"0\"s. 1 equals the IP is available and 0 equals the IP is not available. The string is read from right to left with the digit to the far right being the first IP address in the list of addressBlocks.", "<br/><b>size:</b> the size of this block of addresses.", "<br/><b>start:</b> first IP address in the block." ]
    }, {
      "name" : "name",
      "type" : "Name",
      "documentation" : [ "The name assigned to the virtual network." ]
    }, {
      "name" : "netmask",
      "type" : "string",
      "documentation" : [ "IP address of the netmask for the virtual network." ]
    }, {
      "name" : "svip",
      "type" : "IpAddress",
      "documentation" : [ "Storage IP address for the virtual network." ]
    }, {
      "name" : "gateway",
      "type" : {
        "name" : "IpAddress",
        "optional" : true
      },
      "since" : "9.0",
      "documentation" : [ "" ]
    }, {
      "name" : "namespace",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "since" : "9.0",
      "documentation" : [ "" ]
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : [ "List of Name/Value pairs in JSON object format." ]
    } ]
  }, {
    "name" : "AddVirtualNetworkResult",
    "members" : [ {
      "name" : "virtualNetworkID",
      "type" : "integer",
      "documentation" : "The virtual network ID of the new virtual network."
    } ]
  }, {
    "name" : "RemoveVirtualNetworkResult",
    "members" : [ ]
  }, {
    "name" : "VasaProviderID",
    "alias" : "UUID"
  }, {
    "name" : "VvolVolumeID",
    "alias" : "UUID"
  }, {
    "name" : "VvolBindingID",
    "alias" : "uint64"
  }, {
    "name" : "VvolHostID",
    "alias" : "UUID"
  }, {
    "name" : "VvolClusterID",
    "alias" : "UUID"
  }, {
    "name" : "VvolTaskID",
    "alias" : "UUID"
  }, {
    "name" : "VvolBitmap",
    "alias" : "string"
  }, {
    "name" : "uint64",
    "alias" : "long"
  }, {
    "name" : "uint32",
    "alias" : "long"
  }, {
    "name" : "uint16",
    "alias" : "integer"
  }, {
    "name" : "VvolOperationType",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "unknown"
      }, {
        "value" : "prepare"
      }, {
        "value" : "snapshot"
      }, {
        "value" : "rollback"
      }, {
        "value" : "clone"
      }, {
        "value" : "fastClone"
      }, {
        "value" : "coppydiffs"
      } ]
    }
  }, {
    "name" : "VirtualVolumeInfo",
    "members" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID"
    }, {
      "name" : "parentVirtualVolumeID",
      "type" : "VvolVolumeID"
    }, {
      "name" : "storageContainerID",
      "type" : "StorageContainerID"
    }, {
      "name" : "volumeID",
      "type" : "VolumeID"
    }, {
      "name" : "snapshotID",
      "type" : "SnapshotID"
    }, {
      "name" : "virtualVolumeType",
      "type" : "string"
    }, {
      "name" : "status",
      "type" : "VvolVolumeStatus"
    }, {
      "name" : "bindings",
      "type" : [ "VvolBindingID" ]
    }, {
      "name" : "children",
      "type" : [ "VvolVolumeID" ]
    }, {
      "name" : "metadata",
      "type" : "Attributes"
    } ]
  }, {
    "name" : "VvolVolumeStatus",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "Updating",
        "documentation" : "Virtual Volume is being processed in response to a clone or snapshot."
      }, {
        "value" : "Waiting",
        "documentation" : "Virtual Volume is waiting for snapshotVirtualVolume to complete the snapshot."
      }, {
        "value" : "Ready",
        "documentation" : "Virtual Volume is ready for general purpose use."
      } ]
    }
  }, {
    "name" : "VvolTaskStatus",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "error",
        "documentation" : "Virtual Volume Task encountered an error."
      }, {
        "value" : "queued",
        "documentation" : "Virtual Volume Task is waiting to start."
      }, {
        "value" : "running",
        "documentation" : "Virtual Volume Task is still running."
      }, {
        "value" : "success",
        "documentation" : "Virtual Volume Task completed successfully."
      } ]
    }
  }, {
    "name" : "VvolBindContext",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "normal",
        "documentation" : "Normal Virtual Volume bind."
      }, {
        "value" : "start",
        "documentation" : "Virtual Volume bind is starting."
      } ]
    }
  }, {
    "name" : "VvolUnbindContext",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "normal",
        "documentation" : "Normal Virtual Volume unbind."
      }, {
        "value" : "start",
        "documentation" : "Virtual Volume unbind is starting."
      }, {
        "value" : "end",
        "documentation" : "Virtual Volume unbind is ending."
      } ]
    }
  }, {
    "name" : "VirtualVolumeBinding",
    "members" : [ {
      "type" : {
        "name" : "UUID"
      },
      "documentation" : "The unique ID of the protocol endpoint.",
      "name" : "protocolEndpointID"
    }, {
      "type" : {
        "name" : "string"
      },
      "documentation" : "The scsiNAADeviceID of the protocol endpoint. For more information, see protocolEndpoint.",
      "name" : "protocolEndpointInBandID"
    }, {
      "type" : {
        "name" : "string"
      },
      "documentation" : "The type of protocol endpoint. SCSI is the only value returned for the protocol endpoint type.",
      "name" : "protocolEndpointType"
    }, {
      "type" : {
        "name" : "integer"
      },
      "documentation" : "The unique ID of the virtual volume binding object.",
      "name" : "virtualVolumeBindingID"
    }, {
      "type" : {
        "name" : "UUID"
      },
      "documentation" : "The unique ID of the virtual volume host.",
      "name" : "virtualVolumeHostID"
    }, {
      "type" : {
        "name" : "UUID"
      },
      "documentation" : "The unique ID of the virtual volume.",
      "name" : "virtualVolumeID"
    }, {
      "type" : {
        "name" : "string"
      },
      "documentation" : "The secondary ID of the virtual volume.",
      "name" : "virtualVolumeSecondaryID"
    }, {
      "type" : {
        "name" : "VirtualVolumeInfo"
      },
      "documentation" : "An object describing the bound volume or snapshot.",
      "name" : "virtualVolume"
    }, {
      "type" : {
        "name" : "UUID"
      },
      "documentation" : "An object describing the protocol endpoint to which the virtual volume is bound.",
      "name" : "protocolEndpoint"
    }, {
      "type" : {
        "name" : "VirtualVolumeHost"
      },
      "documentation" : "An object describing the host to which this binding corresponds.",
      "name" : "virtualVolumeHost"
    } ]
  }, {
    "name" : "VirtualVolumeHost",
    "members" : [ {
      "name" : "virtualVolumeHostID",
      "type" : "VvolHostID"
    }, {
      "name" : "clusterID",
      "type" : "VvolClusterID"
    }, {
      "name" : "visibleProtocolEndpointIDs",
      "type" : [ "UUID" ]
    }, {
      "name" : "bindings",
      "type" : [ "VvolBindingID" ]
    }, {
      "name" : "initiatorNames",
      "type" : [ "string" ]
    }, {
      "name" : "hostAddress",
      "type" : "string"
    } ]
  }, {
    "name" : "VirtualVolumeTask",
    "members" : [ {
      "name" : "virtualVolumeTaskID",
      "type" : "VvolTaskID"
    }, {
      "name" : "virtualvolumeID",
      "type" : "VvolVolumeID"
    }, {
      "name" : "cloneVirtualVolumeID",
      "type" : "VvolVolumeID"
    }, {
      "name" : "status",
      "type" : "VvolTaskStatus"
    }, {
      "name" : "operation",
      "type" : "VvolOperationType"
    }, {
      "name" : "virtualVolumeHostID",
      "type" : "VvolHostID"
    }, {
      "name" : "parentMetadata",
      "type" : "Attributes"
    }, {
      "name" : "parentTotalSize",
      "type" : "uint64"
    }, {
      "name" : "parentUsedSize",
      "type" : "uint64"
    }, {
      "name" : "cancelled",
      "type" : "boolean"
    } ]
  }, {
    "name" : "VasaProviderInfo",
    "members" : [ {
      "name" : "keystore",
      "type" : "string"
    }, {
      "name" : "controlPort",
      "type" : "uint16"
    }, {
      "name" : "vasaProviderID",
      "type" : "VasaProviderID"
    }, {
      "name" : "options",
      "type" : "Attributes"
    } ]
  }, {
    "name" : "VirtualVolumeNullResult",
    "members" : [ ]
  }, {
    "name" : "VasaProviderInfoResult",
    "members" : [ {
      "name" : "vasaProviderInfo",
      "type" : "VasaProviderInfo"
    } ]
  }, {
    "name" : "VirtualVolumeSyncResult",
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "VolumeID for the newly created volume."
    }, {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "virtualVolumeID for the newly created volume."
    } ]
  }, {
    "name" : "VirtualVolumeAsyncResult",
    "members" : [ {
      "name" : "virtualVolumeTaskID",
      "type" : "VvolTaskID",
      "documentation" : "The ID of the clone task."
    }, {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The volume ID of the newly-created clone."
    }, {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "virtualVolumeID for the newly created clone."
    } ]
  }, {
    "name" : "VirtualVolumeBitmapResult",
    "members" : [ {
      "name" : "bitmap",
      "type" : "VvolBitmap",
      "documentation" : "The b64 bitmap."
    }, {
      "name" : "segmentLength",
      "type" : "uint64",
      "documentation" : "Byte length, adjusted to end on a chunk boundary."
    } ]
  }, {
    "name" : "ListVirtualVolumesResult",
    "members" : [ {
      "name" : "virtualVolumes",
      "type" : [ "VirtualVolumeInfo" ]
    }, {
      "name" : "nextVirtualVolumeID",
      "type" : "VvolVolumeID"
    } ]
  }, {
    "name" : "QueryVirtualVolumeMetadataResult",
    "members" : [ {
      "name" : "matchingVirtualVolumeIDs",
      "type" : [ "VvolVolumeID" ]
    } ]
  }, {
    "name" : "PrepareVirtualSnapshotResult",
    "members" : [ {
      "name" : "virtualVolumeTaskID",
      "type" : "VvolTaskID",
      "documentation" : "The ID of the clone task."
    }, {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The volume ID of the newly-created clone."
    }, {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : "snapshotID for the prepared VVol snapshot."
    }, {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "virtualVolumeID for the newly created clone."
    } ]
  }, {
    "name" : "SnapshotVirtualVolumeResult",
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The volume ID of the newly-created clone."
    }, {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : "snapshotID for the prepared VVol snapshot."
    }, {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "virtualVolumeID for the newly created clone."
    } ]
  }, {
    "name" : "VirtualVolumeUnsharedChunkResult",
    "members" : [ {
      "name" : "chunks",
      "type" : "uint64",
      "documentation" : "Number of allocated/unshared chunks."
    }, {
      "name" : "scannedChunks",
      "type" : "uint64",
      "documentation" : "Number of chunks scanned."
    }, {
      "name" : "chunkSize",
      "type" : "uint64",
      "documentation" : "Size of each chunk."
    } ]
  }, {
    "name" : "ListVirtualVolumeHostsResult",
    "members" : [ {
      "name" : "hosts",
      "type" : [ "VirtualVolumeHost" ],
      "documentation" : "List of known ESX hosts."
    } ]
  }, {
    "name" : "VirtualVolumeHostResult",
    "members" : [ {
      "name" : "host",
      "type" : "VirtualVolumeHost"
    } ]
  }, {
    "name" : "ListVirtualVolumeTasksResult",
    "members" : [ {
      "name" : "tasks",
      "type" : [ "VirtualVolumeTask" ],
      "documentation" : "List of VVol Async Tasks."
    } ]
  }, {
    "name" : "VirtualVolumeTaskResult",
    "members" : [ {
      "name" : "task",
      "type" : "VirtualVolumeTask",
      "documentation" : "Returns the state of a VVol Async Task."
    } ]
  }, {
    "name" : "VirtualVolumeBindResult",
    "members" : [ {
      "name" : "binding",
      "type" : "VirtualVolumeBinding",
      "documentation" : "Describes the VVol <-> Host binding."
    } ]
  }, {
    "name" : "ListVirtualVolumeBindingsResult",
    "members" : [ {
      "name" : "bindings",
      "type" : [ "VirtualVolumeBinding" ],
      "documentation" : "Describes the VVol <-> Host binding."
    } ]
  }, {
    "name" : "UnbindResult",
    "members" : [ {
      "name" : "fault",
      "type" : "string"
    } ]
  }, {
    "name" : "VirtualVolumeUnbindResult",
    "members" : [ {
      "name" : "unbindResults",
      "type" : [ "UnbindResult" ]
    } ]
  }, {
    "name" : "UnbindArguments",
    "members" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID"
    }, {
      "name" : "protocolEndpointType",
      "type" : "ProtocolEndpointType"
    }, {
      "name" : "protocolEndpointInBandID",
      "type" : "string"
    }, {
      "name" : "virtualVolumeSecondaryID",
      "type" : "string"
    } ]
  }, {
    "name" : "GetVirtualVolumeCountResult",
    "members" : [ {
      "type" : {
        "name" : "integer"
      },
      "documentation" : "The number of virtual volumes currently in the system.",
      "name" : "count"
    } ]
  }, {
    "name" : "BulkVolumeJob",
    "members" : [ {
      "name" : "bulkVolumeID",
      "type" : "integer",
      "documentation" : "The internal bulk volume job ID."
    }, {
      "name" : "createTime",
      "type" : "TimePoint",
      "documentation" : "Timestamp created for the bulk volume job."
    }, {
      "name" : "elapsedTime",
      "type" : "integer",
      "since" : "8.0",
      "documentation" : "The number of seconds since the job began."
    }, {
      "name" : "format",
      "type" : "string",
      "documentation" : "Format is either \"compressed\" or \"native\"."
    }, {
      "name" : "key",
      "type" : "string",
      "documentation" : "The unique key created by the bulk volume session."
    }, {
      "name" : "percentComplete",
      "type" : "integer",
      "documentation" : "The completed percentage reported by the operation."
    }, {
      "name" : "remainingTime",
      "type" : "integer",
      "documentation" : "The estimated time remaining in seconds."
    }, {
      "name" : "srcVolumeID",
      "type" : "integer",
      "documentation" : "The source volume ID."
    }, {
      "name" : "status",
      "type" : "string",
      "documentation" : [ "Can be one of the following:", "<br/><b>preparing</b>", "<br/><b>active</b>", "<br/><b>done</b>", "<br/><b>failed</b>" ]
    }, {
      "name" : "script",
      "type" : "string",
      "documentation" : "The name of the script if one is provided."
    }, {
      "name" : "snapshotID",
      "type" : "integer",
      "documentation" : "ID of the snapshot if a snapshot is in the source of the bulk volume job."
    }, {
      "name" : "type",
      "type" : "string",
      "documentation" : [ "Can be one of the following:", "<br/><b>read</b>", "<br/><b>write</b>" ]
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "JSON attributes on the bulk volume job."
    } ]
  }, {
    "name" : "MetadataHosts",
    "documentation" : "The volume services on which the volume metadata resides.",
    "members" : [ {
      "name" : "deadSecondaries",
      "type" : [ "NodeID" ],
      "documentation" : "Secondary metadata (slice) services that are in a dead state."
    }, {
      "name" : "liveSecondaries",
      "type" : [ "NodeID" ],
      "documentation" : "Secondary metadata (slice) services that are currently in a \"live\" state."
    }, {
      "name" : "primary",
      "type" : "NodeID",
      "documentation" : "The primary metadata (slice) services hosting the volume."
    } ]
  }, {
    "name" : "ISCSISession",
    "members" : [ {
      "name" : "accountID",
      "type" : "AccountID"
    }, {
      "name" : "accountName",
      "type" : "Name"
    }, {
      "name" : "driveID",
      "type" : "DriveID"
    }, {
      "name" : "initiatorIP",
      "type" : "IpAddress"
    }, {
      "name" : "initiatorName",
      "type" : "Iqn"
    }, {
      "name" : "nodeID",
      "type" : "NodeID"
    }, {
      "name" : "serviceID",
      "type" : "ServiceID"
    }, {
      "name" : "sessionID",
      "type" : "SessionID"
    }, {
      "name" : "targetName",
      "type" : "Iqn"
    }, {
      "name" : "targetIP",
      "type" : "IpAddress"
    }, {
      "name" : "virtualNetworkID",
      "type" : "string"
    }, {
      "name" : "volumeID",
      "type" : "VolumeID"
    } ]
  }, {
    "name" : "Volume",
    "documentation" : [ "Volumes Info is an object containing information about a volume.", "The return objects only include \"configured\" information about the volume and not runtime or usage information.", "Information about paired volumes will also be returned." ],
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "Unique VolumeID for the volume."
    }, {
      "name" : "name",
      "type" : "Name",
      "documentation" : "Name of the volume as provided at creation time."
    }, {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "Unique AccountID for the account."
    }, {
      "name" : "createTime",
      "type" : "TimePoint",
      "documentation" : "UTC formatted time the volume was created."
    }, {
      "name" : "status",
      "type" : "VolumeStatus",
      "documentation" : [ "Current status of the volume", "init: A volume that is being initialized and is not ready for connections.", "active: An active volume ready for connections." ]
    }, {
      "name" : "access",
      "type" : "VolumeAccess",
      "documentation" : [ "Access allowed for the volume", "<br/><b>readOnly</b>: Only read operations are allowed.", "<br/><b>readWrite</b>: Reads and writes are allowed.", "<br/><b>locked</b>: No reads or writes are allowed.", "<br/><b>replicationTarget</b>: Designated as a target volume in a replicated volume pair." ]
    }, {
      "name" : "enable512e",
      "type" : "boolean",
      "documentation" : "If \"true\", the volume provides 512 byte sector emulation."
    }, {
      "name" : "iqn",
      "type" : "Iqn",
      "documentation" : "Volume iSCSI Qualified Name."
    }, {
      "name" : "scsiEUIDeviceID",
      "type" : "EUIDeviceID",
      "documentation" : "Globally unique SCSI device identifier for the volume in EUI-64 based 16-byte format."
    }, {
      "name" : "scsiNAADeviceID",
      "type" : "NAADeviceID",
      "documentation" : "Globally unique SCSI device identifier for the volume in NAA IEEE Registered Extended format."
    }, {
      "name" : "qos",
      "type" : "VolumeQOS",
      "documentation" : "Quality of service settings for this volume."
    }, {
      "name" : "volumeAccessGroups",
      "type" : [ "VolumeAccessGroupID" ],
      "documentation" : "List of volume access groups to which a volume belongs."
    }, {
      "name" : "volumePairs",
      "type" : [ "VolumePair" ],
      "documentation" : [ "Information about a paired volume.", "Available only if a volume is paired.", "@see VolumePairs for return values." ]
    }, {
      "name" : "deleteTime",
      "type" : {
        "name" : "TimePoint",
        "optional" : true
      },
      "documentation" : [ "The time this volume was deleted.", "If this has no value, the volume has not yet been deleted." ]
    }, {
      "name" : "purgeTime",
      "type" : {
        "name" : "TimePoint",
        "optional" : true
      },
      "documentation" : [ "The time this volume will be purged from the system.", "If this has no value, the volume has not yet been deleted (and is not scheduled for purging)." ]
    }, {
      "name" : "sliceCount",
      "type" : "size_t",
      "documentation" : [ "The number of slices backing this volume.", "In the current software, this value will always be 1." ]
    }, {
      "name" : "totalSize",
      "type" : "uint64",
      "documentation" : [ "Total size of this volume in bytes." ]
    }, {
      "name" : "blockSize",
      "type" : "integer",
      "since" : "8.0",
      "documentation" : [ "Size of the blocks on the volume." ]
    }, {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : [ "Virtual volume ID this volume backs." ]
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "RemoteReplication",
    "documentation" : "Details on the volume replication.",
    "members" : [ {
      "name" : "mode",
      "type" : "string",
      "documentation" : [ "Volume replication mode.<br/>", "Possible values:<br/>", "<b>Async</b>: Writes are acknowledged when they complete locally. The cluster does not wait for writes to be replicated to the target cluster.<br/>", "<b>Sync</b>: Source acknowledges write when the data is stored locally and on the remote cluster.<br/>", "<b>SnapshotsOnly</b>: Only snapshots created on the source cluster will be replicated. Active writes from the source volume will not be replicated.<br/>" ]
    }, {
      "name" : "pauseLimit",
      "type" : "integer",
      "documentation" : "The number of occurring write ops before auto-pausing, on a per volume pair level."
    }, {
      "name" : "remoteServiceID",
      "type" : "integer",
      "documentation" : "The remote slice service ID."
    }, {
      "name" : "resumeDetails",
      "type" : "string",
      "documentation" : "Reserved for future use."
    }, {
      "name" : "snapshotReplication",
      "type" : "SnapshotReplication",
      "documentation" : "The details of snapshot replication."
    }, {
      "name" : "state",
      "type" : "string",
      "documentation" : "The state of the volume replication."
    }, {
      "name" : "stateDetails",
      "type" : "string",
      "documentation" : "Reserved for future use."
    } ]
  }, {
    "name" : "SnapshotReplication",
    "members" : [ {
      "name" : "state",
      "type" : "string",
      "documentation" : "The state of the snapshot replication."
    }, {
      "name" : "stateDetails",
      "type" : "string",
      "documentation" : "Reserved for future use."
    } ]
  }, {
    "name" : "VolumeAccess",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "readOnly",
        "documentation" : "Only read operations are allowed."
      }, {
        "value" : "readWrite",
        "documentation" : "Reads and writes are allowed."
      }, {
        "value" : "locked",
        "documentation" : "No reads or writes are allowed."
      }, {
        "value" : "replicationTarget",
        "documentation" : "Designated as a target volume in a replicated volume pair."
      } ]
    }
  }, {
    "name" : "VolumeStats",
    "documentation" : "Contains statistical data for an individual volume.",
    "members" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "AccountID of the volume owner."
    }, {
      "name" : "actualIOPS",
      "type" : "uint32",
      "documentation" : "Current actual IOPS to the volume in the last 500 milliseconds."
    }, {
      "name" : "asyncDelay",
      "type" : {
        "name" : "TimePoint",
        "optional" : true
      },
      "documentation" : [ "The length of time since the volume was last synced with the remote cluster.", "If the volume is not paired, this is null.", "<br/><br/>", "<br/><b>Note</b>: A target volume in an active replication state always has an async delay of 0 (zero).", "<br/>Target volumes are system-aware during replication and assume async delay is accurate at all times." ]
    }, {
      "name" : "averageIOPSize",
      "type" : "uint32",
      "documentation" : "Average size in bytes of recent I/O to the volume in the last 500 milliseconds."
    }, {
      "name" : "burstIOPSCredit",
      "type" : "uint32",
      "documentation" : [ "The total number of IOP credits available to the user.", "When users are not using up to the max IOPS, credits are accrued." ]
    }, {
      "name" : "clientQueueDepth",
      "type" : "uint64",
      "documentation" : "The number of outstanding read and write operations to the cluster."
    }, {
      "name" : "desiredMetadataHosts",
      "type" : "MetadataHosts",
      "documentation" : [ "The volume services being migrated to if the volume metadata is getting migrated between volume services.", "A \"null\" value means the volume is not migrating." ]
    }, {
      "name" : "latencyUSec",
      "type" : "uint32",
      "documentation" : [ "The observed latency time, in microseconds, to complete operations to a volume.<br/>", "A \"0\" (zero) value means there is no I/O to the volume." ]
    }, {
      "name" : "metadataHosts",
      "type" : "MetadataHosts",
      "documentation" : "The volume services on which the volume metadata resides."
    }, {
      "name" : "nonZeroBlocks",
      "type" : "uint64",
      "documentation" : "The number of 4KiB blocks with data after the last garbage collection operation has completed."
    }, {
      "name" : "readBytes",
      "type" : "uint64",
      "documentation" : "Total bytes read by clients."
    }, {
      "name" : "readLatencyUSec",
      "type" : "uint32",
      "documentation" : "The average time, in microseconds, to complete read operations."
    }, {
      "name" : "readOps",
      "type" : "uint64",
      "documentation" : "Total read operations."
    }, {
      "name" : "throttle",
      "type" : "float",
      "documentation" : [ "A floating value between 0 and 1 that represents how much the system is throttling clients", "below their max IOPS because of re-replication of data, transient errors and snapshots taken." ]
    }, {
      "name" : "timestamp",
      "type" : "TimePoint",
      "documentation" : "The current time in UTC."
    }, {
      "name" : "totalLatencyUSec",
      "type" : "uint32",
      "documentation" : "The average time, in microseconds, to complete read and write operations to a volume."
    }, {
      "name" : "unalignedReads",
      "type" : "uint64",
      "documentation" : [ "For 512e volumes, the number of read operations that were not on a 4k sector boundary.", "High numbers of unaligned reads may indicate improper partition alignment." ]
    }, {
      "name" : "unalignedWrites",
      "type" : "uint64",
      "documentation" : [ "For 512e volumes, the number of write operations that were not on a 4k sector boundary.", "High numbers of unaligned writes may indicate improper partition alignment." ]
    }, {
      "name" : "volumeAccessGroups",
      "type" : [ "VolumeAccessGroupID" ],
      "documentation" : "List of volume access group(s) to which a volume belongs."
    }, {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "Volume ID of the volume."
    }, {
      "name" : "volumeSize",
      "type" : "uint64",
      "documentation" : "Total provisioned capacity in bytes."
    }, {
      "name" : "volumeUtilization",
      "type" : "float",
      "documentation" : [ "A floating value that describes how much the client is using the volume.", "<br/><br/>", "Values:<br/>", " 0 = Client is not using the volume<br/>", "1 = Client is using their max<br/>", ">1 = Client is using their burst" ]
    }, {
      "name" : "writeBytes",
      "type" : "uint64",
      "documentation" : "Total bytes written by clients."
    }, {
      "name" : "writeLatencyUSec",
      "type" : "uint32",
      "documentation" : "The average time, in microseconds, to complete write operations."
    }, {
      "name" : "writeOps",
      "type" : "uint64",
      "documentation" : "Total write operations occurring on the volume."
    }, {
      "name" : "zeroBlocks",
      "type" : "uint64",
      "documentation" : "Total number of 4KiB blocks without data after the last round of garbage collection operation has completed."
    } ]
  }, {
    "name" : "VolumeStatus",
    "alias" : "string",
    "restriction" : {
      "enum" : [ {
        "value" : "init",
        "documentation" : "The volume has been created, but is not yet ready for access."
      }, {
        "value" : "active",
        "documentation" : "The volume is ready for access."
      }, {
        "value" : "deleted",
        "documentation" : "The volume has been deleted, but not purged."
      } ]
    }
  }, {
    "name" : "VolumePair",
    "documentation" : [ "The Volume Pair Info is an object containing information about a volume that is paired on a remote cluster.", "If the volume is not paired, this object is null." ],
    "members" : [ {
      "name" : "clusterPairID",
      "type" : "ClusterPairID",
      "documentation" : "The remote cluster a volume is paired with."
    }, {
      "name" : "remoteVolumeID",
      "type" : "VolumeID",
      "documentation" : "The VolumeID on the remote cluster a volume is paired with."
    }, {
      "name" : "remoteSliceID",
      "type" : "SliceID",
      "documentation" : "The SliceID on the remote cluster a volume is paired with."
    }, {
      "name" : "remoteVolumeName",
      "type" : "string",
      "documentation" : "The last-observed name of the volume on the remote cluster a volume is paired with."
    }, {
      "name" : "volumePairUUID",
      "type" : "UUID",
      "documentation" : "A UUID in canonical form."
    }, {
      "name" : "remoteReplication",
      "type" : "RemoteReplication",
      "documentation" : "Details about the replication configuration for this volume pair."
    } ]
  }, {
    "name" : "CloneVolumeResult",
    "members" : [ {
      "name" : "cloneID",
      "type" : "CloneID",
      "documentation" : "The ID of the newly-created clone."
    }, {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The volume ID of the newly-created clone."
    }, {
      "name" : "asyncHandle",
      "type" : "AsyncResultID",
      "documentation" : "Handle value used to track the progress of the clone."
    } ]
  }, {
    "name" : "CopyVolumeResult",
    "members" : [ {
      "name" : "cloneID",
      "type" : "CloneID"
    }, {
      "name" : "asyncHandle",
      "type" : "AsyncResultID",
      "documentation" : "Handle value used to track the progress of the volume copy."
    } ]
  }, {
    "name" : "CancelCloneResult",
    "members" : [ ]
  }, {
    "name" : "CreateVolumeResult",
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "VolumeID for the newly created volume."
    }, {
      "name" : "curve",
      "type" : {
        "name" : "Dictionary",
        "dictionaryType" : "integer"
      },
      "documentation" : [ "The curve is a set of key-value pairs.", "The keys are I/O sizes in bytes.", "The values represent the cost performing an IOP at a specific I/O size.", "The curve is calculated relative to a 4096 byte operation set at 100 IOPS." ]
    } ]
  }, {
    "name" : "DeleteVolumeResult",
    "members" : [ ]
  }, {
    "name" : "GetDefaultQoSResult",
    "members" : [ {
      "name" : "qos",
      "type" : "VolumeQOS",
      "documentation" : "Default QoS values."
    } ]
  }, {
    "name" : "GetVolumeEfficiencyResult",
    "members" : [ {
      "name" : "compression",
      "type" : "float",
      "documentation" : [ "The amount of space being saved by compressing data on a single volume.", "Stated as a ratio where \"1\" means data has been stored without being compressed." ]
    }, {
      "name" : "deduplication",
      "type" : "float",
      "documentation" : [ "The amount of space being saved on a single volume by not duplicating data.", "Stated as a ratio." ]
    }, {
      "name" : "missingVolumes",
      "type" : [ "VolumeID" ],
      "since" : "8.0",
      "documentation" : [ "The volumes that could not be queried for efficiency data.", "Missing volumes can be caused by GC being less than hour old, temporary network loss or restarted services since the GC cycle." ]
    }, {
      "name" : "thinProvisioning",
      "type" : "float",
      "documentation" : [ "The ratio of space used to the amount of space allocated for storing data.", "Stated as a ratio." ]
    }, {
      "name" : "timestamp",
      "type" : "TimePoint",
      "documentation" : "The last time efficiency data was collected after Garbage Collection (GC)."
    } ]
  }, {
    "name" : "GetVolumeStatsResult",
    "members" : [ {
      "name" : "volumeStats",
      "type" : "VolumeStats",
      "documentation" : "Volume activity information."
    } ]
  }, {
    "name" : "ListActiveVolumesResult",
    "members" : [ {
      "name" : "volumes",
      "type" : [ "Volume" ],
      "documentation" : "List of active volumes."
    } ]
  }, {
    "name" : "ListBulkVolumeJobsResult",
    "members" : [ {
      "name" : "bulkVolumeJobs",
      "type" : [ "BulkVolumeJob" ],
      "documentation" : "An array of information for each bulk volume job."
    } ]
  }, {
    "name" : "ListISCSISessionsResult",
    "members" : [ {
      "name" : "sessions",
      "type" : [ "ISCSISession" ]
    } ]
  }, {
    "name" : "ListDeletedVolumesResult",
    "members" : [ {
      "name" : "volumes",
      "type" : [ "Volume" ],
      "documentation" : "List of deleted volumes."
    } ]
  }, {
    "name" : "ListVolumesResult",
    "since" : "8.0",
    "members" : [ {
      "name" : "volumes",
      "type" : [ "Volume" ],
      "documentation" : "List of volumes."
    } ]
  }, {
    "name" : "ListVolumesForAccountResult",
    "members" : [ {
      "name" : "volumes",
      "type" : [ "Volume" ],
      "documentation" : "List of volumes."
    } ]
  }, {
    "name" : "ListVolumeStatsByAccountResult",
    "members" : [ {
      "name" : "volumeStats",
      "type" : [ "VolumeStats" ],
      "documentation" : [ "List of account activity information.", "<br/><b>Note</b>: The volumeID member is 0 for each entry, as the values represent the summation of all volumes owned by the account." ]
    } ]
  }, {
    "name" : "ListVolumeStatsByVolumeResult",
    "members" : [ {
      "name" : "volumeStats",
      "type" : [ "VolumeStats" ],
      "documentation" : [ "List of account activity information." ]
    } ]
  }, {
    "name" : "ListVolumeStatsByVolumeAccessGroupResult",
    "members" : [ {
      "name" : "volumeStats",
      "type" : [ "VolumeStats" ],
      "documentation" : [ "List of account activity information.", "<br/><b>Note</b>: The volumeID member is 0 for each entry, as the values represent the summation of all volumes owned by the account." ]
    } ]
  }, {
    "name" : "ModifyVolumeResult",
    "members" : [ {
      "name" : "volume",
      "type" : "Volume",
      "documentation" : "Object containing information about the newly modified volume."
    } ]
  }, {
    "name" : "PurgeDeletedVolumeResult",
    "members" : [ ]
  }, {
    "name" : "RestoreDeletedVolumeResult",
    "members" : [ ]
  }, {
    "name" : "CloneMultipleVolumeParams",
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "Required parameter for \"volumes\" array: volumeID."
    }, {
      "name" : "access",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Access settings for the new volume.", "<br/><b>readOnly</b>: Only read operations are allowed.", "<br/><b>readWrite</b>: Reads and writes are allowed.", "<br/><b>locked</b>: No reads or writes are allowed.", "<br/><b>replicationTarget</b>: Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked.", "<br/><br/>", "If unspecified, the access settings of the clone will be the same as the source." ]
    }, {
      "name" : "name",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "New name for the clone."
    }, {
      "name" : "newAccountID",
      "type" : {
        "name" : "AccountID",
        "optional" : true
      },
      "documentation" : "Account ID for the new volume."
    }, {
      "name" : "newSize",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "New size Total size of the volume, in bytes. Size is rounded up to the nearest 1MB size."
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ]
  }, {
    "name" : "GroupCloneVolumeMember",
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The VolumeID of the cloned volume."
    }, {
      "name" : "srcVolumeID",
      "type" : "VolumeID",
      "documentation" : "The VolumeID of the source volume."
    } ],
    "documentation" : "Represents the relationship between the source Volume and cloned Volume IDs."
  }, {
    "name" : "CloneMultipleVolumesResult",
    "members" : [ {
      "name" : "asyncHandle",
      "type" : "AsyncResultID",
      "documentation" : "A value returned from an asynchronous method call."
    }, {
      "name" : "groupCloneID",
      "type" : "GroupCloneID",
      "documentation" : "Unique ID of the new group clone."
    }, {
      "name" : "members",
      "type" : [ "GroupCloneVolumeMember" ],
      "documentation" : "List of volumeIDs for the source and destination volume pairs."
    } ]
  }, {
    "name" : "StartBulkVolumeReadResult",
    "members" : [ {
      "name" : "asyncHandle",
      "type" : "AsyncResultID",
      "documentation" : "ID of the async process to be checked for completion."
    }, {
      "name" : "key",
      "type" : "string",
      "documentation" : "Opaque key uniquely identifying the session."
    }, {
      "name" : "url",
      "type" : "string",
      "documentation" : "URL to access the node's web server"
    } ]
  }, {
    "name" : "StartBulkVolumeWriteResult",
    "members" : [ {
      "name" : "asyncHandle",
      "type" : "AsyncResultID",
      "documentation" : "ID of the async process to be checked for completion."
    }, {
      "name" : "key",
      "type" : "string",
      "documentation" : "Opaque key uniquely identifying the session."
    }, {
      "name" : "url",
      "type" : "string",
      "documentation" : "URL to access the node's web server"
    } ]
  }, {
    "name" : "UpdateBulkVolumeStatusResult",
    "members" : [ {
      "name" : "status",
      "type" : "string",
      "documentation" : [ "Status of the session requested. Returned status:<br/>", "<br/><b>preparing</b>", "<br/><b>active</b>", "<br/><b>done</b>", "<br/><b>failed</b>" ]
    }, {
      "name" : "url",
      "type" : "string",
      "documentation" : "The URL to access the node's web server provided only if the session is still active."
    }, {
      "name" : "attributes",
      "type" : "Attributes",
      "documentation" : "Returns attributes that were specified in the BulkVolumeStatusUpdate method. Values are returned if they have changed or not."
    } ]
  }, {
    "name" : "VolumeAccessGroup",
    "documentation" : [ "A volume access group is a useful way of grouping volumes and initiators together for ease of management.", "<br/><br/>", "Volume Access Group Limits:", "<br/><br/>", "- A volume access group can contain up to sixty-four initiator IQNs.", "- An initiator can only belong to only one volume access group.", "- A volume access group can contain up to two thousand volumes.", "- Each volume access group can belong to a maximum of four other volume access groups." ],
    "members" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "Unique ID for this volume access group."
    }, {
      "name" : "name",
      "type" : "Name",
      "documentation" : "Name of the volume access group."
    }, {
      "name" : "initiators",
      "type" : [ "Iqn" ],
      "documentation" : "List of unique initiator names belonging to the volume access group."
    }, {
      "name" : "volumes",
      "type" : [ "VolumeID" ],
      "documentation" : "List of volumes belonging to the volume access group."
    } ]
  }, {
    "name" : "CreateVolumeAccessGroupResult",
    "members" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "The ID for the newly-created volume access group."
    } ]
  }, {
    "name" : "DeleteVolumeAccessGroupResult",
    "members" : [ ]
  }, {
    "name" : "ListVolumeAccessGroupsResult",
    "members" : [ {
      "name" : "volumeAccessGroups",
      "type" : [ "VolumeAccessGroup" ],
      "documentation" : "List of volume access groups."
    } ]
  }, {
    "name" : "ModifyVolumeAccessGroupResult",
    "members" : [ ]
  }, {
    "name" : "GetEfficiencyResult",
    "members" : [ {
      "name" : "compression",
      "type" : {
        "name" : "float",
        "optional" : true
      },
      "documentation" : "The amount of space being saved by compressing data on a single volume. Stated as a ratio where \"1\" means data has been stored without being compressed."
    }, {
      "name" : "deduplication",
      "type" : {
        "name" : "float",
        "optional" : true
      },
      "documentation" : "The amount of space being saved on a single volume by not duplicating data. Stated as a ratio."
    }, {
      "name" : "thinProvisioning",
      "type" : {
        "name" : "float",
        "optional" : true
      },
      "documentation" : "The ratio of space used to the amount of space allocated for storing data. Stated as a ratio."
    }, {
      "name" : "timestamp",
      "type" : "TimePoint",
      "documentation" : "The last time efficiency data was collected after Garbage Collection (GC). ISO 8601 data string."
    }, {
      "name" : "missingVolumes",
      "type" : [ "integer" ],
      "documentation" : "The volumes that could not be queried for efficiency data. Missing volumes can be caused by GC being less than hour old, temporary network loss or restarted services since the GC cycle."
    } ]
  }, {
    "name" : "GetVolumeAccessGroupLunAssignmentsResult",
    "members" : [ {
      "name" : "volumeAccessGroupLunAssignments",
      "type" : "VolumeAccessGroupLunAssignments",
      "documentation" : "List of all physical Fibre Channel ports, or a port for a single node."
    } ]
  }, {
    "name" : "ModifyVolumeAccessGroupLunAssignmentsResult",
    "members" : [ ]
  }, {
    "name" : "VolumeAccessGroupLunAssignments",
    "members" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "Unique volume access group ID for which the LUN assignments will be modified."
    }, {
      "name" : "lunAssignments",
      "type" : [ "LunAssignment" ],
      "documentation" : "The volume IDs with assigned LUN values."
    }, {
      "name" : "deletedLunAssignments",
      "type" : [ "LunAssignment" ],
      "documentation" : "The volume IDs with deleted LUN values."
    } ],
    "documentation" : "VolumeAccessGroup ID and Lun to be assigned to all volumes within it."
  }, {
    "name" : "LunAssignment",
    "members" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The volume ID assigned to the Lun."
    }, {
      "name" : "lun",
      "type" : "Lun",
      "documentation" : "Correct LUN values are 0 - 16383. An exception will be seen if an incorrect LUN value is passed."
    } ],
    "documentation" : "VolumeID and Lun assignment."
  }, {
    "name" : "DatabaseData",
    "alias" : "hashtable"
  }, {
    "name" : "DatabasePath",
    "alias" : "string"
  }, {
    "name" : "DatabaseVersion",
    "alias" : "integer"
  }, {
    "name" : "DatabaseStats",
    "documentation" : "Database entry statistics",
    "members" : [ {
      "name" : "createTime",
      "type" : "TimePoint"
    }, {
      "name" : "dataVersion",
      "type" : "DatabaseVersion"
    }, {
      "name" : "numChildren",
      "type" : "integer"
    }, {
      "name" : "size",
      "type" : "integer"
    } ]
  }, {
    "name" : "DatabaseChildEntry",
    "members" : [ {
      "name" : "data",
      "type" : "DatabaseData"
    }, {
      "name" : "stat",
      "type" : "DatabaseStats"
    }, {
      "name" : "name",
      "type" : "DatabasePath"
    } ]
  }, {
    "name" : "CreateDatabaseEntryResult",
    "members" : [ {
      "name" : "stat",
      "type" : "DatabaseStats"
    } ]
  }, {
    "name" : "DatabaseEntryResult",
    "members" : [ {
      "name" : "data",
      "type" : "DatabaseData"
    }, {
      "name" : "stat",
      "type" : "DatabaseStats"
    } ]
  }, {
    "name" : "DeleteDatabaseEntryResult",
    "members" : [ ]
  }, {
    "name" : "ListDatabaseChildrenResult",
    "members" : [ {
      "name" : "stat",
      "type" : "DatabaseStats"
    }, {
      "name" : "children",
      "type" : [ "DatabasePath" ]
    } ]
  }, {
    "name" : "ListDatabaseChildrenDataResult",
    "members" : [ {
      "name" : "children",
      "type" : [ "DatabaseChildEntry" ]
    } ]
  } ],
  "methods" : [ {
    "name" : "AddAccount",
    "release" : "Public",
    "documentation" : [ "Used to add a new account to the system.", "New volumes can be created under the new account.", "The CHAP settings specified for the account applies to all volumes owned by the account." ],
    "params" : [ {
      "name" : "username",
      "type" : "Name",
      "documentation" : [ "Unique username for this account.", "(May be 1 to 64 characters in length)." ]
    }, {
      "name" : "initiatorSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : [ "CHAP secret to use for the initiator.", "Should be 12-16 characters long and impenetrable.", "The CHAP initiator secrets must be unique and cannot be the same as the target CHAP secret.", "<br/><br/>", "If not specified, a random secret is created." ]
    }, {
      "name" : "targetSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : [ "CHAP secret to use for the target (mutual CHAP authentication).", "Should be 12-16 characters long and impenetrable.", "The CHAP target secrets must be unique and cannot be the same as the initiator CHAP secret.", "<br/><br/>", "If not specified, a random secret is created." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "AddAccountResult",
      "adaptor" : {
        "name" : "AddAccount",
        "supports" : [ "csharp" ]
      }
    },
    "requestImplements" : [ "IAccountRequest" ],
    "objectGroup" : "Account"
  }, {
    "name" : "GetAccountByID",
    "release" : "Public",
    "documentation" : "Returns details about an account, given its AccountID.",
    "params" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "Specifies the account for which details are gathered."
    } ],
    "returnInfo" : {
      "type" : "GetAccountResult"
    },
    "objectGroup" : "Account"
  }, {
    "name" : "GetAccountByName",
    "release" : "Public",
    "documentation" : "Returns details about an account, given its Username.",
    "params" : [ {
      "name" : "username",
      "type" : "Name",
      "documentation" : "Username for the account."
    } ],
    "returnInfo" : {
      "type" : "GetAccountResult"
    },
    "objectGroup" : "Account"
  }, {
    "name" : "ListAccounts",
    "release" : "Public",
    "documentation" : "Returns the entire list of accounts, with optional paging support.",
    "params" : [ {
      "name" : "startAccountID",
      "type" : {
        "name" : "AccountID",
        "optional" : true
      },
      "default" : 0,
      "documentation" : [ "Starting AccountID to return.", "If no Account exists with this AccountID,", "the next Account by AccountID order is used as the start of the list.", "To page through the list, pass the AccountID of the last Account in the previous response + 1" ]
    }, {
      "name" : "limit",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "Maximum number of AccountInfo objects to return."
    } ],
    "returnInfo" : {
      "type" : "ListAccountsResult"
    },
    "objectGroup" : "Account"
  }, {
    "name" : "ModifyAccount",
    "release" : "Public",
    "documentation" : [ "Used to modify an existing account.", "When locking an account, any existing connections from that account are immediately terminated.", "When changing CHAP settings, any existing connections continue to be active,", "and the new CHAP values are only used on subsequent connection or reconnection." ],
    "params" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "AccountID for the account to modify."
    }, {
      "name" : "username",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : "Change the username of the account to this value."
    }, {
      "name" : "status",
      "type" : {
        "name" : "AccountStatus",
        "optional" : true
      },
      "documentation" : "Status of the account."
    }, {
      "name" : "initiatorSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : [ "CHAP secret to use for the initiator.", "Should be 12-16 characters long and impenetrable." ]
    }, {
      "name" : "targetSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : [ "CHAP secret to use for the target (mutual CHAP authentication).", "Should be 12-16 characters long and impenetrable." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "ModifyAccountResult",
      "adaptor" : {
        "name" : "ModifyAccount",
        "supports" : [ "csharp" ]
      }
    },
    "requestImplements" : [ "IAccountRequest" ],
    "objectGroup" : "Account"
  }, {
    "name" : "RemoveAccount",
    "release" : "Public",
    "documentation" : [ "Used to remove an existing account.", "All Volumes must be deleted and purged on the account before it can be removed.", "If volumes on the account are still pending deletion, RemoveAccount cannot be used until DeleteVolume to delete and purge the volumes." ],
    "params" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "AccountID for the account to remove."
    } ],
    "returnInfo" : {
      "type" : "RemoveAccountResult"
    },
    "objectGroup" : "Account"
  }, {
    "name" : "GetAccountEfficiency",
    "release" : "Public",
    "documentation" : "GetAccountEfficiency is used to retrieve information about a volume account. Only the account given as a parameter in this API method is used to compute the capacity.",
    "params" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "Specifies the volume account for which capacity is computed."
    }, {
      "name" : "force",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "GetEfficiencyResult"
    },
    "objectGroup" : "Account"
  }, {
    "name" : "CreateBackupTarget",
    "release" : "Public",
    "documentation" : [ "CreateBackupTarget allows you to create and store backup target information so that you do not need to re-enter it each time a backup is created." ],
    "params" : [ {
      "name" : "name",
      "type" : "string",
      "documentation" : [ "Name for the backup target." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "CreateBackupTargetResult"
    },
    "objectGroup" : "BackupTarget"
  }, {
    "name" : "GetBackupTarget",
    "release" : "Public",
    "documentation" : "GetBackupTarget allows you to return information about a specific backup target that has been created.",
    "params" : [ {
      "name" : "backupTargetID",
      "type" : "BackupTargetID",
      "documentation" : [ "Unique identifier assigned to the backup target." ]
    } ],
    "returnInfo" : {
      "type" : "GetBackupTargetResult"
    },
    "objectGroup" : "BackupTarget"
  }, {
    "name" : "ListBackupTargets",
    "release" : "Public",
    "documentation" : "You can use ListBackupTargets to retrieve information about all backup targets that have been created.",
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListBackupTargetsResult"
    },
    "objectGroup" : "BackupTarget"
  }, {
    "name" : "ModifyBackupTarget",
    "release" : "Public",
    "documentation" : "ModifyBackupTarget is used to change attributes of a backup target.",
    "params" : [ {
      "name" : "backupTargetID",
      "type" : "BackupTargetID",
      "documentation" : [ "Unique identifier assigned to the backup target." ]
    }, {
      "name" : "name",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Name for the backup target." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "ModifyBackupTargetResult"
    },
    "objectGroup" : "BackupTarget"
  }, {
    "name" : "RemoveBackupTarget",
    "release" : "Public",
    "documentation" : [ "RemoveBackupTarget allows you to delete backup targets." ],
    "params" : [ {
      "name" : "backupTargetID",
      "type" : "BackupTargetID",
      "documentation" : [ "Unique target ID of the target to remove." ]
    } ],
    "returnInfo" : {
      "type" : "RemoveBackupTargetResult"
    },
    "objectGroup" : "BackupTarget"
  }, {
    "name" : "GetClusterCapacity",
    "documentation" : [ "Return the high-level capacity measurements for an entire cluster.", "The fields returned from this method can be used to calculate the efficiency rates that are displayed in the Element User Interface." ],
    "release" : "Public",
    "returnInfo" : {
      "type" : "GetClusterCapacityResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetClusterInfo",
    "documentation" : "Return configuration information about the cluster.",
    "release" : "Public",
    "returnInfo" : {
      "type" : "GetClusterInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetClusterVersionInfo",
    "release" : "Public",
    "documentation" : [ "Return information about the Element software version running on each node in the cluster.", "Information about the nodes that are currently in the process of upgrading software is also returned." ],
    "returnInfo" : {
      "type" : "GetClusterVersionInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetLimits",
    "documentation" : "Retrieves the limit values set by the API",
    "release" : "Public",
    "returnInfo" : {
      "type" : "GetLimitsResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "ListEvents",
    "documentation" : "ListEvents returns events detected on the cluster, sorted from oldest to newest.",
    "release" : "Public",
    "params" : [ {
      "name" : "maxEvents",
      "type" : {
        "name" : "uint32",
        "optional" : true
      },
      "documentation" : "Specifies the maximum number of events to return."
    }, {
      "name" : "startEventID",
      "type" : {
        "name" : "EventID",
        "optional" : true
      },
      "documentation" : "Identifies the beginning of a range of events to return."
    }, {
      "name" : "endEventID",
      "type" : {
        "name" : "EventID",
        "optional" : true
      },
      "documentation" : "Identifies the end of a range of events to return."
    }, {
      "name" : "eventQueueType",
      "type" : {
        "name" : "EventQueueType",
        "optional" : true
      },
      "since" : "9.0"
    } ],
    "returnInfo" : {
      "type" : "ListEventsResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "ListClusterFaults",
    "documentation" : [ "ListClusterFaults is used to retrieve information about any faults detected on the cluster.", "With this method, both current and resolved faults can be retrieved. The system caches faults every 30 seconds." ],
    "release" : "Public",
    "params" : [ {
      "name" : "exceptions",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    }, {
      "name" : "bestPractices",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Include faults triggered by sub-optimal system configuration.", "Possible values: true, false" ]
    }, {
      "name" : "update",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    }, {
      "name" : "faultTypes",
      "type" : {
        "name" : "ListClusterFaultType",
        "optional" : true
      },
      "documentation" : [ "Determines the types of faults returned: current: List active, unresolved faults.", "<b>resolved</b>: List faults that were previously detected and resolved.", "<b>all</b>: (Default) List both current and resolved faults. You can see the fault status in the 'resolved' field of the Cluster Fault object." ]
    } ],
    "returnInfo" : {
      "type" : "ListClusterFaultsResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "ClearClusterFaults",
    "release" : "Public",
    "documentation" : "ClearClusterFaults is used to clear information about both current faults that are resolved as well as faults that were previously detected and resolved can be cleared.",
    "params" : [ {
      "name" : "faultTypes",
      "type" : {
        "name" : "ListClusterFaultType",
        "optional" : true
      },
      "documentation" : [ "Determines the types of faults cleared:<br/>", "<b>current</b>: Faults that are currently detected and have not been resolved.<br/>", "<b>resolved</b>: Faults that were previously detected and resolved.<br/>", "<b>all</b>: Both current and resolved faults are cleared. The fault status can be determined by the \"resolved\" field of the fault object." ]
    } ],
    "returnInfo" : {
      "type" : "ClearClusterFaultsResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetClusterConfig",
    "release" : "Public",
    "documentation" : [ "The GetClusterConfig API method is used to return information about the cluster configuration this node uses to communicate with the cluster it is a part of.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetClusterConfigResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetClusterFullThreshold",
    "release" : "Public",
    "documentation" : [ "GetClusterFullThreshold is used to view the stages set for cluster fullness levels. All levels are returned when this method is entered." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetClusterFullThresholdResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "ModifyClusterFullThreshold",
    "release" : "Public",
    "documentation" : [ "ModifyClusterFullThreshold is used to change the level at which an event is generated when the storage cluster approaches the capacity utilization requested. The number entered in this setting is used to indicate the number of node failures the system is required to recover from. For example, on a 10 node cluster, if you want to be alerted when the system cannot recover from 3 nodes failures, enter the value of \"3\". When this number is reached, a message alert is sent to the Event Log in the Cluster Management Console." ],
    "params" : [ {
      "name" : "stage2AwareThreshold",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "Number of nodes worth of capacity remaining on the cluster that triggers a notification."
    }, {
      "name" : "stage3BlockThresholdPercent",
      "since" : "8.0",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "Percent below \"Error\" state to raise a cluster \"Warning\" alert."
    }, {
      "name" : "maxMetadataOverProvisionFactor",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "A value representative of the number of times metadata space can be over provisioned relative to the amount of space available. For example, if there was enough metadata space to store 100 TiB of volumes and this number was set to 5, then 500 TiB worth of volumes could be created."
    } ],
    "returnInfo" : {
      "type" : "ModifyClusterFullThresholdResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetClusterMasterNodeID",
    "release" : "Incubate",
    "documentation" : [ "GetClusterMasterNodeID is used to return the ID of the node that can perform cluster-wide administration tasks and holds the storage virtual IP (SVIP) and management virtual IP (MVIP)." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetClusterMasterNodeIDResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetClusterStats",
    "release" : "Public",
    "documentation" : [ "GetClusterStats is used to return high-level activity measurements for the cluster. Values returned are cumulative from the creation of the cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetClusterStatsResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "CreateCluster",
    "release" : "Incubate",
    "documentation" : [ "The CreateCluster method is used to initialize the node in a cluster that has ownership of the \"mvip\" and \"svip\" addresses. Each new cluster is initialized using the MIP of the first node in the cluster. This method also automatically adds all the nodes being configured into the cluster. The method is used only once each time a new cluster is initialized.", "<br/><br/>", "<b>Note</b>: You need to log into the node that is used as the master node for the cluster. Once logged in, run the GetBootstrapConfig method on the node to get the IP addresses for the rest of the nodes that you want to include in the cluster. Then run the CreateCluster method." ],
    "params" : [ {
      "name" : "acceptEula",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Indicate your acceptance of the End User License Agreement when creating this cluster. To accept the EULA, set this parameter to true."
    }, {
      "name" : "mvip",
      "type" : "NetworkInterfaceName",
      "documentation" : "Floating (virtual) IP address for the cluster on the management network."
    }, {
      "name" : "svip",
      "type" : "NetworkInterfaceName",
      "documentation" : "Floating (virtual) IP address for the cluster on the storage (iSCSI) network."
    }, {
      "name" : "repCount",
      "type" : "integer",
      "documentation" : "Number of replicas of each piece of data to store in the cluster. Valid value is \"2\".",
      "default" : 2
    }, {
      "name" : "username",
      "type" : "Name",
      "documentation" : "User name for the cluster admin."
    }, {
      "name" : "password",
      "type" : "string",
      "documentation" : "Initial password for the cluster admin account."
    }, {
      "name" : "nodes",
      "type" : [ "IpAddress" ],
      "documentation" : "CIP/SIP addresses of the initial set of nodes making up the cluster. This node's IP must be in the list."
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "CreateClusterResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "ListClusterAdmins",
    "release" : "Public",
    "documentation" : [ "ListClusterAdmins returns the list of all cluster administrators for the cluster. There can be several cluster administrators that have different levels of permissions. There can be only one primary cluster administrator in the system. The primary Cluster Admin is the administrator that was created when the cluster was created. LDAP administrators can also be created when setting up an LDAP system on the cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListClusterAdminsResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "AddClusterAdmin",
    "release" : "Public",
    "documentation" : [ "AddClusterAdmin adds a new Cluster Admin. A Cluster Admin can be used to manage the cluster via the API and management tools. Cluster Admins are completely separate and unrelated to standard tenant accounts.", "<br/><br/>", "Each Cluster Admin can be restricted to a sub-set of the API. SolidFire recommends using multiple Cluster Admins for different users and applications. Each Cluster Admin should be given the minimal permissions necessary to reduce the potential impact of credential compromise." ],
    "params" : [ {
      "name" : "username",
      "type" : "Name",
      "documentation" : "Unique username for this Cluster Admin."
    }, {
      "name" : "password",
      "type" : "string",
      "documentation" : "Password used to authenticate this Cluster Admin."
    }, {
      "name" : "access",
      "type" : [ "string" ],
      "documentation" : "Controls which methods this Cluster Admin can use. For more details on the levels of access, see \"Access Control\" in the Element API Guide."
    }, {
      "name" : "acceptEula",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Indicate your acceptance of the End User License Agreement when creating this cluster admin. To accept the EULA, set this parameter to true."
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "AddClusterAdminResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "ModifyClusterAdmin",
    "release" : "Public",
    "documentation" : [ "ModifyClusterAdmin is used to change the settings for a Cluster Admin or LDAP Cluster Admin. Access for the administrator Cluster Admin account cannot be changed." ],
    "params" : [ {
      "name" : "clusterAdminID",
      "type" : "integer",
      "documentation" : "ClusterAdminID for the Cluster Admin or LDAP Cluster Admin to modify."
    }, {
      "name" : "password",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "Password used to authenticate this Cluster Admin."
    }, {
      "name" : "access",
      "type" : {
        "name" : [ "string" ],
        "optional" : true
      },
      "documentation" : "Controls which methods this Cluster Admin can use. For more details on the levels of access, see \"Access Control\" in the Element API Guide."
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "ModifyClusterAdminResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "RemoveClusterAdmin",
    "release" : "Public",
    "documentation" : [ "RemoveClusterAdmin is used to remove a Cluster Admin. The \"admin\" Cluster Admin cannot be removed." ],
    "params" : [ {
      "name" : "clusterAdminID",
      "type" : "ClusterAdminID",
      "documentation" : "ClusterAdminID for the Cluster Admin to remove."
    } ],
    "returnInfo" : {
      "type" : "RemoveClusterAdminResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "SetClusterConfig",
    "release" : "Public",
    "documentation" : [ "The SetClusterConfig API method is used to set the configuration this node uses to communicate with the cluster it is associated with. To see the states in which these objects can be modified see Cluster Object on page 109. To display the current cluster interface settings for a node, run the GetClusterConfig API method.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "cluster",
      "type" : "ClusterConfig",
      "documentation" : "Objects that are changed for the cluster interface settings. Only the fields you want changed need to be added to this method as objects in the \"cluster\" parameter."
    } ],
    "returnInfo" : {
      "type" : "SetClusterConfigResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetSnmpACL",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "GetSnmpACL is used to return the current SNMP access permissions on the cluster nodes." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetSnmpACLResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "SetSnmpACL",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "SetSnmpACL is used to configure SNMP access permissions on the cluster nodes. The values set with this interface apply to all nodes in the cluster, and the values that are passed replace, in whole, all values set in any previous call to SetSnmpACL. Also note that the values set with this interface replace all \"network\" or \"usmUsers\" values set with the older SetSnmpInfo." ],
    "params" : [ {
      "name" : "networks",
      "type" : [ "SnmpNetwork" ],
      "documentation" : "List of networks and what type of access they have to the SNMP servers running on the cluster nodes. See SNMP Network Object for possible \"networks\" values. REQUIRED if SNMP v# is disabled."
    }, {
      "name" : "usmUsers",
      "type" : [ "SnmpV3UsmUser" ],
      "documentation" : "List of users and the type of access they have to the SNMP servers running on the cluster nodes. REQUIRED if SNMP v3 is enabled."
    } ],
    "returnInfo" : {
      "type" : "SetSnmpACLResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetSnmpTrapInfo",
    "release" : "Public",
    "documentation" : [ "GetSnmpTrapInfo is used to return current SNMP trap configuration information." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetSnmpTrapInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "SetSnmpTrapInfo",
    "release" : "Public",
    "documentation" : [ "SetSnmpTrapInfo is used to enable and disable the generation of SolidFire SNMP notifications (traps) and to specify the set of network host computers that are to receive the notifications. The values passed with each SetSnmpTrapInfo method replaces all values set in any previous method to SetSnmpTrapInfo." ],
    "params" : [ {
      "name" : "trapRecipients",
      "type" : [ "SnmpTrapRecipient" ],
      "documentation" : "List of hosts that are to receive the traps generated by the Cluster Master. At least one object is required if any one of the trap types is enabled."
    }, {
      "name" : "clusterFaultTrapsEnabled",
      "type" : "boolean",
      "documentation" : "If \"true\", when a cluster fault is logged a corresponding solidFireClusterFaultNotification is sent to the configured list of trap recipients.",
      "default" : false
    }, {
      "name" : "clusterFaultResolvedTrapsEnabled",
      "type" : "boolean",
      "documentation" : "If \"true\", when a cluster fault is logged a corresponding solidFireClusterFaultResolvedNotification is sent to the configured list of trap recipients.",
      "default" : false
    }, {
      "name" : "clusterEventTrapsEnabled",
      "type" : "boolean",
      "documentation" : "If \"true\", when a cluster fault is logged a corresponding solidFireClusterEventNotification is sent to the configured list of trap recipients.",
      "default" : false
    } ],
    "returnInfo" : {
      "type" : "SetSnmpTrapInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "EnableSnmp",
    "release" : "Public",
    "documentation" : [ "EnableSnmp is used to enable SNMP on the cluster nodes. The values set with this interface apply to all nodes in the cluster, and the values that are passed replace, in whole, all values set in any previous call to EnableSnmp." ],
    "params" : [ {
      "name" : "snmpV3Enabled",
      "type" : "boolean",
      "documentation" : "If set to \"true\", then SNMP v3 is enabled on each node in the cluster. If set to \"false\", then SNMP v2 is enabled.",
      "default" : false
    } ],
    "returnInfo" : {
      "type" : "EnableSnmpResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "DisableSnmp",
    "release" : "Public",
    "documentation" : [ "DisableSnmp is used to disable SNMP on the cluster nodes." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "DisableSnmpResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetSnmpInfo",
    "release" : "Public",
    "documentation" : [ "GetSnmpInfo is used to return the current simple network management protocol (SNMP) configuration information.", "<br/><br/>", "<b>Note</b>: GetSnmpInfo will be available for Element OS 8 and prior releases. It will be deprecated after Element OS 8. There are two new SNMP API methods that you should migrate over to. They are GetSnmpState and GetSnmpACL. Please see details in this document for their descriptions and usage." ],
    "deprecated" : "8.0",
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetSnmpInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "SetSnmpInfo",
    "release" : "Public",
    "documentation" : [ "SetSnmpInfo is used to configure SNMP v2 and v3 on the cluster nodes. The values set with this interface apply to all nodes in the cluster, and the values that are passed replace, in whole, all values set in any previous call to SetSnmpInfo.", "<br/><br/>", "<b>Note</b>: EnableSnmp and SetSnmpACL methods can be used to accomplish the same results as SetSnmpInfo. SetSnmpInfo will no longer be available after the Element 8 release. Please use EnableSnmp and SetSnmpACL in the future." ],
    "deprecated" : "8.0",
    "params" : [ {
      "name" : "networks",
      "type" : {
        "name" : [ "SnmpNetwork" ],
        "optional" : true
      },
      "documentation" : "List of networks and what type of access they have to the SNMP servers running on the cluster nodes. See SNMP Network Object for possible \"networks\" values. SNMP v2 only."
    }, {
      "name" : "enabled",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "If set to \"true\", then SNMP is enabled on each node in the cluster."
    }, {
      "name" : "snmpV3Enabled",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "If set to \"true\", then SNMP v3 is enabled on each node in the cluster."
    }, {
      "name" : "usmUsers",
      "type" : {
        "name" : [ "SnmpV3UsmUser" ],
        "optional" : true
      },
      "documentation" : "If SNMP v3 is enabled, this value must be passed in place of the \"networks\" parameter. SNMP v3 only."
    } ],
    "returnInfo" : {
      "type" : "SetSnmpInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetSnmpState",
    "release" : "Public",
    "documentation" : [ "GetSnmpState is used to return the current state of the SNMP feature.", "<br/><br/>", "<b>Note</b>: GetSnmpState is new for Element OS 8. Please use this method and SetSnmpACL to migrate your SNMP functionality in the future." ],
    "since" : "8.0",
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetSnmpStateResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "ListSyncJobs",
    "release" : "Incubate",
    "documentation" : [ "ListSyncJobs is used to return information about synchronization jobs that are running on a SolidFire cluster. Synchronization jobs that are returned with this method are, \"slice,\" \"clone\" and \"remote.\"" ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListSyncJobsResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetAPI",
    "release" : "Public",
    "documentation" : [ "Retrieves the current version of the API and a list of all supported versions." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetAPIResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetNtpInfo",
    "release" : "Public",
    "documentation" : [ "GetNtpInfo is used to return the current network time protocol (NTP) configuration information." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetNtpInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "SetNtpInfo",
    "release" : "Incubate",
    "documentation" : [ "SetNtpInfo is used to configure the NTP on cluster nodes. The values set with this interface apply to all nodes in the cluster. The nodes can only be configured as a server where a host is selected to administrate the networking and/or a broadcast client where each host sends each message to each peer." ],
    "params" : [ {
      "name" : "servers",
      "type" : [ "string" ],
      "documentation" : "List of NTP servers to add to each node's NTP configuration."
    }, {
      "name" : "broadcastclient",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Enable every node in the cluster as a broadcase client.",
      "default" : false
    } ],
    "returnInfo" : {
      "type" : "SetNtpInfoResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetClusterState",
    "release" : "Incubate",
    "documentation" : [ "The GetClusterState method is used to indicate if a node is part of a cluster or not. The three states are: <br><strong>Available:</strong> Node has not been configured with a cluster name.<br><strong>Pending:</strong> Node is pending for a specific named cluster and can be added.<br><strong>Active:</strong> Node is active and a member of a cluster and may not be added to another cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetClusterStateResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetCurrentClusterAdmin",
    "release" : "Public",
    "documentation" : [ "GetCurrentClusterAdmin returns information for the current primary cluster administrator. The primary Cluster Admin was ncreated when the cluster was created." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetCurrentClusterAdminResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "CreateClusterSupportBundle",
    "release" : "Incubate",
    "since" : "8.0",
    "documentation" : [ "CreateClusterSupportBundle is used to gather support bundles from all the nodes in a cluster. When the bundle has been successfully created, the bundle is stored on the node as a tar.gz file." ],
    "params" : [ {
      "name" : "allowIncomplete",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Allows the script to continue to run if bundles cannot be gathered from one or more of the nodes."
    }, {
      "name" : "bundleName",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "Unique name for each support bundle created. If no name is provided, then 'supportbundle' and the node name is used as a file name."
    }, {
      "name" : "extraArgs",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "This parameter is fed to the sf_make_support_bundle script. Should be used only at the request of SolidFire Support."
    }, {
      "name" : "mvip",
      "type" : {
        "name" : "IpAddress",
        "optional" : true
      },
      "documentation" : [ "The mvip of the cluster. Bundles will be gathered from all nodes in the cluster.", "REQUIRED if 'nodes' are not specified." ]
    }, {
      "name" : "nodes",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "The IP addresses of the nodes from which to gather bundles. Use either 'nodes' or 'mvip', but not both to specify which nodes to gather from.", "REQUIRED if 'nodes' are not specified." ]
    }, {
      "name" : "password",
      "type" : "string",
      "documentation" : [ "The cluster password. Note: This password will be visible as text when entered." ]
    }, {
      "name" : "username",
      "type" : "string",
      "documentation" : [ "The admin user name. Any level of 'admin' can be used." ]
    } ],
    "returnInfo" : {
      "type" : "CreateClusterSupportBundleResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "CreateSupportBundle",
    "release" : "Incubate",
    "since" : "8.0",
    "documentation" : [ "CreateSupportBundle is used to create a support bundle file under the node's directory. When the bundle has been successfully created, the bundle is stored on the node as a tar.gz file." ],
    "params" : [ {
      "name" : "bundleName",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "Unique name for each support bundle created. If no name is provided, then 'supportbundle' and the node name is used as a file name."
    }, {
      "name" : "extraArgs",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "This parameter is fed to the sf_make_support_bundle script. Should be used only at the request of SolidFire Support."
    }, {
      "name" : "timeoutSec",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : [ "The number of seconds to let the support bundle script run before timing out and stopping. Default is 1500 seconds." ]
    } ],
    "returnInfo" : {
      "type" : "CreateSupportBundleResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "DeleteAllSupportBundles",
    "release" : "Incubate",
    "since" : "8.0",
    "documentation" : [ "DeleteAllSupportBundles is used to delete all support bundles generated with the CreateSupportBundle API method." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "DeleteAllSupportBundlesResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "EnableEncryptionAtRest",
    "release" : "Public",
    "documentation" : [ "The EnableEncryptionAtRest method is used to enable the Advanced Encryption Standard (AES) 256-bit encryption at rest on the cluster so that the cluster can manage the encryption key used for the drives on each node. This feature is not enabled by default. Enabling this operation allows the cluster to automatically manage encryption keys internally for the drives on each node in the cluster. Nodes do not store the keys to unlock drives and the keys are never passed over the network. Two nodes participating in a cluster are required to access the key to disable encryption on a drive. The encryption management does not affect performance or efficiency on the cluster. If an encryption-enabled drive or node is removed from the cluster with the API, all data is secure erased and any data left on the drive cannot be read or accessed.", "Enabling or disabling encryption should be performed when the cluster is running and in a healthy state. Encryption can be enabled or disabled at your discretion and can be performed as often as you need.", "<br/><b>Note</b>: This process is asynchronous and returns a response before encryption is enabled. The GetClusterInfo method can be used to poll the system to see when the process has completed." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "EnableEncryptionAtRestResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "DisableEncryptionAtRest",
    "release" : "Public",
    "documentation" : [ "The DisableEncryptionAtRest method enables you to remove the encryption that was previously applied to the cluster using the EnableEncryptionAtRest method.", "This disable method is asynchronous and returns a response before encryption is disabled.", "You can use the GetClusterInfo method to poll the system to see when the process has completed." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "DisableEncryptionAtRestResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetSystemStatus",
    "release" : "Incubate",
    "documentation" : [ ],
    "params" : [ {
      "name" : "force",
      "type" : "boolean",
      "documentation" : "Force must always be true when called on a cluster connection."
    } ],
    "returnInfo" : {
      "type" : "GetSystemStatusResult"
    },
    "objectGroup" : "Cluster"
  }, {
    "name" : "SnmpSendTestTraps",
    "release" : "Public",
    "params" : [ ],
    "returnInfo" : {
      "type" : "SnmpSendTestTrapsResult"
    },
    "documentation" : [ "SnmpSendTestTraps enables you to test SNMP functionality for a cluster. This method instructs the cluster to send test SNMP traps to the currently configured SNMP manager." ],
    "objectGroup" : "Cluster"
  }, {
    "name" : "GetAsyncResult",
    "release" : "Public",
    "documentation" : [ "Used to retrieve the result of asynchronous method calls.", "Some method calls are long running and do not complete when the initial response is sent.", "To obtain the result of the method call, polling with GetAsyncResult is required.", "<br/><br/>", "GetAsyncResult returns the overall status of the operation (in progress, completed, or error) in a standard fashion,", "but the actual data returned for the operation depends on the original method call and the return data is documented with each method.", "<br/><br/>", "The result for a completed asynchronous method call can only be retrieved once.", "Once the final result has been returned, later attempts returns an error." ],
    "params" : [ {
      "name" : "asyncHandle",
      "type" : "AsyncResultID",
      "documentation" : "A value that was returned from the original asynchronous method call."
    } ],
    "returnInfo" : {
      "type" : "GetAsyncResultResult"
    },
    "objectGroup" : "Common"
  }, {
    "name" : "AddDrives",
    "release" : "Public",
    "documentation" : [ "AddDrives is used to add one or more available drives to the cluster enabling the drives to host a portion of the cluster's data.", "When you add a node to the cluster or install new drives in an existing node, the new drives are marked as \"available\" and must be added via AddDrives before they can be utilized.", "Use the \"ListDrives\" method to display drives that are \"available\" to be added.", "When you add multiple drives, it is more efficient to add them in a single \"AddDrives\" method call rather than multiple individual methods with a single drive each.", "This reduces the amount of data balancing that must occur to stabilize the storage load on the cluster.", "<br/><br/>", "When you add a drive, the system automatically determines the \"type\" of drive it should be.", "<br/><br/>", "The method returns immediately. However, it may take some time for the data in the cluster to be rebalanced using the newly added drives.", "As the new drive(s) are syncing on the system, you can use the \"ListSyncJobs\" method to see how the drive(s) are being rebalanced and the progress of adding the new drive." ],
    "params" : [ {
      "name" : "drives",
      "type" : [ "NewDrive" ],
      "documentation" : "List of drives to add to the cluster."
    } ],
    "returnInfo" : {
      "type" : "AddDrivesResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "ListDrives",
    "release" : "Public",
    "documentation" : [ "ListDrives allows you to retrieve the list of the drives that exist in the cluster's active nodes.", "This method returns drives that have been added as volume metadata or block drives as well as drives that have not been added and are available." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListDrivesResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "GetDriveConfig",
    "release" : "Incubate",
    "documentation" : [ "GetDriveConfig is used to display drive information for expected slice and block drive counts as well as the number of slices and block drives that are currently connected to the node.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetDriveConfigResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "GetDriveHardwareInfo",
    "release" : "Public",
    "documentation" : "GetDriveHardwareInfo returns all the hardware info for the given drive. This generally includes manufacturers, vendors, versions, and other associated hardware identification information.",
    "params" : [ {
      "name" : "driveID",
      "type" : "DriveID",
      "documentation" : "DriveID for the drive information requested. DriveIDs can be obtained via the \"ListDrives\" method."
    } ],
    "returnInfo" : {
      "type" : "GetDriveHardwareInfoResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "ListDriveHardware",
    "release" : "Public",
    "documentation" : "ListDriveHardware returns all the drives connected to a node. Use this method on the cluster to return drive hardware information for all the drives on all nodes.",
    "params" : [ {
      "name" : "force",
      "type" : "boolean",
      "documentation" : "This must be set to true in order to retrieve the drive hardware stats from the cluster."
    } ],
    "returnInfo" : {
      "type" : "ListDriveHardwareResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "ResetDrives",
    "release" : "Public",
    "documentation" : [ "ResetDrives is used to pro-actively initialize drives and remove all data currently residing on the drive. The drive can then be reused in an existing node or used in an upgraded SolidFire node. This method requires the force=true parameter to be included in the method call.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "drives",
      "type" : "string",
      "documentation" : "List of device names (not driveIDs) to reset."
    }, {
      "name" : "force",
      "type" : "boolean",
      "documentation" : "The \"force\" parameter must be included on this method to successfully reset a drive."
    } ],
    "returnInfo" : {
      "type" : "ResetDrivesResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "TestDrives",
    "release" : "Public",
    "documentation" : [ "The TestDrives API method is used to run a hardware validation on all the drives on the node. Hardware failures on the drives are detected if present and they are reported in the results of the validation tests.", "<br/><br/>", "<b>Note</b>: This test takes approximately 10 minutes.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "minutes",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "The number of minutes to run the test can be specified."
    }, {
      "name" : "force",
      "type" : "boolean",
      "documentation" : "The \"force\" parameter must be included on this method to successfully test the drives on the node."
    } ],
    "returnInfo" : {
      "type" : "TestDrivesResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "GetDriveStats",
    "release" : "Public",
    "documentation" : [ "GetDriveStats return high-level activity measurements for a single drive. Values are cumulative from the addition of the drive to the cluster. Some values are specific to Block Drives. Statistical data may not be returned for both block and metadata drives when running this method.", "For more information on which drive type returns which data, see Response Example (Block Drive) and Response Example (Volume Metadata Drive) in the SolidFire API guide." ],
    "params" : [ {
      "name" : "driveID",
      "type" : "DriveID",
      "documentation" : "Specifies the drive for which statistics are gathered."
    } ],
    "returnInfo" : {
      "type" : "GetDriveStatsResult",
      "adaptor" : {
        "name" : "GetDriveStats",
        "supports" : [ "java" ]
      }
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "SecureEraseDrives",
    "release" : "Public",
    "documentation" : [ "SecureEraseDrives is used to remove any residual data from drives that have a status of \"available.\" For example, when replacing a drive at its end-of-life that contained sensitive data.", "It uses a Security Erase Unit command to write a predetermined pattern to the drive and resets the encryption key on the drive. The method may take up to two minutes to complete, so it is an asynchronous method.", "The GetAsyncResult method can be used to check on the status of the secure erase operation.", "<br/><br/>", "Use the \"ListDrives\" method to obtain the driveIDs for the drives you want to secure erase." ],
    "params" : [ {
      "name" : "drives",
      "type" : [ "DriveID" ],
      "documentation" : "List of driveIDs to secure erase."
    } ],
    "returnInfo" : {
      "type" : "AsyncHandleResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "RemoveDrives",
    "release" : "Public",
    "documentation" : [ "You can use RemoveDrives to proactively remove drives that are part of the cluster.", "You may want to use this method when reducing cluster capacity or preparing to replace drives nearing the end of their service life.", "Any data on the drives is removed and migrated to other drives in the cluster before the drive is removed from the cluster. This is an asynchronous method.", "Depending on the total capacity of the drives being removed, it may take several minutes to migrate all of the data.", "Use the \"GetAsyncResult\" method to check the status of the remove operation.", "<br/><br/>", "When removing multiple drives, use a single \"RemoveDrives\" method call rather than multiple individual methods with a single drive each.", "This reduces the amount of data balancing that must occur to even stabilize the storage load on the cluster.", "<br/><br/>", "You can also remove drives with a \"failed\" status using \"RemoveDrives\".", "When you remove a drive with a \"failed\" status it is not returned to an \"available\" or \"active\" status.", "The drive is unavailable for use in the cluster.", "<br/><br/>", "Use the \"ListDrives\" method to obtain the driveIDs for the drives you want to remove." ],
    "params" : [ {
      "name" : "drives",
      "type" : [ "DriveID" ],
      "documentation" : "List of driveIDs to remove from the cluster."
    } ],
    "returnInfo" : {
      "type" : "AsyncHandleResult"
    },
    "objectGroup" : "Drive"
  }, {
    "name" : "GetFeatureStatus",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "GetFeatureStatus allows you to retrieve the status of a cluster feature." ],
    "params" : [ {
      "name" : "feature",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Valid values: vvols: Find the status of the Virtual Volumes (VVOLs) cluster feature." ]
    } ],
    "returnInfo" : {
      "type" : "GetFeatureStatusResult"
    },
    "objectGroup" : "Feature"
  }, {
    "name" : "EnableFeature",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "EnableFeature allows you to enable cluster features that are disabled by default." ],
    "params" : [ {
      "name" : "feature",
      "type" : "string",
      "documentation" : [ "Valid values: vvols: Enable the Virtual Volumes (VVOLs) cluster feature." ]
    } ],
    "returnInfo" : {
      "type" : "EnableFeatureResult"
    },
    "objectGroup" : "Feature"
  }, {
    "name" : "ListFibreChannelPortInfo",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "The ListFibreChannelPortInfo is used to return information about the Fibre Channel ports. The API method is intended for use on individual nodes; userid and password is required for access to individual Fibre Channel nodes. However, this method can be used on the cluster if the force=true parameter is included in the method call. When used on the cluster, all Fibre Channel interfaces are listed." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListFibreChannelPortInfoResult"
    },
    "objectGroup" : "FibreChannel"
  }, {
    "name" : "ListNodeFibreChannelPortInfo",
    "release" : "Public",
    "since" : "7.0",
    "documentation" : [ "The ListNodeFibreChannelPortInfo is used to return information about the Fibre Channel ports. The API method is intended for use on individual nodes; userid and password is required for access to individual Fibre Channel nodes. However, this method can be used on the cluster if the force=true parameter is included in the method call. When used on the cluster, all Fibre Channel interfaces are listed." ],
    "params" : [ {
      "name" : "force",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Specify force=true to call method on all member nodes of the cluster."
    } ],
    "returnInfo" : {
      "type" : "ListNodeFibreChannelPortInfoResult"
    },
    "objectGroup" : "FibreChannel"
  }, {
    "name" : "ListFibreChannelSessions",
    "release" : "Public",
    "since" : "7.0",
    "documentation" : [ "The ListFibreChannelSessions is used to return information about the active Fibre Channel sessions on a cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListFibreChannelSessionsResult"
    },
    "objectGroup" : "FibreChannel"
  }, {
    "name" : "GetClusterHardwareInfo",
    "returnInfo" : {
      "type" : "GetClusterHardwareInfoResult"
    },
    "documentation" : "You can use the GetClusterHardwareInfo method to retrieve the hardware status and information for all Fibre Channel nodes, iSCSI nodes and drives in the cluster. This generally includes manufacturers, vendors, versions, and other associated hardware identification information.",
    "params" : [ {
      "name" : "type",
      "documentation" : "Include only a certain type of hardware information in the response. Can be one of the following:drives: List only drive information in the response.nodes: List only node information in the response.all: Include both drive and node information in the response.If this parameter is omitted, a type of \"all\" is assumed.",
      "type" : {
        "optional" : true,
        "name" : "string"
      }
    } ],
    "release" : "Public",
    "objectGroup" : "Hardware"
  }, {
    "release" : "Public",
    "returnInfo" : {
      "type" : "GetHardwareConfigResult"
    },
    "documentation" : "GetHardwareConfig enables you to display the hardware configuration information for a node. NOTE: This method is available only through the per-node API endpoint 5.0 or later.",
    "name" : "GetHardwareConfig",
    "objectGroup" : "Hardware"
  }, {
    "name" : "GetNodeHardwareInfo",
    "returnInfo" : {
      "type" : "GetNodeHardwareInfoResult"
    },
    "documentation" : "GetNodeHardwareInfo is used to return all the hardware info and status for the node specified. This generally includes manufacturers, vendors, versions, and other associated hardware identification information.",
    "params" : [ {
      "name" : "nodeID",
      "documentation" : "The ID of the node for which hardware information is being requested.  Information about a  node is returned if a   node is specified.",
      "type" : {
        "optional" : false,
        "name" : "integer"
      }
    } ],
    "release" : "Public",
    "objectGroup" : "Hardware"
  }, {
    "name" : "GetNvramInfo",
    "returnInfo" : {
      "type" : "GetNvramInfoResult"
    },
    "documentation" : "GetNvramInfo allows you to retrieve information from each node about the NVRAM card.  ",
    "params" : [ ],
    "release" : "Public",
    "objectGroup" : "Hardware"
  }, {
    "name" : "InvokeSFApi",
    "release" : "Public",
    "documentation" : [ "This will invoke any API method supported by the SolidFire API for the version and port the connection is using.", "Returns a nested hashtable of key/value pairs that contain the result of the invoked method." ],
    "params" : [ {
      "name" : "method",
      "type" : "string",
      "documentation" : "The name of the method to invoke. This is case sensitive."
    }, {
      "name" : "parameters",
      "type" : {
        "name" : "object",
        "optional" : true
      },
      "documentation" : [ "An object, normally a dictionary or hashtable of the key/value pairs, to be passed as the params for the method being invoked." ]
    } ],
    "returnInfo" : {
      "type" : "InvokeSFApiResult",
      "adaptor" : {
        "name" : "InvokeSFApi",
        "supports" : [ "csharp", "java", "python" ]
      }
    },
    "objectGroup" : "InvokeSFApi"
  }, {
    "name" : "AddLdapClusterAdmin",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "AddLdapClusterAdmin is used to add a new LDAP Cluster Admin. An LDAP Cluster Admin can be used to manage the cluster via the API and management tools. LDAP Cluster Admins are completely separate and unrelated to standard tenant accounts.", "<br/><br/>", "An LDAP group that has been defined in Active Directory can also be added using this API method. The access level that is given to the group will be passed to the individual users in the LDAP group." ],
    "params" : [ {
      "name" : "username",
      "type" : "string",
      "documentation" : "The distinguished user name for the new LDAP cluster admin."
    }, {
      "name" : "access",
      "type" : [ "string" ],
      "documentation" : "Controls which methods this Cluster Admin can use. For more details on the levels of access, see the Access Control appendix in the SolidFire API Reference."
    }, {
      "name" : "acceptEula",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Indicate your acceptance of the End User License Agreement when creating this cluster admin. To accept the EULA, set this parameter to true."
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "AddLdapClusterAdminResult"
    },
    "objectGroup" : "LDAP"
  }, {
    "name" : "TestLdapAuthentication",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "The TestLdapAuthentication is used to verify the currently enabled LDAP authentication configuration settings are correct. If the configuration settings are correct, the API call returns a list of the groups the tested user is a member of." ],
    "params" : [ {
      "name" : "username",
      "type" : "string",
      "documentation" : "The username to be tested."
    }, {
      "name" : "password",
      "type" : "string",
      "documentation" : "The password for the username to be tester."
    }, {
      "name" : "ldapConfiguration",
      "type" : {
        "name" : "LdapConfiguration",
        "optional" : true
      },
      "documentation" : "An ldapConfiguration object to be tested. If this parameter is provided, the API call will test the provided configuration even if LDAP authentication is currently disabled."
    } ],
    "returnInfo" : {
      "type" : "TestLdapAuthenticationResult"
    },
    "objectGroup" : "LDAP"
  }, {
    "name" : "GetLdapConfiguration",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "The GetLdapConfiguration is used to get the LDAP configuration currently active on the cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetLdapConfigurationResult"
    },
    "objectGroup" : "LDAP"
  }, {
    "name" : "EnableLdapAuthentication",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "The EnableLdapAuthentication method is used to configure an LDAP server connection to use for LDAP authentication to a SolidFire cluster. Users that are members on the LDAP server can then log in to a SolidFire storage system using their LDAP authentication userid and password." ],
    "params" : [ {
      "name" : "authType",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Identifies which user authentcation method will be used. <br/>", "Must be one of the following:<br/>", "<b>DirectBind</b><br/>", "<b>SearchAndBind</b> (default)" ]
    }, {
      "name" : "groupSearchBaseDN",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "The base DN of the tree to start the group search (will do a subtree search from here)." ]
    }, {
      "name" : "groupSearchCustomFilter",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "REQUIRED for CustomFilter<br/>", "For use with the CustomFilter search type, an LDAP filter to use to return the DNs of a user's groups.<br/>", "The string can have placeholder text of %USERNAME% and %USERDN% to be replaced with their username and full userDN as needed." ]
    }, {
      "name" : "groupSearchType",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Controls the default group search filter used, can be one of the following:<br/>", "<b>NoGroups</b>: No group support.<br/>", "<b>ActiveDirectory</b>: (default) Nested membership of all of a user's AD groups.<br/>", "<b>MemberDN</b>: MemberDN style groups (single-level)." ]
    }, {
      "name" : "searchBindDN",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "REQUIRED for SearchAndBind<br/>", "A fully qualified DN to log in with to perform an LDAP search for the user (needs read access to the LDAP directory)." ]
    }, {
      "name" : "searchBindPassword",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "REQUIRED for SearchAndBind<br/>", "The password for the searchBindDN account used for searching." ]
    }, {
      "name" : "serverURIs",
      "type" : [ "string" ],
      "documentation" : [ "A list of LDAP server URIs (examples: \"ldap://1.2.3.4\" and ldaps://1.2.3.4:123\")" ]
    }, {
      "name" : "userDNTemplate",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "REQUIRED for DirectBind<br/>", "A string that is used to form a fully qualified user DN.<br/>", "The string should have the placeholder text \"%USERNAME%\" which will be replaced with the username of the authenticating user." ]
    }, {
      "name" : "userSearchBaseDN",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "REQUIRED for SearchAndBind", "The base DN of the tree used to start the search (will do a subtree search from here)." ]
    }, {
      "name" : "userSearchFilter",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "REQUIRED for SearchAndBind.<br/>", "The LDAP filter to use.<br/>", "The string should have the placeholder text \"%USERNAME%\" which will be replaced with the username of the authenticating user.<br/>", "Example: (&(objectClass=person) (sAMAccountName=%USERNAME%)) will use the sAMAccountName field in Active Directory to match the nusername entered at cluster login." ]
    } ],
    "returnInfo" : {
      "type" : "EnableLdapAuthenticationResult"
    },
    "objectGroup" : "LDAP"
  }, {
    "name" : "DisableLdapAuthentication",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "The DisableLdapAuthentication method is used disable LDAP authentication and remove all LDAP configuration settings. This call will not remove any configured cluster admin accounts (user or group). However, those cluster admin accounts will no longer be able to log in." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "DisableLdapAuthenticationResult"
    },
    "objectGroup" : "LDAP"
  }, {
    "name" : "GetLoginSessionInfo",
    "release" : "Incubate",
    "documentation" : [ "GetLoginSessionInfo is used to return the period of time a log in authentication is valid for both log in shells and the TUI." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetLoginSessionInfoResult"
    },
    "objectGroup" : "LoginSession"
  }, {
    "name" : "SetLoginSessionInfo",
    "release" : "Incubate",
    "documentation" : [ "SetLoginSessionInfo is used to set the period of time a log in authentication is valid. After the log in period elapses without activity on the system the authentication will expire. New log in credentials will be required for continued access to the cluster once the timeout period has elapsed." ],
    "params" : [ {
      "name" : "timeout",
      "type" : "string",
      "documentation" : "Cluster authentication expiration period. Formatted in HH:mm:ss. For example: 01:30:00, 00:90:00, and 00:00:5400 can all be used to equal a 90 minute timeout period. Default is 30 minutes."
    } ],
    "returnInfo" : {
      "type" : "SetLoginSessionInfoResult"
    },
    "objectGroup" : "LoginSession"
  }, {
    "name" : "GetRemoteLoggingHosts",
    "release" : "Incubate",
    "since" : "8.0",
    "documentation" : [ "GetRemoteLoggingHosts is used to retrieve the current list of log servers." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetRemoteLoggingHostsResult"
    },
    "objectGroup" : "LoginSession"
  }, {
    "name" : "SetRemoteLoggingHosts",
    "release" : "Incubate",
    "since" : "8.0",
    "documentation" : [ "RemoteLoggingHosts is used to configure remote logging from the nodes in the storage cluster to a centralized log server or servers. Remote logging is performed over TCP using the default port 514. This API does not add to the existing logging hosts. Rather, it replaces what currently exists with new values specified by this API method. You can use the GetRemoteLoggingHosts to determine what the current logging hosts are and then use the SetRemoteLoggingHosts to set the desired list of current and new logging hosts." ],
    "params" : [ {
      "name" : "remoteHosts",
      "type" : [ "LoggingServer" ],
      "documentation" : "List of hosts to send log messages to."
    } ],
    "returnInfo" : {
      "type" : "SetRemoteLoggingHostsResult"
    },
    "objectGroup" : "LoginSession"
  }, {
    "name" : "ListNetworkInterfaces",
    "release" : "Incubate",
    "since" : "7.0",
    "documentation" : [ "The ListNetworkInterfaces API method is used to return information about each network interface on a node. The API method is intended for use on individual nodes. " ],
    "params" : [ {
      "name" : "force",
      "type" : "boolean",
      "documentation" : [ "This parameter is necessary when calling this API method against a cluster connection.", "Possible values:", "<strong>true:</strong> information about all network interfaces in the cluster will be returned.", "<strong>false:</strong> no information will be returned." ]
    } ],
    "returnInfo" : {
      "type" : "ListNetworkInterfacesResult"
    },
    "objectGroup" : "Network"
  }, {
    "name" : "ListClusterNetworkInterfaces",
    "release" : "Incubate",
    "since" : "7.0",
    "documentation" : [ "The ListClusterNetworkInterfaces API method is used to return information about each network interface on the nodes in a cluster. You must pass the force=true parameter when this method is called against a cluster. When used on the cluster, all interfaces on all nodes are listed." ],
    "params" : [ {
      "name" : "force",
      "type" : "boolean",
      "documentation" : [ "This parameter is necessary when calling this API method against a cluster connection.", "Possible values:", "<strong>true:</strong> information about all network interfaces in the cluster will be returned.", "<strong>false:</strong> no information will be returned." ]
    } ],
    "returnInfo" : {
      "type" : "ListClusterNetworkInterfacesResult"
    },
    "objectGroup" : "Network"
  }, {
    "name" : "ListActiveNodes",
    "release" : "Public",
    "documentation" : "ListActiveNodes returns the list of currently active nodes that are in the cluster.",
    "security" : {
      "groups" : [ "read" ]
    },
    "returnInfo" : {
      "type" : "ListActiveNodesResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "ListAllNodes",
    "release" : "Public",
    "documentation" : "ListAllNodes enables you to retrieve a list of active and pending nodes in the cluster.",
    "security" : {
      "groups" : [ "read", "remote" ]
    },
    "returnInfo" : {
      "type" : "ListAllNodesResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "ListPendingNodes",
    "release" : "Public",
    "documentation" : [ "Gets the list of pending nodes.", "Pending nodes are running and configured to join the cluster, but have not been added via the AddNodes method." ],
    "returnInfo" : {
      "type" : "ListPendingNodesResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "AddNodes",
    "release" : "Public",
    "params" : [ {
      "name" : "pendingNodes",
      "type" : [ "PendingNodeID" ],
      "documentation" : "List of PendingNodeIDs for the Nodes to be added. You can obtain the list of Pending Nodes via the ListPendingNodes method."
    } ],
    "documentation" : [ "AddNodes is used to add one or more new nodes to the cluster. When a node is not configured and starts up for the first time you are prompted to configure the node. Once a node is configured it is registered as a \"pending node\" with the cluster.", "<br/><br/>", "Adding a node to a cluster that has been set up for virtual networking will require a sufficient number of virtual storage IP addresses to allocate a virtual IP to the new node. If there are no virtual IP addresses available for the new node, the AddNode operation will not complete successfully. Use the \"ModifyVirtualNetwork\" method to add more storage IP addresses to your virtual network.", "<br/><br/>", "The software version on each node in a cluster must be compatible. Run the \"ListAllNodes\" API to see what versions of software are currently running on the cluster nodes. For an explanation of software version compatibility, see \"Node Versioning and Compatibility\" in the Element API guide.", "<br/><br/>", "Once a node has been added, the drives on the node are made available and can then be added via the \"AddDrives\" method to increase the storage capacity of the cluster.", "<br/><br/>", "<b>Note</b>: It may take several seconds after adding a new Node for it to start up and register the drives as being available." ],
    "returnInfo" : {
      "type" : "AddNodesResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "RemoveNodes",
    "release" : "Public",
    "params" : [ {
      "name" : "nodes",
      "type" : [ "NodeID" ],
      "documentation" : "List of NodeIDs for the nodes to be removed."
    } ],
    "documentation" : [ "RemoveNodes is used to remove one or more nodes that should no longer participate in the cluster. Before removing a node, all drives it contains must first be removed with \"RemoveDrives\" method. A node cannot be removed until the RemoveDrives process has completed and all data has been migrated away from the node.", "<br/><br/>", "Once removed, a node registers itself as a pending node and can be added again, or shut down which removes it from the \"Pending Node\" list." ],
    "returnInfo" : {
      "type" : "RemoveNodesResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "GetNetworkConfig",
    "release" : "Public",
    "params" : [ ],
    "documentation" : [ "The GetNetworkConfig API method is used to display the network configuration information for a node.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "returnInfo" : {
      "type" : "GetNetworkConfigResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "SetConfig",
    "release" : "Public",
    "documentation" : [ "The SetConfig API method is used to set all the configuration information for the node. This includes the same information available via calls to SetClusterConfig and SetNetworkConfig in one API method.", "<br/><br/>", "<b>Warning!</b> Changing the 'bond-mode' on a node can cause a temporary loss of network connectivity. Caution should be taken when using this method.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "config",
      "type" : "Config",
      "documentation" : "Objects that you want changed for the cluster interface settings."
    } ],
    "returnInfo" : {
      "type" : "SetConfigResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "SetNetworkConfig",
    "release" : "Public",
    "params" : [ {
      "name" : "network",
      "type" : "Network",
      "documentation" : "Objects that will be changed for the node network settings."
    } ],
    "documentation" : [ "The \"SetNetworkConfig\" method is used to set the network configuration for a node. To see the states in which these objects can be modified, see \"Network Object for 1G and 10G Interfaces\" on page 109 of the Element API. To display the current network settings for a node, run the \"GetNetworkConfig\" method.", "<br/><br/>", "<b>WARNING!</b> Changing the \"bond-mode\" on a node can cause a temporary loss of network connectivity. Caution should be taken when using this method.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "returnInfo" : {
      "type" : "SetNetworkConfigResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "GetConfig",
    "release" : "Public",
    "params" : [ ],
    "documentation" : [ "The GetConfig API method is used to retrieve all the configuration information for the node. This one API method includes the same information available in both \"GetClusterConfig\" and \"GetNetworkConfig\" methods.", "<br/><br/>", "<b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "returnInfo" : {
      "type" : "GetConfigResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "GetBootstrapConfig",
    "release" : "Incubate",
    "params" : [ ],
    "documentation" : [ "GetBootstrapConfig returns the cluster name and node name from the bootstrap configuration file. This API method should be performed on an individual node before it has been configured into a cluster. The resulting information from this method is used in the Cluster Configuration UI when the cluster is eventually created." ],
    "returnInfo" : {
      "type" : "GetBootstrapConfigResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "GetNodeStats",
    "release" : "Public",
    "params" : [ {
      "name" : "nodeID",
      "type" : "NodeID",
      "documentation" : "Specifies the node for which statistics are gathered."
    } ],
    "documentation" : [ "GetNodeStats is used to return the high-level activity measurements for a single node." ],
    "returnInfo" : {
      "type" : "GetNodeStatsResult",
      "adaptor" : {
        "name" : "GetNodeStats",
        "supports" : [ "csharp", "java", "python" ]
      }
    },
    "objectGroup" : "Node"
  }, {
    "name" : "ListNodeStats",
    "release" : "Public",
    "params" : [ ],
    "documentation" : [ "ListNodeStats is used to return the high-level activity measurements for all nodes in a cluster." ],
    "returnInfo" : {
      "type" : "ListNodeStatsResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "GetPendingOperation",
    "release" : "Incubate",
    "documentation" : [ "GetPendingOperation is used to detect an operation on a node that is currently in progress. This method can also be used to report back when an operation has completed.<br/>", "<br/>", "Note: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetPendingOperationResult"
    },
    "objectGroup" : "Node"
  }, {
    "name" : "ListClusterPairs",
    "release" : "Public",
    "params" : [ ],
    "documentation" : [ "ListClusterPairs is used to list all of the clusters a cluster is paired with.", "This method returns information about active and pending cluster pairings, such as statistics about the current pairing as well as the connectivity and latency (in milliseconds) of the cluster pairing." ],
    "returnInfo" : {
      "type" : "ListClusterPairsResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "ListActivePairedVolumes",
    "release" : "Public",
    "params" : [ ],
    "documentation" : [ "ListActivePairedVolumes is used to list all of the active volumes paired with a volume.", "Volumes listed in the return for this method include volumes with active and pending pairings." ],
    "returnInfo" : {
      "type" : "ListActivePairedVolumesResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "StartClusterPairing",
    "release" : "Public",
    "params" : [ ],
    "documentation" : [ "StartClusterPairing is used to create an encoded key from a cluster that is used to pair with another cluster.", "The key created from this API method is used in the \"CompleteClusterPairing\" API method to establish a cluster pairing.", "You can pair a cluster with a maximum of four other SolidFire clusters." ],
    "returnInfo" : {
      "type" : "StartClusterPairingResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "StartVolumePairing",
    "release" : "Public",
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The ID of the volume on which to start the pairing process."
    }, {
      "name" : "mode",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : [ "The mode of the volume on which to start the pairing process. The mode can only be set if the volume is the source volume.<br/>", "Possible values:<br/>", "<b>Async</b>: (default if no mode parameter specified) Writes are acknowledged when they complete locally. The cluster does not wait for writes to be replicated to the target cluster.<br/>", "<b>Sync</b>: Source acknowledges write when the data is stored locally and on the remote cluster.<br/>", "<b>SnapshotsOnly</b>: Only snapshots created on the source cluster will be replicated. Active writes from the source volume will not be replicated.<br/>" ]
    } ],
    "documentation" : [ "StartVolumePairing is used to create an encoded key from a volume that is used to pair with another volume.", "The key that this method creates is used in the \"CompleteVolumePairing\" API method to establish a volume pairing." ],
    "returnInfo" : {
      "type" : "StartVolumePairingResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "CompleteClusterPairing",
    "release" : "Public",
    "params" : [ {
      "name" : "clusterPairingKey",
      "type" : "string",
      "documentation" : "A string of characters that is returned from the \"StartClusterPairing\" API method."
    } ],
    "documentation" : [ "The CompleteClusterPairing method is the second step in the cluster pairing process.", "Use this method with the encoded key received from the \"StartClusterPairing\" API method to complete the cluster pairing process." ],
    "returnInfo" : {
      "type" : "CompleteClusterPairingResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "CompleteVolumePairing",
    "release" : "Public",
    "params" : [ {
      "name" : "volumePairingKey",
      "type" : "string",
      "documentation" : "The key returned from the \"StartVolumePairing\" API method."
    }, {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The ID of volume on which to complete the pairing process."
    } ],
    "documentation" : [ "CompleteVolumePairing is used to complete the pairing of two volumes." ],
    "returnInfo" : {
      "type" : "CompleteVolumePairingResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "RemoveClusterPair",
    "release" : "Public",
    "params" : [ {
      "name" : "clusterPairID",
      "type" : "integer",
      "documentation" : "Unique identifier used to pair two clusters."
    } ],
    "documentation" : [ "You can use the RemoveClusterPair method to close the open connections between two paired clusters.<br/>", "<b>Note</b>: Before you remove a cluster pair, you must first remove all volume pairing to the clusters with the \"RemoveVolumePair\" API method." ],
    "returnInfo" : {
      "type" : "RemoveClusterPairResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "RemoveVolumePair",
    "release" : "Public",
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "ID of the volume on which to stop the replication process."
    } ],
    "documentation" : [ "RemoveVolumePair is used to remove the remote pairing between two volumes.", "When the volume pairing information is removed, data is no longer replicated to or from the volume.", "This method should be run on both the source and target volumes that are paired together." ],
    "returnInfo" : {
      "type" : "RemoveVolumePairResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "ModifyVolumePair",
    "release" : "Public",
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "Identification number of the volume to be modified."
    }, {
      "name" : "pausedManual",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Valid values that can be entered:<br/>", "<b>true</b>: to pause volume replication.<br/>", "<b>false</b>: to restart volume replication.<br/>", "If no value is specified, no change in replication is performed." ]
    }, {
      "name" : "mode",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Volume replication mode.<br/>", "Possible values:<br/>", "<b>Async</b>: Writes are acknowledged when they complete locally. The cluster does not wait for writes to be replicated to the target cluster.<br/>", "<b>Sync</b>: The source acknowledges the write when the data is stored locally and on the remote cluster.<br/>", "<b>SnapshotsOnly</b>: Only snapshots created on the source cluster will be replicated. Active writes from the source volume are not replicated.<br/>" ]
    } ],
    "documentation" : [ "ModifyVolumePair is used to pause or restart replication between a pair of volumes." ],
    "returnInfo" : {
      "type" : "ModifyVolumePairResult"
    },
    "objectGroup" : "Pairing"
  }, {
    "name" : "ListProtocolEndpoints",
    "documentation" : [ "Gets protocol endpoints in the system", "If protocolEndpointIDs isn't specified all protocol endpoints", "are returned. Else the supplied protocolEndpointIDs are." ],
    "params" : [ {
      "name" : "protocolEndpointIDs",
      "type" : {
        "name" : [ "ProtocolEndpointID" ],
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "ListProtocolEndpointsResult"
    },
    "objectGroup" : "ProtocolEndpoints"
  }, {
    "name" : "ListServices",
    "documentation" : [ "List the services in the cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListServicesResult"
    },
    "objectGroup" : "Service"
  }, {
    "name" : "CreateSnapshot",
    "release" : "Public",
    "documentation" : [ "CreateSnapshot is used to create a point-in-time copy of a volume.", "A snapshot can be created from any volume or from an existing snapshot.", "<br/><br/>", "<b>Note</b>: Creating a snapshot is allowed if cluster fullness is at stage 2 or 3.", "Snapshots are not created when cluster fullness is at stage 4 or 5." ],
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "ID of the volume image from which to copy."
    }, {
      "name" : "snapshotID",
      "type" : {
        "name" : "SnapshotID",
        "optional" : true
      },
      "documentation" : [ "Unique ID of a snapshot from which the new snapshot is made.", "The snapshotID passed must be a snapshot on the given volume.", "If a SnapshotID is not provided, a snapshot is created from the volume's active branch." ]
    }, {
      "name" : "name",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "A name for the snapshot.", "If no name is provided, the date and time the snapshot was taken is used." ]
    }, {
      "name" : "enableRemoteReplication",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : "Identifies if snapshot is enabled for remote replication."
    }, {
      "name" : "retention",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : [ "The amount of time the snapshot will be retained. Enter in HH:mm:ss" ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "CreateSnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "DeleteSnapshot",
    "release" : "Public",
    "documentation" : [ "DeleteSnapshot is used to delete a snapshot.", "A snapshot that is currently the \"active\" snapshot cannot be deleted.", "You must rollback and make another snapshot \"active\" before the current snapshot can be deleted.", "To rollback a snapshot, use RollbackToSnapshot." ],
    "params" : [ {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : "The ID of the snapshot to delete."
    } ],
    "returnInfo" : {
      "type" : "DeleteSnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "ListSnapshots",
    "release" : "Public",
    "documentation" : [ "ListSnapshots is used to return the attributes of each snapshot taken on the volume." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "volumeID",
      "type" : {
        "name" : "VolumeID",
        "optional" : true
      },
      "documentation" : [ "The volume to list snapshots for.", "If not provided, all snapshots for all volumes are returned." ]
    } ],
    "returnInfo" : {
      "type" : "ListSnapshotsResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "ModifySnapshot",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "ModifySnapshot is used to change the attributes currently assigned to a snapshot.", "Use this API method to enable the snapshots created on the Read/Write (source) volume to be remotely replicated to a target SolidFire storage system." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : "ID of the snapshot."
    }, {
      "name" : "expirationTime",
      "type" : {
        "name" : "TimePoint",
        "optional" : true
      },
      "documentation" : "Use to set the time when the snapshot should be removed."
    }, {
      "name" : "enableRemoteReplication",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Use to enable the snapshot created to be replicated to a remote SolidFire cluster.", "Possible values:", "<br/><b>true</b>: the snapshot will be replicated to remote storage.", "<br/><b>false</b>: Default. No replication." ]
    } ],
    "returnInfo" : {
      "type" : "ModifySnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "RollbackToSnapshot",
    "release" : "Public",
    "documentation" : [ "RollbackToSnapshot is used to make an existing snapshot the \"active\" volume image. This method creates a new ", "snapshot from an existing snapshot. The new snapshot becomes \"active\" and the existing snapshot is preserved until ", "it is manually deleted. The previously \"active\" snapshot is deleted unless the parameter saveCurrentState is set with ", "a value of \"true.\"", "<b>Note</b>: Creating a snapshot is allowed if cluster fullness is at stage 2 or 3.", "Snapshots are not created when cluster fullness is at stage 4 or 5." ],
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : [ "VolumeID for the volume." ]
    }, {
      "name" : "snapshotID",
      "type" : "SnapshotID",
      "documentation" : [ "ID of a previously created snapshot on the given volume." ]
    }, {
      "name" : "saveCurrentState",
      "type" : "boolean",
      "documentation" : [ "<br/><b>true</b>: The previous active volume image is kept.", "<br/><b>false</b>: (default) The previous active volume image is deleted." ]
    }, {
      "name" : "name",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Name for the snapshot. If no name is given, then the name of the snapshot being rolled back to is used with ", "\"-copy\" appended to the end of the name." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "List of Name/Value pairs in JSON object format" ]
    } ],
    "returnInfo" : {
      "type" : "CreateSnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "CreateGroupSnapshot",
    "release" : "Public",
    "documentation" : [ "CreateGroupSnapshot is used to create a point-in-time copy of a group of volumes.", "The snapshot created can then be used later as a backup or rollback to ensure the data on the group of volumes is consistent for the point in time in which the snapshot was created.", "<br/><br/>", "<b>Note</b>: Creating a group snapshot is allowed if cluster fullness is at stage 2 or 3.", "Snapshots are not created when cluster fullness is at stage 4 or 5." ],
    "params" : [ {
      "name" : "volumes",
      "type" : [ "VolumeID" ],
      "documentation" : "Unique ID of the volume image from which to copy."
    }, {
      "name" : "name",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "A name for the snapshot.", "If no name is provided, the date and time the snapshot was taken is used." ]
    }, {
      "name" : "enableRemoteReplication",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : "Identifies if snapshot is enabled for remote replication."
    }, {
      "name" : "retention",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : [ "The amount of time the snapshot will be retained. Enter in HH:mm:ss" ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "CreateGroupSnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "DeleteGroupSnapshot",
    "release" : "Public",
    "documentation" : [ "DeleteGroupSnapshot is used to delete a group snapshot.", "The saveMembers parameter can be used to preserve all the snapshots that", "were made for the volumes in the group but the group association will be removed." ],
    "params" : [ {
      "name" : "groupSnapshotID",
      "type" : "GroupSnapshotID",
      "documentation" : "Unique ID of the group snapshot."
    }, {
      "name" : "saveMembers",
      "type" : "boolean",
      "documentation" : [ "<br/><b>true</b>: Snapshots are kept, but group association is removed.", "<br/><b>false</b>: The group and snapshots are deleted." ]
    } ],
    "returnInfo" : {
      "type" : "DeleteGroupSnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "ListGroupSnapshots",
    "release" : "Public",
    "documentation" : [ "ListGroupSnapshots is used to return information about all group snapshots that have been created." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "volumeID",
      "type" : {
        "name" : "VolumeID",
        "optional" : true
      },
      "documentation" : [ "An array of unique volume IDs to query.", "If this parameter is not specified, all group snapshots on the cluster will be included." ]
    } ],
    "returnInfo" : {
      "type" : "ListGroupSnapshotsResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "ModifyGroupSnapshot",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "ModifyGroupSnapshot is used to change the attributes currently assigned to a group snapshot." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "groupSnapshotID",
      "type" : "GroupSnapshotID",
      "documentation" : "ID of the snapshot."
    }, {
      "name" : "expirationTime",
      "type" : {
        "name" : "TimePoint",
        "optional" : true
      },
      "documentation" : "Use to set the time when the snapshot should be removed."
    }, {
      "name" : "enableRemoteReplication",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "Use to enable the snapshot created to be replicated to a remote SolidFire cluster.", "Possible values:", "<br/><b>true</b>: the snapshot will be replicated to remote storage.", "<br/><b>false</b>: Default. No replication." ]
    } ],
    "returnInfo" : {
      "type" : "ModifyGroupSnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "RollbackToGroupSnapshot",
    "release" : "Public",
    "since" : "7.0",
    "documentation" : [ "RollbackToGroupSnapshot is used to roll back each individual volume in a snapshot group to a copy of their individual snapshots.", "<br/><br/>", "<b>Note</b>: Creating a snapshot is allowed if cluster fullness is at stage 2 or 3.", "Snapshots are not created when cluster fullness is at stage 4 or 5." ],
    "params" : [ {
      "name" : "groupSnapshotID",
      "type" : "GroupSnapshotID",
      "documentation" : [ "Unique ID of the group snapshot." ]
    }, {
      "name" : "saveCurrentState",
      "type" : "boolean",
      "documentation" : [ "<br/><b>true</b>: The previous active volume image is kept.", "<br/><b>false</b>: (default) The previous active volume image is deleted." ]
    }, {
      "name" : "name",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Name for the snapshot. If no name is given, then the name of the snapshot being rolled back to is used with ", "\"-copy\" appended to the end of the name." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "List of Name/Value pairs in JSON object format" ]
    } ],
    "returnInfo" : {
      "type" : "CreateGroupSnapshotResult"
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "GetSchedule",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "GetSchedule is used to return information about a scheduled snapshot that has been created. You can see information about a specified schedule if there are many snapshot schedules in the system. You can include more than one schedule with this method by specifying additional scheduleIDs to the parameter." ],
    "params" : [ {
      "name" : "scheduleID",
      "type" : "ScheduleID",
      "documentation" : [ "Unique ID of the schedule or multiple schedules to display" ]
    } ],
    "returnInfo" : {
      "type" : "GetScheduleResult",
      "adaptor" : {
        "name" : "GetSchedule",
        "supports" : [ "csharp", "java", "python" ]
      }
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "ListSchedules",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "ListSchedule is used to return information about all scheduled snapshots that have been created." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListSchedulesResult",
      "adaptor" : {
        "name" : "ListSchedules",
        "supports" : [ "csharp", "java", "python" ]
      }
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "CreateSchedule",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "CreateSchedule is used to create a schedule that will autonomously make a snapshot of a volume at a defined interval.<br/>", "<br/>", "The snapshot created can be used later as a backup or rollback to ensure the data on a volume or group of volumes is consistent for the point in time in which the snapshot was created. <br/>", "<br/>", "<b>Note</b>: Creating a snapshot is allowed if cluster fullness is at stage 2 or 3. Snapshots are not created when cluster fullness is at stage 4 or 5." ],
    "params" : [ {
      "name" : "schedule",
      "type" : "Schedule",
      "documentation" : [ "The \"Schedule\" object will be used to create a new schedule.<br/>", "Do not set ScheduleID property, it will be ignored.<br/>", "Frequency property must be of type that inherits from Frequency. Valid types are:<br/>", "DaysOfMonthFrequency<br/>", "DaysOrWeekFrequency<br/>", "TimeIntervalFrequency" ]
    } ],
    "returnInfo" : {
      "type" : "CreateScheduleResult",
      "adaptor" : {
        "name" : "CreateSchedule",
        "supports" : [ "csharp", "java", "python" ]
      }
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "ModifySchedule",
    "release" : "Public",
    "since" : "8.0",
    "documentation" : [ "ModifySchedule is used to change the intervals at which a scheduled snapshot occurs. This allows for adjustment to the snapshot frequency and retention.<br/>" ],
    "params" : [ {
      "name" : "schedule",
      "type" : "Schedule",
      "documentation" : [ "The \"Schedule\" object will be used to modify an existing schedule.<br/>", "The ScheduleID property is required.<br/>", "Frequency property must be of type that inherits from Frequency. Valid types are:<br/>", "DaysOfMonthFrequency<br/>", "DaysOrWeekFrequency<br/>", "TimeIntervalFrequency" ]
    } ],
    "returnInfo" : {
      "type" : "ModifyScheduleResult",
      "adaptor" : {
        "name" : "ModifySchedule",
        "supports" : [ "csharp", "java", "python" ]
      }
    },
    "objectGroup" : "Snapshot"
  }, {
    "name" : "GetRawStats",
    "release" : "Public",
    "documentation" : [ "The GetRawStats call is used by SolidFire engineering to troubleshoot new features. The data returned from GetRawStats is not documented, it changes frequently, and is not guaranteed to be accurate. It is not recommended to ever use GetRawStats for collecting performance data or any other management integration with a SolidFire cluster.", "The data returned from GetRawStats changes frequently, and is not guaranteed to accurately show performance from the system. It is not recommended to ever use GetRawStats for collecting performance data or any other management integration with a SolidFire cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "Object"
    },
    "objectGroup" : "Statistics"
  }, {
    "name" : "GetCompleteStats",
    "release" : "Public",
    "documentation" : [ "The GetCompleteStats API method is used by SolidFire engineering to troubleshoot new features. The data returned from GetCompleteStats is not documented, changes frequently, and is not guaranteed to be accurate. It is not recommended to ever use GetCompleteStats for collecting performance data or any other management integration with a SolidFire cluster.", "The data returned from GetCompleteStats changes frequently, and is not guaranteed to accurately show performance from the system. It is not recommended to ever use GetCompleteStats for collecting performance data or any other management integration with a SolidFire cluster." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "Object"
    },
    "objectGroup" : "Statistics"
  }, {
    "name" : "CreateStorageContainer",
    "documentation" : "Creates a new VVols storage container.",
    "release" : "Public",
    "params" : [ {
      "name" : "name",
      "type" : "string",
      "documentation" : "Name of the storage container."
    }, {
      "name" : "callingHostID",
      "type" : {
        "name" : "UUID",
        "optional" : true
      },
      "documentation" : "Non-storagecontainer account that will become a storage container."
    }, {
      "name" : "initiatorSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : "The secret for CHAP authentication for the initiator"
    }, {
      "name" : "targetSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      },
      "documentation" : "The secret for CHAP authentication for the target"
    } ],
    "returnInfo" : {
      "type" : "CreateStorageContainerResult"
    },
    "since" : "9.0",
    "objectGroup" : "StorageContainers"
  }, {
    "name" : "DeleteStorageContainers",
    "documentation" : "Deletes a storage container from the system.",
    "release" : "Public",
    "params" : [ {
      "name" : "storageContainerIDs",
      "type" : [ "StorageContainerID" ],
      "documentation" : "list of storageContainerID of the storage container to delete."
    }, {
      "name" : "callingHostID",
      "type" : {
        "name" : "UUID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "DeleteStorageContainerResult"
    },
    "since" : "9.0",
    "objectGroup" : "StorageContainers"
  }, {
    "name" : "ModifyStorageContainer",
    "documentation" : "Modifies an existing storage container.",
    "release" : "Public",
    "params" : [ {
      "name" : "storageContainerID",
      "type" : {
        "name" : "UUID",
        "optional" : false
      }
    }, {
      "name" : "initiatorSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      }
    }, {
      "name" : "targetSecret",
      "type" : {
        "name" : "CHAPSecret",
        "optional" : true
      }
    }, {
      "name" : "callingHostID",
      "type" : {
        "name" : "UUID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "CreateStorageContainerResult"
    },
    "since" : "9.0",
    "objectGroup" : "StorageContainers"
  }, {
    "name" : "ListStorageContainers",
    "documentation" : "Gets information for all storage containers currently in the system.",
    "release" : "Public",
    "params" : [ {
      "name" : "storageContainerIDs",
      "type" : {
        "name" : [ "StorageContainerID" ],
        "optional" : true
      },
      "documentation" : "List of storage containers to get"
    }, {
      "name" : "callingHostID",
      "type" : {
        "name" : "UUID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "ListStorageContainersResult"
    },
    "since" : "9.0",
    "objectGroup" : "StorageContainers"
  }, {
    "name" : "GetStorageContainerEfficiency",
    "returnInfo" : {
      "type" : "GetStorageContainerEfficiencyResult"
    },
    "documentation" : "GetStorageContainerEfficiency enables you to retrieve efficiency information about a virtual volume storage container.",
    "release" : "Public",
    "params" : [ {
      "name" : "storageContainerID",
      "documentation" : "The ID of the storage container for which to retrieve efficiency information.",
      "type" : {
        "optional" : false,
        "name" : "UUID"
      }
    } ],
    "since" : "9.0",
    "objectGroup" : "StorageContainers"
  }, {
    "name" : "ListTests",
    "release" : "Public",
    "documentation" : [ "The ListTests API method is used to return the tests that are available to run on a node.", "<br/><b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListTestsResult"
    },
    "objectGroup" : "Test"
  }, {
    "name" : "ListUtilities",
    "release" : "Public",
    "documentation" : [ "The ListUtilities API method is used to return the tests that are available to run on a node.", "<br/><b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListUtilitiesResult"
    },
    "objectGroup" : "Test"
  }, {
    "name" : "TestConnectEnsemble",
    "release" : "Public",
    "documentation" : [ "The TestConnectEnsemble API method is used to verify connectivity with a sepcified database ensemble. By default it uses the ensemble for the cluster the node is associated with. Alternatively you can provide a different ensemble to test connectivity with.", "<br/><b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "ensemble",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "A comma-separated list of ensemble node CIPs for connectivity testing"
    } ],
    "returnInfo" : {
      "type" : "TestConnectEnsembleResult"
    },
    "objectGroup" : "Test"
  }, {
    "name" : "TestConnectMvip",
    "release" : "Public",
    "documentation" : [ "The TestConnectMvip API method is used to test the management connection to the cluster. The test pings the MVIP and executes a simple API method to verify connectivity.", "<br/><b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "mvip",
      "type" : {
        "name" : "IpAddress",
        "optional" : true
      },
      "documentation" : "Optionally, use to test the management connection of a different MVIP. This is not needed to test the connection to the target cluster."
    } ],
    "returnInfo" : {
      "type" : "TestConnectMvipResult"
    },
    "objectGroup" : "Test"
  }, {
    "name" : "TestConnectSvip",
    "release" : "Public",
    "documentation" : [ "The TestConnectSvip API method is used to test the storage connection to the cluster. The test pings the SVIP using ICMP packets and when successful connects as an iSCSI initiator.", "<br/><b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "svip",
      "type" : {
        "name" : "IpAddress",
        "optional" : true
      },
      "documentation" : "Optionally, use to test the storage connection of a different SVIP. This is not needed to test the connection to the target cluster."
    } ],
    "returnInfo" : {
      "type" : "TestConnectSvipResult"
    },
    "objectGroup" : "Test"
  }, {
    "name" : "TestPing",
    "release" : "Public",
    "documentation" : [ "The TestPing API method is used to validate the connection to all nodes in the cluster on both 1G and 10G interfaces using ICMP packets. The test uses the appropriate MTU sizes for each packet based on the MTU settings in the network configuration.", "<br/><b>Note</b>: This method is available only through the per-node API endpoint 5.0 or later." ],
    "params" : [ {
      "name" : "attempts",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "Specifies the number of times the system should repeat the test ping. Default is 5."
    }, {
      "name" : "hosts",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "Specify address or hostnames of devices to ping."
    }, {
      "name" : "totalTimeoutSec",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "Specifies the length of time the ping should wait for a system response before issuing the next ping attempt or ending the process."
    }, {
      "name" : "packetSize",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "Specify the number of bytes to send in the ICMP packet sent to each IP. Number be less than the maximum MTU specified in the network configuration."
    }, {
      "name" : "pingTimeoutMsec",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "documentation" : "Specify the number of milliseconds to wait for each individual ping response. Default is 500ms."
    } ],
    "returnInfo" : {
      "type" : "TestPingResult"
    },
    "objectGroup" : "Test"
  }, {
    "name" : "ListVirtualNetworks",
    "release" : "Public",
    "since" : "7.0",
    "documentation" : [ "ListVirtualNetworks is used to get a list of all the configured virtual networks for the cluster. This method can be used to verify the virtual network settings in the cluster.", "", "This method does not require any parameters to be passed. But, one or more VirtualNetworkIDs or VirtualNetworkTags can be passed in order to filter the results." ],
    "params" : [ {
      "name" : "virtualNetworkID",
      "type" : {
        "name" : "VirtualNetworkID",
        "optional" : true
      },
      "documentation" : "Network ID to filter the list for a single virtual network"
    }, {
      "name" : "virtualNetworkTag",
      "type" : {
        "name" : "VirtualNetworkTag",
        "optional" : true
      },
      "documentation" : "Network Tag to filter the list for a single virtual network"
    }, {
      "name" : "virtualNetworkIDs",
      "type" : {
        "name" : [ "VirtualNetworkID" ],
        "optional" : true
      },
      "documentation" : "NetworkIDs to include in the list."
    }, {
      "name" : "virtualNetworkTags",
      "type" : {
        "name" : [ "VirtualNetworkTag" ],
        "optional" : true
      },
      "documentation" : "Network Tags to include in the list."
    } ],
    "returnInfo" : {
      "type" : "ListVirtualNetworksResult"
    },
    "objectGroup" : "VirtualNetwork"
  }, {
    "name" : "AddVirtualNetwork",
    "release" : "Public",
    "since" : "7.0",
    "documentation" : [ "AddVirtualNetwork is used to add a new virtual network to a cluster configuration. When a virtual network is added, an interface for each node is created and each will require a virtual network IP address. The number of IP addresses specified as a parameter for this API method must be equal to or greater than the number of nodes in the cluster. Virtual network addresses are bulk provisioned by SolidFire and assigned to individual nodes automatically. Virtual network addresses do not need to be assigned to nodes manually.", "<br/><br/>", "<b>Note:</b> The AddVirtualNetwork method is used only to create a new virtual network. If you want to make changes to a virtual network, please use the ModifyVirtualNetwork method." ],
    "params" : [ {
      "name" : "virtualNetworkTag",
      "type" : "VirtualNetworkTag",
      "documentation" : "A unique virtual network (VLAN) tag. Supported values are 1 to 4095 (the number zero (0) is not supported)."
    }, {
      "name" : "name",
      "type" : "Name",
      "documentation" : "User defined name for the new virtual network."
    }, {
      "name" : "addressBlocks",
      "type" : [ "AddressBlock" ],
      "documentation" : [ "Unique Range of IP addresses to include in the virtual network.", "Attributes for this parameter are:", "<br/><b>start:</b> start of the IP address range. (String)", "<br/><b>size:</b> numbre of IP addresses to include in the block. (Integer)" ]
    }, {
      "name" : "netmask",
      "type" : "string",
      "documentation" : [ "Unique netmask for the virtual network being created." ]
    }, {
      "name" : "svip",
      "type" : "IpAddress",
      "documentation" : [ "Unique storage IP address for the virtual network being created." ]
    }, {
      "name" : "gateway",
      "type" : {
        "name" : "IpAddress",
        "optional" : true
      },
      "since" : "9.0",
      "documentation" : [ "" ]
    }, {
      "name" : "namespace",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "since" : "9.0",
      "documentation" : [ "" ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "List of Name/Value pairs in JSON object format." ]
    } ],
    "returnInfo" : {
      "type" : "AddVirtualNetworkResult"
    },
    "objectGroup" : "VirtualNetwork"
  }, {
    "name" : "ModifyVirtualNetwork",
    "release" : "Public",
    "since" : "7.0",
    "documentation" : [ "ModifyVirtualNetwork is used to change various attributes of a VirtualNetwork object. This method can be used to add or remove address blocks, change the netmask IP, or modify the name or description of the virtual network.", "<br/><br/>", "<b>Note:</b> This method requires either the VirtualNetworkID or the VirtualNetworkTag as a parameter, but not both." ],
    "params" : [ {
      "name" : "virtualNetworkID",
      "type" : {
        "name" : "VirtualNetworkID",
        "optional" : true
      },
      "documentation" : "Unique identifier of the virtual network to modify. This is the virtual network ID assigned by the SolidFire cluster."
    }, {
      "name" : "virtualNetworkTag",
      "type" : {
        "name" : "VirtualNetworkTag",
        "optional" : true
      },
      "documentation" : "Network Tag that identifies the virtual network to modify."
    }, {
      "name" : "name",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : "New name for the virtual network."
    }, {
      "name" : "addressBlocks",
      "type" : {
        "name" : [ "AddressBlock" ],
        "optional" : true
      },
      "documentation" : [ "New addressBlock to set for this Virtual Network object. This may contain new address blocks to add to the existing object or it may omit unused address blocks that need to be removed. Alternatively, existing address blocks may be extended or reduced in size. The size of the starting addressBlocks for a Virtual Network object can only be increased, and can never be decreased.", "Attributes for this parameter are:", "<br/><b>start:</b> start of the IP address range. (String)", "<br/><b>size:</b> numbre of IP addresses to include in the block. (Integer)" ]
    }, {
      "name" : "netmask",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "New netmask for this virtual network." ]
    }, {
      "name" : "svip",
      "type" : {
        "name" : "IpAddress",
        "optional" : true
      },
      "documentation" : [ "The storage virtual IP address for this virtual network. The svip for Virtual Network cannot be changed. A new Virtual Network must be created in order to use a different svip address." ]
    }, {
      "name" : "gateway",
      "type" : {
        "name" : "IpAddress",
        "optional" : true
      },
      "since" : "9.0",
      "documentation" : [ "" ]
    }, {
      "name" : "namespace",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "since" : "9.0",
      "documentation" : [ "" ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "A new list of Name/Value pairs in JSON object format." ]
    } ],
    "returnInfo" : {
      "type" : "AddVirtualNetworkResult"
    },
    "objectGroup" : "VirtualNetwork"
  }, {
    "name" : "RemoveVirtualNetwork",
    "release" : "Public",
    "since" : "7.0",
    "documentation" : [ "RemoveVirtualNetwork is used to remove a previously added virtual network.", "<br/><br/>", "<b>Note:</b> This method requires either the VirtualNetworkID of the VirtualNetworkTag as a parameter, but not both." ],
    "params" : [ {
      "name" : "virtualNetworkID",
      "type" : {
        "name" : "VirtualNetworkID",
        "optional" : true
      },
      "documentation" : "Network ID that identifies the virtual network to remove."
    }, {
      "name" : "virtualNetworkTag",
      "type" : {
        "name" : "VirtualNetworkTag",
        "optional" : true
      },
      "documentation" : "Network Tag that identifies the virtual network to remove."
    } ],
    "returnInfo" : {
      "type" : "RemoveVirtualNetworkResult"
    },
    "objectGroup" : "VirtualNetwork"
  }, {
    "name" : "CreateVirtualVolume",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "CreateVirtualVolume is used to create a new (empty) Virtual Volume on the cluster.", "When the volume is created successfully it is available for connection via PE." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "name",
      "type" : "Name",
      "documentation" : [ "Name of the Virtual Volume.", "Not required to be unique, but it is recommended.", "May be 1 to 64 characters in length." ]
    }, {
      "name" : "storageContainerID",
      "type" : "StorageContainerID",
      "documentation" : "UUID for the Storage Container of this volume."
    }, {
      "name" : "virtualVolumeType",
      "type" : "string",
      "documentation" : "VMW_TYPE value for this volume."
    }, {
      "name" : "totalSize",
      "type" : "uint64",
      "documentation" : "Total size of the volume, in bytes. Size is rounded up to the nearest 1MB size."
    }, {
      "name" : "qos",
      "type" : {
        "name" : "QoS",
        "optional" : true
      },
      "documentation" : [ "Initial quality of service settings for this volume.", "<br/><br/>", "Volumes created without specified QoS values are created with the default values for QoS.", "Default values for a volume can be found by running the GetDefaultQoS method." ]
    }, {
      "name" : "metadata",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "List of name/value pairs to save in the volume's metadata." ]
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeSyncResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "DeleteVirtualVolumes",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "DeleteVirtualVolume marks an active volume for deletion.", "It is purged (permanently deleted) after the cleanup interval elapses.", "After making a request to delete a volume, any active iSCSI connections to the volume is immediately terminated and no further connections are allowed while the volume is in this state.", "It is not returned in target discovery requests.", "<br/><br/>", "Any snapshots of a volume that has been marked to delete are not affected.", "Snapshots are kept until the volume is purged from the system.", "<br/><br/>", "If a volume is marked for deletion, and it has a bulk volume read or bulk volume write operation in progress, the bulk volume operation is stopped.", "<br/><br/>", "If the volume you delete is paired with a volume, replication between the paired volumes is suspended and no data is transferred to it or from it while in a deleted state.", "The remote volume the deleted volume was paired with enters into a PausedMisconfigured state and data is no longer sent to it or from the deleted volume.", "Until the deleted volume is purged, it can be restored and data transfers resumes.", "If the deleted volume gets purged from the system, the volume it was paired with enters into a StoppedMisconfigured state and the volume pairing status is removed.", "The purged volume becomes permanently unavailable." ],
    "params" : [ {
      "name" : "virtualVolumes",
      "type" : [ "VvolVolumeID" ],
      "documentation" : "The UUID of the volume to delete."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "security" : {
      "groups" : [ "write" ]
    },
    "returnInfo" : {
      "type" : "VirtualVolumeNullResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ListVirtualVolumes",
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "startVirtualVolumeID",
      "type" : {
        "name" : "VvolVolumeID",
        "optional" : true
      },
      "documentation" : [ "The ID of the first Virtual Volume to list.", "This can be useful for paging results.", "By default, this lists all Virtual Volumes." ]
    }, {
      "name" : "limit",
      "type" : {
        "name" : "size_t",
        "optional" : true
      },
      "default" : 10000,
      "documentation" : [ "The maximum number of volumes to return from the API." ]
    }, {
      "name" : "virtualVolumeIDs",
      "type" : {
        "name" : [ "VvolVolumeID" ],
        "optional" : true
      },
      "documentation" : [ "List of Virtual Volume IDs to get." ]
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "ListVirtualVolumesResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ModifyVirtualVolume",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "ModifyVirtualVolume is used to modify settings on an existing virtual volume." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "VvolVolumeID for the volume to be modified."
    }, {
      "name" : "qos",
      "type" : {
        "name" : "QoS",
        "optional" : true
      },
      "documentation" : "New quality of service settings for this volume."
    }, {
      "name" : "totalSize",
      "type" : {
        "name" : "uint64",
        "optional" : true
      },
      "documentation" : [ "New size of the volume in bytes.", "Size is rounded up to the nearest 1MiB size.", "This parameter can only be used to *increase* the size of a volume." ]
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeNullResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ModifyVirtualVolumeMetadata",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "ModifyVirtualVolumeMetadata is used to selectively modify the VVol metadata." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "VvolVolumeID for the volume to be modified."
    }, {
      "name" : "metadata",
      "type" : "Attributes"
    }, {
      "name" : "removeKeys",
      "type" : [ "string" ]
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeNullResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "QueryVirtualVolumeMetadata",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "QueryVirtualVolumeMetadata returns a list of VVols matching a metadata query." ],
    "params" : [ {
      "name" : "queryConstraints",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      }
    }, {
      "name" : "wildcardConstraints",
      "type" : {
        "name" : [ "string" ],
        "optional" : true
      }
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "QueryVirtualVolumeMetadataResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "CloneVirtualVolume",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "CloneVirtualVolume is used to execute a VMware Virtual Volume clone." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to clone."
    }, {
      "name" : "name",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : "The name for the newly-created volume."
    }, {
      "name" : "qos",
      "type" : {
        "name" : "QoS",
        "optional" : true
      },
      "documentation" : "New quality of service settings for this volume."
    }, {
      "name" : "metadata",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      }
    }, {
      "name" : "newContainerID",
      "type" : {
        "name" : "StorageContainerID",
        "optional" : true
      }
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeAsyncResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "FastCloneVirtualVolume",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "FastCloneVirtualVolume is used to execute a VMware Virtual Volume fast clone." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to clone."
    }, {
      "name" : "name",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : "The name for the newly-created volume."
    }, {
      "name" : "qos",
      "type" : {
        "name" : "QoS",
        "optional" : true
      },
      "documentation" : "New quality of service settings for this volume."
    }, {
      "name" : "metadata",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      }
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeAsyncResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "PrepareVirtualSnapshot",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "PrepareVirtualSnapshot is used to set up VMware Virtual Volume snapshot." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to clone."
    }, {
      "name" : "name",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : "The name for the newly-created volume."
    }, {
      "name" : "writableSnapshot",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : "Will the snapshot be writable?"
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "PrepareVirtualSnapshotResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "SnapshotVirtualVolume",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "SnapshotVirtualVolume is used to take a VMware Virtual Volume snapshot." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to clone."
    }, {
      "name" : "timeout",
      "type" : "size_t",
      "documentation" : "Number of seconds to complete or fail."
    }, {
      "name" : "metadata",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      }
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "SnapshotVirtualVolumeResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "RollbackVirtualVolume",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "RollbackVirtualVolume is used to restore a VMware Virtual Volume snapshot." ],
    "params" : [ {
      "name" : "srcVirtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume snapshot."
    }, {
      "name" : "dstVirtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to restore to."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeAsyncResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "GetVirtualVolumeAllocatedBitmap",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "GetVirtualVolumeAllocatedBitmap returns a b64-encoded block of data ", "representing a bitmap where non-zero bits indicate the allocation of a ", "segment (LBA range) of the volume." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume."
    }, {
      "name" : "segmentStart",
      "type" : "uint64",
      "documentation" : "Byte offset."
    }, {
      "name" : "segmentLength",
      "type" : "uint64",
      "documentation" : "Byte length adjusted to end on a chunk boundary."
    }, {
      "name" : "chunkSize",
      "type" : "uint64",
      "documentation" : "Number of bytes represented by one bit in the bitmap."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeBitmapResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "GetVirtualVolumeUnsharedBitmap",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "GetVirtualVolumeAllocatedBitmap returns a b64-encoded block of data ", "representing a bitmap where non-zero bits indicate that data is not the same ", "between two volumes for a common segment (LBA range) of the volumes." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume."
    }, {
      "name" : "baseVirtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to compare against."
    }, {
      "name" : "segmentStart",
      "type" : "uint64",
      "documentation" : "Byte offset."
    }, {
      "name" : "segmentLength",
      "type" : "uint64",
      "documentation" : "Byte length adjusted to end on a chunk boundary."
    }, {
      "name" : "chunkSize",
      "type" : "uint32",
      "documentation" : "Number of bytes represented by one bit in the bitmap."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeBitmapResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "GetVirtualVolumeUnsharedChunks",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "GetVirtualVolumeAllocatedBitmap scans a VVol segment and returns the number of ", "chunks not shared between two volumes. This call will return results in less ", "than 30 seconds. If the specified VVol and the base VVil are not related, an ", "error is thrown. If the offset/length combination is invalid or out fo range ", "an error is thrown." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume."
    }, {
      "name" : "baseVirtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to compare against."
    }, {
      "name" : "segmentStart",
      "type" : "uint64",
      "documentation" : "Start Byte offset."
    }, {
      "name" : "segmentLength",
      "type" : "uint64",
      "documentation" : "Length of the scan segment in bytes."
    }, {
      "name" : "chunkSize",
      "type" : "uint32",
      "documentation" : "Number of bytes represented by one bit in the bitmap."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeUnsharedChunkResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "CopyDiffsToVirtualVolume",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "CopyDiffsToVirtualVolume is a three-way merge function." ],
    "params" : [ {
      "name" : "virtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the snapshot Virtual Volume."
    }, {
      "name" : "baseVirtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the base Virtual Volume."
    }, {
      "name" : "dstVirtualVolumeID",
      "type" : "VvolVolumeID",
      "documentation" : "The ID of the Virtual Volume to be overwritten."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeAsyncResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "CreateVirtualVolumeHost",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "CreateVirtualVolumeHost creates a new ESX host." ],
    "params" : [ {
      "name" : "virtualVolumeHostID",
      "type" : "VvolHostID",
      "documentation" : "The GUID of the ESX host."
    }, {
      "name" : "clusterID",
      "type" : "VvolClusterID",
      "documentation" : "The GUID of the ESX Cluster."
    }, {
      "name" : "initiatorNames",
      "type" : {
        "name" : [ "string" ],
        "optional" : true
      }
    }, {
      "name" : "visibleProtocolEndpointIDs",
      "type" : {
        "name" : [ "ProtocolEndpointID" ],
        "optional" : true
      },
      "documentation" : "A list of PEs the host is aware of."
    }, {
      "name" : "hostAddress",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "IP or DNS name for the host."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeNullResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ListVirtualVolumeHosts",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "ListVirtualVolumeHosts returns a list of known ESX hosts." ],
    "params" : [ {
      "name" : "virtualVolumeHostIDs",
      "type" : {
        "name" : [ "VvolHostID" ],
        "optional" : true
      }
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "ListVirtualVolumeHostsResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ModifyVirtualVolumeHost",
    "documentation" : [ "ModifyVirtualVolumeHost changes an existing ESX host." ],
    "params" : [ {
      "name" : "virtualVolumeHostID",
      "type" : "VvolHostID",
      "documentation" : "The GUID of the ESX host."
    }, {
      "name" : "clusterID",
      "type" : {
        "name" : "VvolClusterID",
        "optional" : true
      },
      "documentation" : "The GUID of the ESX Cluster."
    }, {
      "name" : "visibleProtocolEndpointIDs",
      "type" : {
        "name" : [ "ProtocolEndpointID" ],
        "optional" : true
      },
      "documentation" : "A list of PEs the host is aware of."
    }, {
      "name" : "initiatorNames",
      "type" : {
        "name" : [ "string" ],
        "optional" : true
      },
      "documentation" : "List of iSCSI initiator IQNs for the host."
    }, {
      "name" : "hostAddress",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "IP or DNS name for the host."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeNullResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "GetVirtualVolumeTaskUpdate",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "GetVirtualVolumeTaskUpdate checks the status of a VVol Async Task." ],
    "params" : [ {
      "name" : "virtualVolumeTaskID",
      "type" : "VvolTaskID",
      "documentation" : "The UUID of the VVol Task."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeTaskResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ListVirtualVolumeTasks",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "ListVirtualVolumeTasks returns a list of VVol Async Tasks." ],
    "params" : [ {
      "name" : "virtualVolumeTaskIDs",
      "type" : {
        "name" : [ "VvolTaskID" ],
        "optional" : true
      }
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "ListVirtualVolumeTasksResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "CancelVirtualVolumeTask",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "CancelVirtualVolumeTask attempts to cancel the VVol Async Task." ],
    "params" : [ {
      "name" : "virtualVolumeTaskID",
      "type" : "VvolTaskID",
      "documentation" : "The UUID of the VVol Task to cancel."
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeNullResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "BindVirtualVolumes",
    "documentation" : [ "BindVirtualVolume binds a VVol with a Host." ],
    "params" : [ {
      "name" : "virtualVolumeIDs",
      "type" : [ "VvolVolumeID" ],
      "documentation" : "The UUID of the VVol to bind."
    }, {
      "name" : "virtualVolumeHostID",
      "type" : "VvolHostID",
      "documentation" : "The UUID of the ESX host."
    }, {
      "name" : "bindContext",
      "type" : "VvolBindContext",
      "documentation" : "Normal or Start?"
    } ],
    "returnInfo" : {
      "type" : "ListVirtualVolumeBindingsResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ListVirtualVolumeBindings",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "ListVirtualVolumeBindings returns a list of VVol bindings." ],
    "params" : [ {
      "name" : "virtualVolumeBindingIDs",
      "type" : {
        "name" : [ "VvolBindingID" ],
        "optional" : true
      }
    }, {
      "name" : "callingVirtualVolumeHostID",
      "type" : {
        "name" : "VvolHostID",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "ListVirtualVolumeBindingsResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "UnbindVirtualVolumes",
    "documentation" : [ "UnbindGetVirtualVolume removes the VVol <-> Host binding." ],
    "params" : [ {
      "name" : "unbindContext",
      "type" : "VvolUnbindContext",
      "documentation" : "Normal, Start, or End?"
    }, {
      "name" : "virtualVolumeHostID",
      "type" : "VvolHostID"
    }, {
      "name" : "unbindArgs",
      "type" : [ "UnbindArguments" ]
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeUnbindResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "ModifyVasaProviderInfo",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "Update the Vasa Provider info" ],
    "params" : [ {
      "name" : "keystore",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : "Signed SSL certificate for the Vasa Provider"
    }, {
      "name" : "vasaProviderID",
      "type" : {
        "name" : "VasaProviderID",
        "optional" : true
      },
      "documentation" : "UUID identifying the vasa provider"
    }, {
      "name" : "options",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "VirtualVolumeNullResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "GetVasaProviderInfo",
    "since" : "9.0",
    "release" : "Private",
    "documentation" : [ "Gets the Vasa Provider info" ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "VasaProviderInfoResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "GetVirtualVolumeCount",
    "since" : "9.0",
    "release" : "Public",
    "documentation" : [ "Enables retrieval of the number of virtual volumes currently in the system." ],
    "params" : [ ],
    "returnInfo" : {
      "type" : "GetVirtualVolumeCountResult"
    },
    "objectGroup" : "VirtualVolume"
  }, {
    "name" : "CloneVolume",
    "release" : "Public",
    "documentation" : [ "CloneVolume is used to create a copy of the volume.", "This method is asynchronous and may take a variable amount of time to complete.", "The cloning process begins immediately when the CloneVolume request is made and is representative of the state of the volume when the API method is issued.", "GetAsyncResults can be used to determine when the cloning process is complete and the new volume is available for connections.", "ListSyncJobs can be used to see the progress of creating the clone.", "<br/><br/>", "<b>Note</b>: The initial attributes and quality of service settings for the volume are inherited from the volume being cloned.", "If different settings are required, they can be changed via ModifyVolume.", "<br/><br/>", "<b>Note</b>: Cloned volumes do not inherit volume access group memberships from the source volume." ],
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The ID of the volume to clone."
    }, {
      "name" : "name",
      "type" : "Name",
      "documentation" : "The name for the newly-created volume."
    }, {
      "name" : "newAccountID",
      "type" : {
        "name" : "AccountID",
        "optional" : true
      },
      "documentation" : [ "AccountID for the owner of the new volume.", "If unspecified, the AccountID of the owner of the volume being cloned is used." ]
    }, {
      "name" : "newSize",
      "type" : {
        "name" : "uint64",
        "optional" : true
      },
      "documentation" : [ "New size of the volume, in bytes.", "May be greater or less than the size of the volume being cloned.", "If unspecified, the clone's volume size will be the same as the source volume.", "Size is rounded up to the nearest 1 MiB." ]
    }, {
      "name" : "access",
      "type" : {
        "name" : "VolumeAccess",
        "optional" : true
      },
      "documentation" : [ "Access settings for the new volume.", "<br/><b>readOnly</b>: Only read operations are allowed.", "<br/><b>readWrite</b>: Reads and writes are allowed.", "<br/><b>locked</b>: No reads or writes are allowed.", "<br/><b>replicationTarget</b>: Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked.", "<br/><br/>", "If unspecified, the access settings of the clone will be the same as the source." ]
    }, {
      "name" : "snapshotID",
      "type" : {
        "name" : "SnapshotID",
        "optional" : true
      },
      "documentation" : [ "ID of the snapshot to use as the source of the clone.", "If unspecified, the clone will be created with a snapshot of the active volume." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "CloneVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "CloneMultipleVolumes",
    "release" : "Public",
    "documentation" : [ "CloneMultipleVolumes is used to create a clone of a group of specified volumes. A consistent set of characteristics can be assigned to a group of multiple volume when they are cloned together.", "If groupSnapshotID is going to be used to clone the volumes in a group snapshot, the group snapshot must be created first using the CreateGroupSnapshot API method or the SolidFire Element WebUI. Using groupSnapshotID is optional when cloning multiple volumes.", "<br/><br/>", "<b>Note</b>: Cloning multiple volumes is allowed if cluster fullness is at stage 2 or 3. Clones are not created when cluster fullness is at stage 4 or 5." ],
    "params" : [ {
      "name" : "volumes",
      "type" : [ "CloneMultipleVolumeParams" ],
      "documentation" : "Array of Unique ID for each volume to include in the clone with optional parameters. If optional parameters are not specified, the values will be inherited from the source volumes."
    }, {
      "name" : "access",
      "type" : {
        "name" : "VolumeAccess",
        "optional" : true
      },
      "documentation" : [ "New default access method for the new volumes if not overridden by information passed in the volumes array.", "<br/><b>readOnly</b>: Only read operations are allowed.", "<br/><b>readWrite</b>: Reads and writes are allowed.", "<br/><b>locked</b>: No reads or writes are allowed.", "<br/><b>replicationTarget</b>: Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked.", "<br/><br/>", "If unspecified, the access settings of the clone will be the same as the source." ]
    }, {
      "name" : "groupSnapshotID",
      "type" : {
        "name" : "SnapshotID",
        "optional" : true
      },
      "documentation" : "ID of the group snapshot to use as a basis for the clone."
    }, {
      "name" : "newAccountID",
      "type" : {
        "name" : "AccountID",
        "optional" : true
      },
      "documentation" : "New account ID for the volumes if not overridden by information passed in the volumes array."
    } ],
    "returnInfo" : {
      "type" : "CloneMultipleVolumesResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "CopyVolume",
    "since" : "9.0",
    "documentation" : "Copies one volume to another.",
    "release" : "Incubate",
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "Source volume to copy."
    }, {
      "name" : "dstVolumeID",
      "type" : "VolumeID",
      "documentation" : "Destination volume for the copy."
    }, {
      "name" : "snapshotID",
      "type" : {
        "name" : "SnapshotID",
        "optional" : true
      },
      "documentation" : "Snapshot ID of the source volume to create the copy from."
    } ],
    "returnInfo" : {
      "type" : "CopyVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "CancelClone",
    "since" : "9.0",
    "release" : "Incubate",
    "documentation" : "Cancels a currently running clone operation.",
    "params" : [ {
      "name" : "cloneID",
      "type" : "CloneID"
    } ],
    "returnInfo" : {
      "type" : "CancelCloneResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "CreateVolume",
    "release" : "Public",
    "documentation" : [ "CreateVolume is used to create a new (empty) volume on the cluster.", "When the volume is created successfully it is available for connection via iSCSI." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "name",
      "type" : "Name",
      "documentation" : [ "Name of the volume.", "Not required to be unique, but it is recommended.", "May be 1 to 64 characters in length." ]
    }, {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "AccountID for the owner of this volume."
    }, {
      "name" : "totalSize",
      "type" : "uint64",
      "documentation" : "Total size of the volume, in bytes. Size is rounded up to the nearest 1MB size."
    }, {
      "name" : "enable512e",
      "type" : "boolean",
      "default" : false,
      "documentation" : "Should the volume provides 512-byte sector emulation?"
    }, {
      "name" : "qos",
      "type" : {
        "name" : "QoS",
        "optional" : true
      },
      "documentation" : [ "Initial quality of service settings for this volume.", "<br/><br/>", "Volumes created without specified QoS values are created with the default values for QoS.", "Default values for a volume can be found by running the GetDefaultQoS method." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "CreateVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "DeleteVolume",
    "release" : "Public",
    "documentation" : [ "DeleteVolume marks an active volume for deletion.", "It is purged (permanently deleted) after the cleanup interval elapses.", "After making a request to delete a volume, any active iSCSI connections to the volume is immediately terminated and no further connections are allowed while the volume is in this state.", "It is not returned in target discovery requests.", "<br/><br/>", "Any snapshots of a volume that has been marked to delete are not affected.", "Snapshots are kept until the volume is purged from the system.", "<br/><br/>", "If a volume is marked for deletion, and it has a bulk volume read or bulk volume write operation in progress, the bulk volume operation is stopped.", "<br/><br/>", "If the volume you delete is paired with a volume, replication between the paired volumes is suspended and no data is transferred to it or from it while in a deleted state.", "The remote volume the deleted volume was paired with enters into a PausedMisconfigured state and data is no longer sent to it or from the deleted volume.", "Until the deleted volume is purged, it can be restored and data transfers resumes.", "If the deleted volume gets purged from the system, the volume it was paired with enters into a StoppedMisconfigured state and the volume pairing status is removed.", "The purged volume becomes permanently unavailable." ],
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The ID of the volume to delete."
    } ],
    "security" : {
      "groups" : [ "write" ]
    },
    "returnInfo" : {
      "type" : "DeleteVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "GetDefaultQoS",
    "release" : "Incubate",
    "documentation" : [ "GetDefaultQoS is used to retrieve the default QoS values that are set for a volume if QoS is not supplied." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ ],
    "returnInfo" : {
      "type" : "VolumeQOS"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "GetVolumeStats",
    "release" : "Public",
    "documentation" : [ "GetVolumeStats is used to retrieve high-level activity measurements for a single volume.", "Values are cumulative from the creation of the volume." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "Specifies the volume for which statistics is gathered."
    } ],
    "returnInfo" : {
      "type" : "GetVolumeStatsResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "GetVolumeEfficiency",
    "release" : "Public",
    "documentation" : [ "GetVolumeEfficiency is used to retrieve information about a volume.", "Only the volume given as a parameter in this API method is used to compute the capacity." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "Specifies the volume for which capacity is computed."
    }, {
      "name" : "force",
      "type" : {
        "name" : "boolean",
        "optional" : true
      }
    } ],
    "returnInfo" : {
      "type" : "GetVolumeEfficiencyResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListBulkVolumeJobs",
    "release" : "Public",
    "documentation" : [ "ListBulkVolumeJobs is used to return information about each bulk volume read or write operation that is occurring in the system." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "returnInfo" : {
      "type" : "ListBulkVolumeJobsResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListActiveVolumes",
    "release" : "Public",
    "documentation" : [ "ListActiveVolumes is used to return the list of active volumes currently in the system.", "The list of volumes is returned sorted in VolumeID order and can be returned in multiple parts (pages)." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "startVolumeID",
      "type" : {
        "name" : "VolumeID",
        "optional" : true
      },
      "documentation" : [ "The ID of the first volume to list.", "This can be useful for paging results.", "By default, this starts at the lowest VolumeID." ]
    }, {
      "name" : "limit",
      "type" : {
        "name" : "size_t",
        "optional" : true
      },
      "default" : 10000,
      "documentation" : [ "The maximum number of volumes to return from the API." ]
    } ],
    "returnInfo" : {
      "type" : "ListActiveVolumesResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListDeletedVolumes",
    "release" : "Public",
    "documentation" : [ "ListDeletedVolumes is used to return the entire list of volumes that have been marked for deletion and is purged from the system." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListDeletedVolumesResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListISCSISessions",
    "release" : "Public",
    "documentation" : "ListISCSISessions is used to return iSCSI connection information for volumes in the cluster.",
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListISCSISessionsResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListVolumes",
    "release" : "Public",
    "documentation" : [ "The ListVolumes method is used to return a list of volumes that are in a cluster.", "You can specify the volumes you want to return in the list by using the available parameters." ],
    "since" : "8.0",
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "startVolumeID",
      "type" : {
        "name" : "VolumeID",
        "optional" : true
      },
      "documentation" : [ "The ID of the first volume to list.", "This can be useful for paging results.", "By default, this starts at the lowest VolumeID." ]
    }, {
      "name" : "limit",
      "type" : {
        "name" : "size_t",
        "optional" : true
      },
      "default" : 10000,
      "documentation" : [ "The maximum number of volumes to return from the API." ]
    }, {
      "name" : "volumeStatus",
      "type" : {
        "name" : "VolumeStatus",
        "optional" : true
      },
      "documentation" : [ "If specified, filter to only volumes with the provided status.", "By default, list all volumes." ]
    }, {
      "name" : "accounts",
      "type" : {
        "name" : [ "AccountID" ],
        "optional" : true
      },
      "documentation" : [ "If specified, only fetch volumes which belong to the provided accounts.", "By default, list volumes for all accounts." ]
    }, {
      "name" : "isPaired",
      "type" : {
        "name" : "boolean",
        "optional" : true
      },
      "documentation" : [ "If specified, only fetch volumes which are paired (if true) or non-paired (if false).", "By default, list all volumes regardless of their pairing status." ]
    }, {
      "name" : "volumeIDs",
      "type" : {
        "name" : [ "VolumeID" ],
        "optional" : true
      },
      "since" : "9.0",
      "documentation" : [ "If specified, only fetch volumes specified in this list.", "This option cannot be specified if startVolumeID, limit, or accounts option is specified." ]
    } ],
    "returnInfo" : {
      "type" : "ListVolumesResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListVolumesForAccount",
    "release" : "Public",
    "documentation" : [ "ListVolumesForAccount returns the list of active AND (pending) deleted volumes for an account." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "deprecated" : {
      "version" : "8.0",
      "message" : "Use ListVolumes instead."
    },
    "params" : [ {
      "name" : "accountID",
      "type" : "AccountID",
      "documentation" : "The ID of the account to list the volumes for."
    }, {
      "name" : "startVolumeID",
      "type" : {
        "name" : "VolumeID",
        "optional" : true
      },
      "documentation" : [ "The ID of the first volume to list.", "This can be useful for paging results.", "By default, this starts at the lowest VolumeID." ]
    }, {
      "name" : "limit",
      "type" : {
        "name" : "size_t",
        "optional" : true
      },
      "default" : 10000,
      "documentation" : [ "The maximum number of volumes to return from the API." ]
    } ],
    "returnInfo" : {
      "type" : "ListVolumesForAccountResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListVolumeStatsByAccount",
    "release" : "Public",
    "documentation" : [ "ListVolumeStatsByAccount returns high-level activity measurements for every account.", "Values are summed from all the volumes owned by the account." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListVolumeStatsByAccountResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListVolumeStatsByVolume",
    "release" : "Public",
    "documentation" : [ "ListVolumeStatsByVolume returns high-level activity measurements for every volume, by volume.", "Values are cumulative from the creation of the volume." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ ],
    "returnInfo" : {
      "type" : "ListVolumeStatsByVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ListVolumeStatsByVolumeAccessGroup",
    "release" : "Public",
    "documentation" : [ "ListVolumeStatsByVolumeAccessGroup is used to get total activity measurements for all of the volumes that are a member of the specified volume access group(s)." ],
    "security" : {
      "groups" : [ "read" ]
    },
    "params" : [ {
      "name" : "volumeAccessGroups",
      "type" : {
        "name" : [ "VolumeAccessGroupID" ],
        "optional" : true
      },
      "documentation" : [ "An array of VolumeAccessGroupIDs for which volume activity is returned.", "If no VolumeAccessGroupID is specified, stats for all volume access groups is returned." ]
    } ],
    "returnInfo" : {
      "type" : "ListVolumeStatsByVolumeAccessGroupResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "ModifyVolume",
    "release" : "Public",
    "documentation" : [ "ModifyVolume is used to modify settings on an existing volume.", "Modifications can be made to one volume at a time and changes take place immediately.", "If an optional parameter is left unspecified, the value will not be changed.", "<br/><br/>", "Extending the size of a volume that is being replicated should be done in an order.", "The target (Replication Target) volume should first be increased in size, then the source (Read/Write) volume can be resized.", "It is recommended that both the target and the source volumes be the same size.", "<br/><br/>", "<b>Note</b>: If you change access status to locked or target all existing iSCSI connections are terminated." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "VolumeID for the volume to be modified."
    }, {
      "name" : "accountID",
      "type" : {
        "name" : "AccountID",
        "optional" : true
      },
      "documentation" : [ "AccountID to which the volume is reassigned.", "If none is specified, the previous account name is used." ]
    }, {
      "name" : "access",
      "type" : {
        "name" : "VolumeAccess",
        "optional" : true
      },
      "documentation" : [ "Access allowed for the volume.", "<br/><b>readOnly</b>: Only read operations are allowed.", "<br/><b>readWrite</b>: Reads and writes are allowed.", "<br/><b>locked</b>: No reads or writes are allowed.", "<br/><b>replicationTarget</b>: Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is locked.", "<br/><br/>", "If unspecified, the access settings of the clone will be the same as the source." ]
    }, {
      "name" : "qos",
      "type" : {
        "name" : "QoS",
        "optional" : true
      },
      "documentation" : "New quality of service settings for this volume."
    }, {
      "name" : "totalSize",
      "type" : {
        "name" : "uint64",
        "optional" : true
      },
      "documentation" : [ "New size of the volume in bytes.", "Size is rounded up to the nearest 1MiB size.", "This parameter can only be used to *increase* the size of a volume." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "ModifyVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "PurgeDeletedVolume",
    "release" : "Public",
    "documentation" : [ "PurgeDeletedVolume immediately and permanently purges a volume which has been deleted.", "A volume must be deleted using DeleteVolume before it can be purged.", "Volumes are purged automatically after a period of time, so usage of this method is not typically required." ],
    "security" : {
      "groups" : [ "write" ]
    },
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "The ID of the volume to purge."
    } ],
    "returnInfo" : {
      "type" : "PurgeDeletedVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "RestoreDeletedVolume",
    "release" : "Public",
    "documentation" : [ "RestoreDeletedVolume marks a deleted volume as active again.", "This action makes the volume immediately available for iSCSI connection." ],
    "security" : {
      "groups" : [ "volumes", "write" ]
    },
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "VolumeID for the deleted volume to restore."
    } ],
    "returnInfo" : {
      "type" : "RestoreDeletedVolumeResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "StartBulkVolumeRead",
    "release" : "Public",
    "documentation" : [ "StartBulkVolumeRead allows you to initialize a bulk volume read session on a specified volume.", "Only two bulk volume processes can run simultaneously on a volume.", "When you initialize the session, data is read from a SolidFire storage volume for the purposes of storing the data on an external backup source.", "The external data is accessed by a web server running on a SolidFire node.", "Communications and server interaction information for external data access is passed by a script running on the SolidFire storage system.<br/>", "<br/>", "At the start of a bulk volume read operation, a snapshot of the volume is made and the snapshot is deleted when the read has completed.", "You can also read a snapshot of the volume by entering the ID of the snapshot as a parameter.", "Reading a previous snapshot does not create a new snapshot of the volume, nor does the previous snapshot be deleted when the read completes.<br/>", "<br/>", "<b>Note</b>: This process creates a new snapshot if the ID of an existing snapshot is not provided.", "Snapshots can be created if cluster fullness is at stage 2 or 3.", "Snapshots are not created when cluster fullness is at stage 4 or 5." ],
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "ID of the volume to be read."
    }, {
      "name" : "format",
      "type" : "string",
      "documentation" : [ "The format of the volume data. Can be either:", "<br/><b>uncompressed</b>: every byte of the volume is returned without any compression.", "<br/><b>native</b>: opaque data is returned that is smaller and more efficiently stored and written on a subsequent bulk volume write." ]
    }, {
      "name" : "snapshotID",
      "type" : {
        "name" : "SnapshotID",
        "optional" : true
      },
      "documentation" : [ "ID of a previously created snapshot used for bulk volume reads.", "If no ID is entered, a snapshot of the current active volume image is made." ]
    }, {
      "name" : "script",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Executable name of a script.", "If no script name is given then the key and URL is necessary to access SolidFire nodes.", "The script is run on the primary node and the key and URL is returned to the script so the local web server can be contacted." ]
    }, {
      "name" : "scriptParameters",
      "type" : {
        "name" : "Object",
        "optional" : true
      },
      "documentation" : [ "JSON parameters to pass to the script." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "JSON attributes for the bulk volume job." ]
    } ],
    "returnInfo" : {
      "type" : "StartBulkVolumeReadResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "StartBulkVolumeWrite",
    "release" : "Public",
    "documentation" : [ "StartBulkVolumeWrite allows you to initialize a bulk volume write session on a specified volume.", "Only two bulk volume processes can run simultaneously on a volume.", "When the session is initialized, data can be written to a SolidFire storage volume from an external backup source.", "The external data is accessed by a web server running on a SolidFire node.", "Communications and server interaction information for external data access is passed by a script running on the SolidFire storage system." ],
    "params" : [ {
      "name" : "volumeID",
      "type" : "VolumeID",
      "documentation" : "ID of the volume to be written to."
    }, {
      "name" : "format",
      "type" : "string",
      "documentation" : [ "The format of the volume data. Can be either:", "<br/><b>uncompressed</b>: every byte of the volume is returned without any compression.", "<br/><b>native</b>: opaque data is returned that is smaller and more efficiently stored and written on a subsequent bulk volume write" ]
    }, {
      "name" : "script",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Executable name of a script.", "If no script name is given then the key and URL are necessary to access SolidFire nodes.", "The script runs on the primary node and the key and URL is returned to the script so the local web server can be contacted." ]
    }, {
      "name" : "scriptParameters",
      "type" : {
        "name" : "Object",
        "optional" : true
      },
      "documentation" : [ "JSON parameters to pass to the script." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "JSON attributes for the bulk volume job." ]
    } ],
    "returnInfo" : {
      "type" : "StartBulkVolumeWriteResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "UpdateBulkVolumeStatus",
    "release" : "Public",
    "documentation" : [ "You can use UpdateBulkVolumeStatus in a script to return to the SolidFire system the status of a bulk volume job that you have started with the \"StartBulkVolumeRead\" or \"StartBulkVolumeWrite\" methods." ],
    "params" : [ {
      "name" : "key",
      "type" : "string",
      "documentation" : "The key assigned during initialization of a \"StartBulkVolumeRead\" or \"StartBulkVolumeWrite\" session."
    }, {
      "name" : "status",
      "type" : "string",
      "documentation" : [ "The SolidFire system sets the status of the given bulk volume job.<br/>", "Possible values:<br/>", "<br/><b>running</b>: jobs that are still active.", "<br/><b>complete</b>: jobs that are done. failed - jobs that have failed.", "<br/><b>failed</b>: jobs that have failed." ]
    }, {
      "name" : "percentComplete",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "The completed progress of the bulk volume job as a percentage." ]
    }, {
      "name" : "message",
      "type" : {
        "name" : "string",
        "optional" : true
      },
      "documentation" : [ "Returns the status of the bulk volume job when the job has completed." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : [ "JSON attributes  updates what is on the bulk volume job." ]
    } ],
    "returnInfo" : {
      "type" : "UpdateBulkVolumeStatusResult"
    },
    "objectGroup" : "Volume"
  }, {
    "name" : "CreateVolumeAccessGroup",
    "release" : "Public",
    "documentation" : [ "Creates a new volume access group.", "The new volume access group must be given a name when it is created.", "Entering initiators and volumes are optional when creating a volume access group.", "Once the group is created volumes and initiator IQNs can be added.", "Any initiator IQN that is successfully added to the volume access group is able to access any volume in the group without CHAP authentication." ],
    "params" : [ {
      "name" : "name",
      "type" : "Name",
      "documentation" : [ "Name of the volume access group.", "It is not required to be unique, but recommended." ]
    }, {
      "name" : "initiators",
      "type" : {
        "name" : [ "Iqn" ],
        "optional" : true
      },
      "documentation" : [ "List of initiators to include in the volume access group.", "If unspecified, the access group will start out without configured initiators." ]
    }, {
      "name" : "volumes",
      "type" : {
        "name" : [ "VolumeID" ],
        "optional" : true
      },
      "documentation" : [ "List of volumes to initially include in the volume access group.", "If unspecified, the access group will start without any volumes." ]
    }, {
      "name" : "virtualNetworkID",
      "type" : {
        "name" : [ "VirtualNetworkID" ],
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : "The ID of the SolidFire Virtual Network ID to associate the volume access group with."
    }, {
      "name" : "virtualNetworkTags",
      "type" : {
        "name" : [ "VirtualNetworkTags" ],
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : "The ID of the VLAN Virtual Network Tag to associate the volume access group with."
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "CreateVolumeAccessGroupResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "ListVolumeAccessGroups",
    "release" : "Public",
    "documentation" : [ "ListVolumeAccessGroups is used to return information about the volume access groups that are currently in the system." ],
    "params" : [ {
      "name" : "startVolumeAccessGroupID",
      "type" : {
        "name" : "VolumeAccessGroupID",
        "optional" : true
      },
      "documentation" : [ "The lowest VolumeAccessGroupID to return.", "This can be useful for paging.", "If unspecified, there is no lower limit (implicitly 0)." ]
    }, {
      "name" : "limit",
      "type" : {
        "name" : "integer",
        "optional" : true
      },
      "default" : 10000,
      "documentation" : [ "The maximum number of results to return.", "This can be useful for paging." ]
    } ],
    "returnInfo" : {
      "type" : "ListVolumeAccessGroupsResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "DeleteVolumeAccessGroup",
    "release" : "Public",
    "documentation" : "Delete a volume access group from the system.",
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : [ "The ID of the volume access group to delete." ]
    } ],
    "returnInfo" : {
      "type" : "DeleteVolumeAccessGroupResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "ModifyVolumeAccessGroup",
    "release" : "Public",
    "documentation" : [ "Update initiators and add or remove volumes from a volume access group.", "A specified initiator or volume that duplicates an existing volume or initiator in a volume access group is left as-is.", "If a value is not specified for volumes or initiators, the current list of initiators and volumes are not changed.", "<br/><br/>", "Often, it is easier to use the convenience functions to modify initiators and volumes independently:", "<br/><br/>", "AddInitiatorsToVolumeAccessGroup<br/>", "RemoveInitiatorsFromVolumeAccessGroup<br/>", "AddVolumesToVolumeAccessGroup<br/>", "RemoveVolumesFromVolumeAccessGroup<br/>" ],
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "The ID of the volume access group to modify."
    }, {
      "name" : "virtualNetworkID",
      "type" : {
        "name" : [ "VirtualNetworkID" ],
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : "The ID of the SolidFire Virtual Network ID to associate the volume access group with."
    }, {
      "name" : "virtualNetworkTags",
      "type" : {
        "name" : [ "VirtualNetworkTags" ],
        "optional" : true
      },
      "since" : "8.0",
      "documentation" : "The ID of the VLAN Virtual Network Tag to associate the volume access group with."
    }, {
      "name" : "name",
      "type" : {
        "name" : "Name",
        "optional" : true
      },
      "documentation" : [ "Name of the volume access group.", "It is not required to be unique, but recommended." ]
    }, {
      "name" : "initiators",
      "type" : {
        "name" : [ "Iqn" ],
        "optional" : true
      },
      "documentation" : [ "List of initiators to include in the volume access group.", "If unspecified, the access group's configured initiators will not be modified." ]
    }, {
      "name" : "volumes",
      "type" : {
        "name" : [ "VolumeID" ],
        "optional" : true
      },
      "documentation" : [ "List of volumes to initially include in the volume access group.", "If unspecified, the access group's volumes will not be modified." ]
    }, {
      "name" : "attributes",
      "type" : {
        "name" : "Attributes",
        "optional" : true
      },
      "documentation" : "List of Name/Value pairs in JSON object format."
    } ],
    "returnInfo" : {
      "type" : "ModifyVolumeAccessGroupResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "AddInitiatorsToVolumeAccessGroup",
    "release" : "Public",
    "documentation" : "Add initiators to a volume access group.",
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "The ID of the volume access group to modify."
    }, {
      "name" : "initiators",
      "type" : [ "Iqn" ],
      "documentation" : [ "List of initiators to add to the volume access group." ]
    } ],
    "returnInfo" : {
      "type" : "ModifyVolumeAccessGroupResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "RemoveInitiatorsFromVolumeAccessGroup",
    "release" : "Public",
    "documentation" : "Remove initiators from a volume access group.",
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "The ID of the volume access group to modify."
    }, {
      "name" : "initiators",
      "type" : [ "Iqn" ],
      "documentation" : [ "List of initiators to remove from the volume access group." ]
    } ],
    "returnInfo" : {
      "type" : "ModifyVolumeAccessGroupResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "AddVolumesToVolumeAccessGroup",
    "release" : "Public",
    "documentation" : "Add volumes to a volume access group.",
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "The ID of the volume access group to modify."
    }, {
      "name" : "volumes",
      "type" : [ "VolumeID" ],
      "documentation" : [ "List of volumes to add to this volume access group." ]
    } ],
    "returnInfo" : {
      "type" : "ModifyVolumeAccessGroupResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "RemoveVolumesFromVolumeAccessGroup",
    "release" : "Public",
    "documentation" : "Remove volumes from a volume access group.",
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "The ID of the volume access group to modify."
    }, {
      "name" : "volumes",
      "type" : [ "VolumeID" ],
      "documentation" : [ "List of volumes to remove from this volume access group." ]
    } ],
    "returnInfo" : {
      "type" : "ModifyVolumeAccessGroupResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "GetVolumeAccessGroupEfficiency",
    "release" : "Public",
    "documentation" : "GetVolumeAccessGroupEfficiency is used to retrieve efficiency information about a volume access group. Only the volume access group provided as parameters in this API method is used to compute the capacity.",
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "Specifies the volume access group for which capacity is computed."
    } ],
    "returnInfo" : {
      "type" : "GetEfficiencyResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "GetVolumeAccessGroupLunAssignments",
    "release" : "Public",
    "documentation" : "The GetVolumeAccessGroupLunAssignments is used to return information LUN mappings of a specified volume access group.",
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "Unique volume access group ID used to return information."
    } ],
    "returnInfo" : {
      "type" : "GetVolumeAccessGroupLunAssignmentsResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "ModifyVolumeAccessGroupLunAssignments",
    "release" : "Public",
    "documentation" : [ "The ModifytVolumeAccessGroupLunAssignments is used to define custom LUN assignments for specific volumes. Only LUN values set on the lunAssignments parameter will be changed in the volume access group. All other LUN assignments will remain unchanged.", "<br/><br/>", "LUN assignment values must be unique for volumes in a volume access group. An exception will be seen if LUN assignments are duplicated in a volume access group. However, the same LUN values can be used again in different volume access groups.", "<br/><br/>", "<b>Note:</b> Correct LUN values are 0 - 16383. An exception will be seen if an incorrect LUN value is passed. None of the specified LUN assignments will be modified if there is an exception.", "<br/><br/>", "<b>Caution:</b> If a LUN assignment is changed for a volume with active I/O, the I/O could be disrupted. Changes to the server configuration may be required in order to change volume LUN assignments." ],
    "params" : [ {
      "name" : "volumeAccessGroupID",
      "type" : "VolumeAccessGroupID",
      "documentation" : "Unique volume access group ID for which the LUN assignments will be modified."
    }, {
      "name" : "lunAssignments",
      "type" : [ "LunAssignment" ],
      "documentation" : "The volume IDs with new assigned LUN values."
    } ],
    "returnInfo" : {
      "type" : "ModifyVolumeAccessGroupLunAssignmentsResult"
    },
    "objectGroup" : "VolumeAccessGroup"
  }, {
    "name" : "CreateDatabaseEntry",
    "documentation" : "Creates a new database entry",
    "params" : [ {
      "name" : "path",
      "type" : "DatabasePath",
      "documentation" : "The path of the new entry"
    }, {
      "name" : "data",
      "type" : {
        "name" : "DatabaseData",
        "optional" : true
      },
      "documentation" : "Initial data of the entry"
    } ],
    "returnInfo" : {
      "type" : "CreateDatabaseEntryResult"
    },
    "objectGroup" : "ZooKeeper"
  }, {
    "name" : "DeleteDatabaseEntry",
    "documentation" : "Deletes an existing database entry",
    "params" : [ {
      "name" : "path",
      "type" : "DatabasePath"
    }, {
      "name" : "dataVersion",
      "type" : "DatabaseVersion"
    } ],
    "returnInfo" : {
      "type" : "DeleteDatabaseEntryResult"
    },
    "objectGroup" : "ZooKeeper"
  }, {
    "name" : "GetDatabaseEntry",
    "documentation" : "Gets an entry from the database",
    "params" : [ {
      "name" : "path",
      "type" : "DatabasePath",
      "documentation" : "The path of the database entry"
    } ],
    "returnInfo" : {
      "type" : "DatabaseEntryResult"
    },
    "objectGroup" : "ZooKeeper"
  }, {
    "name" : "SetDatabaseEntry",
    "documentation" : "Sets the contents of an existing database entry",
    "params" : [ {
      "name" : "path",
      "type" : "DatabasePath"
    }, {
      "name" : "dataVersion",
      "type" : "DatabaseVersion"
    }, {
      "name" : "data",
      "type" : "DatabaseData"
    } ],
    "returnInfo" : {
      "type" : "DatabaseEntryResult"
    },
    "objectGroup" : "ZooKeeper"
  }, {
    "name" : "ListDatabaseChildren",
    "documentation" : "Returns a list of the names of the children for a database path",
    "params" : [ {
      "name" : "path",
      "type" : "DatabasePath"
    } ],
    "returnInfo" : {
      "type" : "ListDatabaseChildrenResult"
    },
    "objectGroup" : "ZooKeeper"
  }, {
    "name" : "ListDatabaseChildrenData",
    "documentation" : "Returns the data for all children in a database path",
    "params" : [ {
      "name" : "path",
      "type" : "DatabasePath"
    } ],
    "returnInfo" : {
      "type" : "ListDatabaseChildrenDataResult"
    },
    "objectGroup" : "ZooKeeper"
  } ]
}